; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\modbus.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\modbus.d --feedback=.\EXE\UKU_VD.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_VD -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x --omf_browse=.\EXE\modbus.crf modbus.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC16_2 PROC
;;;233    //-----------------------------------------------
;;;234    unsigned short CRC16_2(char* buf, short len)
000000  b570              PUSH     {r4-r6,lr}
;;;235    {
000002  4605              MOV      r5,r0
;;;236    unsigned short crc = 0xFFFF;
000004  f64f70ff          MOV      r0,#0xffff
;;;237    short pos;
;;;238    short i;
;;;239    
;;;240    for (pos = 0; pos < len; pos++)
000008  f04f0300          MOV      r3,#0
;;;241      	{
;;;242        	crc ^= (unsigned short)buf[pos];          // XOR byte into least sig. byte of crc
;;;243    
;;;244        	for ( i = 8; i != 0; i--) 
;;;245    		{    // Loop over each bit
;;;246          	if ((crc & 0x0001) != 0) 
;;;247    			{      // If the LSB is set
;;;248            		crc >>= 1;                    // Shift right and XOR 0xA001
;;;249            		crc ^= 0xA001;
00000c  f24a0401          MOV      r4,#0xa001
000010  e015              B        |L1.62|
                  |L1.18|
000012  5cea              LDRB     r2,[r5,r3]            ;242
000014  ea820000          EOR      r0,r2,r0              ;242
000018  f04f0208          MOV      r2,#8                 ;244
                  |L1.28|
00001c  07c6              LSLS     r6,r0,#31             ;246
00001e  d004              BEQ      |L1.42|
000020  ea4f0050          LSR      r0,r0,#1              ;248
000024  ea800004          EOR      r0,r0,r4
000028  e001              B        |L1.46|
                  |L1.42|
;;;250          		}
;;;251          	else  crc >>= 1;                    // Just shift right
00002a  ea4f0050          LSR      r0,r0,#1
                  |L1.46|
00002e  f1a20201          SUB      r2,r2,#1              ;244
000032  b212              SXTH     r2,r2                 ;244
000034  2a00              CMP      r2,#0                 ;244
000036  d1f1              BNE      |L1.28|
000038  f1030301          ADD      r3,r3,#1              ;240
00003c  b21b              SXTH     r3,r3                 ;240
                  |L1.62|
00003e  428b              CMP      r3,r1                 ;240
000040  dbe7              BLT      |L1.18|
;;;252        		}
;;;253      	}
;;;254      // Note, this number has low and high bytes swapped, so use it accordingly (or swap bytes)
;;;255    return crc;
;;;256    }
000042  bd70              POP      {r4-r6,pc}
;;;257    
                          ENDP

                  modbus_hold_registers_transmit PROC
;;;1026   //-----------------------------------------------
;;;1027   void modbus_hold_registers_transmit(unsigned char adr,unsigned char func,unsigned short reg_adr,unsigned short reg_quantity, char prot)
000044  b5f0              PUSH     {r4-r7,lr}
;;;1028   {
000046  b0a7              SUB      sp,sp,#0x9c
000048  461d              MOV      r5,r3
00004a  9b2c              LDR      r3,[sp,#0xb0]
00004c  4604              MOV      r4,r0
00004e  460f              MOV      r7,r1
;;;1029   signed char modbus_registers[150];
;;;1030   //char modbus_tx_buff[150];
;;;1031   unsigned short crc_temp;
;;;1032   char i;
;;;1033   
;;;1034   modbus_registers[20]=(char)((LPC_RTC->YEAR)>>8);			//Рег11  Время, год
000050  48ff              LDR      r0,|L1.1104|
000052  8b81              LDRH     r1,[r0,#0x1c]
000054  ea4f2111          LSR      r1,r1,#8
000058  f88d1018          STRB     r1,[sp,#0x18]
;;;1035   modbus_registers[21]=(char)((LPC_RTC->YEAR));
00005c  8b81              LDRH     r1,[r0,#0x1c]
00005e  f88d1019          STRB     r1,[sp,#0x19]
;;;1036   modbus_registers[22]=(char)((LPC_RTC->MONTH)>>8);		//Рег12  Время, месяц
000062  7e01              LDRB     r1,[r0,#0x18]
000064  f04f0100          MOV      r1,#0
000068  f88d101a          STRB     r1,[sp,#0x1a]
;;;1037   modbus_registers[23]=(char)((LPC_RTC->MONTH));
00006c  7e06              LDRB     r6,[r0,#0x18]
00006e  f88d601b          STRB     r6,[sp,#0x1b]
;;;1038   modbus_registers[24]=(char)((LPC_RTC->DOM)>>8);			//Рег13  Время, день месяца
000072  7b06              LDRB     r6,[r0,#0xc]
000074  f88d101c          STRB     r1,[sp,#0x1c]
;;;1039   modbus_registers[25]=(char)((LPC_RTC->DOM));
000078  7b06              LDRB     r6,[r0,#0xc]
00007a  f88d601d          STRB     r6,[sp,#0x1d]
;;;1040   modbus_registers[26]=(char)((LPC_RTC->HOUR)>>8);			//Рег14  Время, час
00007e  7a06              LDRB     r6,[r0,#8]
000080  f88d101e          STRB     r1,[sp,#0x1e]
;;;1041   modbus_registers[27]=(char)((LPC_RTC->HOUR));
000084  7a06              LDRB     r6,[r0,#8]
000086  f88d601f          STRB     r6,[sp,#0x1f]
;;;1042   modbus_registers[28]=(char)((LPC_RTC->MIN)>>8);			//Рег15  Время, минуты
00008a  7906              LDRB     r6,[r0,#4]
00008c  f88d1020          STRB     r1,[sp,#0x20]
;;;1043   modbus_registers[29]=(char)((LPC_RTC->MIN));
000090  7906              LDRB     r6,[r0,#4]
000092  f88d6021          STRB     r6,[sp,#0x21]
;;;1044   modbus_registers[30]=(char)((LPC_RTC->SEC)>>8);			//Рег16  Время, секунды
000096  7806              LDRB     r6,[r0,#0]
000098  f88d1022          STRB     r1,[sp,#0x22]
;;;1045   modbus_registers[31]=(char)((LPC_RTC->SEC));
00009c  7800              LDRB     r0,[r0,#0]
00009e  f88d0023          STRB     r0,[sp,#0x23]
;;;1046   modbus_registers[38]=(char)(NUMIST>>8);				//Рег20  Количество выпрямителей в структуре
0000a2  48ec              LDR      r0,|L1.1108|
0000a4  8800              LDRH     r0,[r0,#0]  ; NUMIST
0000a6  ea4f2120          ASR      r1,r0,#8
0000aa  f88d102a          STRB     r1,[sp,#0x2a]
;;;1047   modbus_registers[39]=(char)(NUMIST);
0000ae  f88d002b          STRB     r0,[sp,#0x2b]
;;;1048   //modbus_registers[40]=(char)(PAR>>8);					//Рег21  Параллельная работа выпрямителей вкл./выкл.
;;;1049   //modbus_registers[41]=(char)(PAR);
;;;1050   modbus_registers[42]=(char)(ZV_ON>>8);					//Рег22  Звуковая аварийная сигнализация вкл./выкл.
0000b2  48e9              LDR      r0,|L1.1112|
0000b4  8800              LDRH     r0,[r0,#0]  ; ZV_ON
0000b6  ea4f2120          ASR      r1,r0,#8
0000ba  f88d102e          STRB     r1,[sp,#0x2e]
;;;1051   modbus_registers[43]=(char)(ZV_ON);
0000be  f88d002f          STRB     r0,[sp,#0x2f]
;;;1052   modbus_registers[46]=(char)(UBM_AV>>8);				//Рег24  Аварийный уровень отклонения напряжения средней точки батареи, %
0000c2  48e6              LDR      r0,|L1.1116|
0000c4  8800              LDRH     r0,[r0,#0]  ; UBM_AV
0000c6  ea4f2120          ASR      r1,r0,#8
0000ca  f88d1032          STRB     r1,[sp,#0x32]
;;;1053   modbus_registers[47]=(char)(UBM_AV);
0000ce  f88d0033          STRB     r0,[sp,#0x33]
;;;1054   modbus_registers[58]=(char)(TBAT>>8);					//Рег30  Период проверки цепи батареи, минут.
0000d2  48e3              LDR      r0,|L1.1120|
0000d4  8800              LDRH     r0,[r0,#0]  ; TBAT
0000d6  ea4f2120          ASR      r1,r0,#8
0000da  f88d103e          STRB     r1,[sp,#0x3e]
;;;1055   modbus_registers[59]=(char)(TBAT);
0000de  f88d003f          STRB     r0,[sp,#0x3f]
;;;1056   modbus_registers[60]=(char)(UMAX>>8);					//Рег31  Максимальное (аварийное) напряжение выпрямителей, 0.1В
0000e2  48e0              LDR      r0,|L1.1124|
0000e4  8800              LDRH     r0,[r0,#0]  ; UMAX
0000e6  ea4f2120          ASR      r1,r0,#8
0000ea  f88d1040          STRB     r1,[sp,#0x40]
;;;1057   modbus_registers[61]=(char)(UMAX);
0000ee  f88d0041          STRB     r0,[sp,#0x41]
;;;1058   //modbus_registers[62]=(char)((UB20-DU)>>8);				//Рег32  Минимальное (аварийное) напряжение выпрямителей, 0.1В
;;;1059   //modbus_registers[63]=(char)((UB20-DU));
;;;1060   //modbus_registers[64]=(char)(UB0>>8);					//Рег33  Напряжение содержания батареи при 0гЦ, 0.1В
;;;1061   //modbus_registers[65]=(char)(UB0);
;;;1062   //modbus_registers[66]=(char)(UB20>>8);					//Рег34  Напряжение содержания батареи при 20гЦ, 0.1В
;;;1063   //modbus_registers[67]=(char)(UB20);
;;;1064   modbus_registers[68]=(char)(USIGN>>8);					//Рег35  Минимальное (сигнальное) напряжение батареи, 1В
0000f2  48dd              LDR      r0,|L1.1128|
0000f4  8800              LDRH     r0,[r0,#0]  ; USIGN
0000f6  ea4f2120          ASR      r1,r0,#8
0000fa  f88d1048          STRB     r1,[sp,#0x48]
;;;1065   modbus_registers[69]=(char)(USIGN);
0000fe  f88d0049          STRB     r0,[sp,#0x49]
;;;1066   modbus_registers[70]=(char)(UMN>>8);					//Рег36  Минимальное (аварийное) напряжение питающей сети, 1В
000102  48da              LDR      r0,|L1.1132|
000104  8800              LDRH     r0,[r0,#0]  ; UMN
000106  ea4f2120          ASR      r1,r0,#8
00010a  f88d104a          STRB     r1,[sp,#0x4a]
;;;1067   modbus_registers[71]=(char)(UMN);
00010e  f88d004b          STRB     r0,[sp,#0x4b]
;;;1068   modbus_registers[72]=(char)(U0B>>8);					//Рег37  Рабочее напряжение при невведенных батареях, 0.1В
000112  48d7              LDR      r0,|L1.1136|
000114  8800              LDRH     r0,[r0,#0]  ; U0B
000116  ea4f2120          ASR      r1,r0,#8
00011a  f88d104c          STRB     r1,[sp,#0x4c]
;;;1069   modbus_registers[73]=(char)(U0B);
00011e  f88d004d          STRB     r0,[sp,#0x4d]
;;;1070   modbus_registers[74]=(char)(IKB>>8);					//Рег38  Ток контроля наличия батареи, 0.1а
000122  48d4              LDR      r0,|L1.1140|
000124  8800              LDRH     r0,[r0,#0]  ; IKB
000126  ea4f2120          ASR      r1,r0,#8
00012a  f88d104e          STRB     r1,[sp,#0x4e]
;;;1071   modbus_registers[75]=(char)(IKB);
00012e  f88d004f          STRB     r0,[sp,#0x4f]
;;;1072   modbus_registers[76]=(char)(IZMAX>>8);					//Рег39  Ток заряда батареи максимальный, 0.1А
000132  48d1              LDR      r0,|L1.1144|
000134  8800              LDRH     r0,[r0,#0]  ; IZMAX
000136  ea4f2120          ASR      r1,r0,#8
00013a  f88d1050          STRB     r1,[sp,#0x50]
;;;1073   modbus_registers[77]=(char)(IZMAX);
00013e  f88d0051          STRB     r0,[sp,#0x51]
;;;1074   modbus_registers[78]=(char)(IMAX>>8);					//Рег40  Ток переключения на большее кол-во выпрямителей, 0.1А
000142  48ce              LDR      r0,|L1.1148|
000144  8800              LDRH     r0,[r0,#0]  ; IMAX
000146  ea4f2120          ASR      r1,r0,#8
00014a  f88d1052          STRB     r1,[sp,#0x52]
;;;1075   modbus_registers[79]=(char)(IMAX);
00014e  f88d0053          STRB     r0,[sp,#0x53]
;;;1076   modbus_registers[80]=(char)(IMIN>>8);					//Рег41  Ток переключения на меньшее кол-во выпрямителей, 0.1А
000152  48cb              LDR      r0,|L1.1152|
000154  8800              LDRH     r0,[r0,#0]  ; IMIN
000156  ea4f2120          ASR      r1,r0,#8
00015a  f88d1054          STRB     r1,[sp,#0x54]
;;;1077   modbus_registers[81]=(char)(IMIN);
00015e  f88d0055          STRB     r0,[sp,#0x55]
;;;1078   //modbus_registers[82]=(char)(UVZ>>8);					//Рег42  Напряжение выравнивающего заряда, 0.1В
;;;1079   //modbus_registers[83]=(char)(UVZ);
;;;1080   modbus_registers[84]=(char)(TZAS>>8);					//Рег43  Время задержки включения выпрямителей, сек
000162  48c8              LDR      r0,|L1.1156|
000164  8800              LDRH     r0,[r0,#0]  ; TZAS
000166  ea4f2120          ASR      r1,r0,#8
00016a  f88d1058          STRB     r1,[sp,#0x58]
;;;1081   modbus_registers[85]=(char)(TZAS);
00016e  f88d0059          STRB     r0,[sp,#0x59]
;;;1082   modbus_registers[86]=(char)(TMAX>>8);					//Рег44  Температура выпрямителей аварийная, 1гЦ
000172  48c5              LDR      r0,|L1.1160|
000174  8800              LDRH     r0,[r0,#0]  ; TMAX
000176  ea4f2120          ASR      r1,r0,#8
00017a  f88d105a          STRB     r1,[sp,#0x5a]
;;;1083   modbus_registers[87]=(char)(TMAX);
00017e  f88d005b          STRB     r0,[sp,#0x5b]
;;;1084   modbus_registers[88]=(char)(TSIGN>>8);					//Рег45  Температура выпрямителей сигнальная, 1гЦ
000182  48c2              LDR      r0,|L1.1164|
000184  8800              LDRH     r0,[r0,#0]  ; TSIGN
000186  ea4f2120          ASR      r1,r0,#8
00018a  f88d105c          STRB     r1,[sp,#0x5c]
;;;1085   modbus_registers[89]=(char)(TSIGN);
00018e  f88d005d          STRB     r0,[sp,#0x5d]
;;;1086   modbus_registers[90]=(char)(TBATMAX>>8);				//Рег46  Температура батареи аварийная, 1гЦ
000192  48bf              LDR      r0,|L1.1168|
000194  8800              LDRH     r0,[r0,#0]  ; TBATMAX
000196  ea4f2120          ASR      r1,r0,#8
00019a  f88d105e          STRB     r1,[sp,#0x5e]
;;;1087   modbus_registers[91]=(char)(TBATMAX);
00019e  f88d005f          STRB     r0,[sp,#0x5f]
;;;1088   modbus_registers[92]=(char)(TBATSIGN>>8);				//Рег47  Температура батареи сигнальная, 1гЦ
0001a2  48bc              LDR      r0,|L1.1172|
0001a4  8800              LDRH     r0,[r0,#0]  ; TBATSIGN
0001a6  ea4f2120          ASR      r1,r0,#8
0001aa  f88d1060          STRB     r1,[sp,#0x60]
;;;1089   modbus_registers[93]=(char)(TBATSIGN);
0001ae  f88d0061          STRB     r0,[sp,#0x61]
;;;1090   modbus_registers[94]=(char)(speedChrgCurr>>8);					//Рег48  Ток ускоренного заряда, 0.1А
0001b2  48b9              LDR      r0,|L1.1176|
0001b4  8800              LDRH     r0,[r0,#0]  ; speedChrgCurr
0001b6  ea4f2120          ASR      r1,r0,#8
0001ba  f88d1062          STRB     r1,[sp,#0x62]
;;;1091   modbus_registers[95]=(char)(speedChrgCurr);
0001be  f88d0063          STRB     r0,[sp,#0x63]
;;;1092   modbus_registers[96]=(char)(speedChrgVolt>>8);				//Рег49	 Напряжение ускоренного заряда, 0.1В 
0001c2  48b6              LDR      r0,|L1.1180|
0001c4  8800              LDRH     r0,[r0,#0]  ; speedChrgVolt
0001c6  ea4f2120          ASR      r1,r0,#8
0001ca  f88d1064          STRB     r1,[sp,#0x64]
;;;1093   modbus_registers[97]=(char)(speedChrgVolt);
0001ce  f88d0065          STRB     r0,[sp,#0x65]
;;;1094   modbus_registers[98]=(char)(speedChrgTimeInHour>>8);				//Рег50	 Время ускоренного заряда, 1ч
0001d2  48b3              LDR      r0,|L1.1184|
0001d4  8800              LDRH     r0,[r0,#0]  ; speedChrgTimeInHour
0001d6  ea4f2120          ASR      r1,r0,#8
0001da  f88d1066          STRB     r1,[sp,#0x66]
;;;1095   modbus_registers[99]=(char)(speedChrgTimeInHour);
0001de  f88d0067          STRB     r0,[sp,#0x67]
;;;1096   modbus_registers[100]=(char)(U_OUT_KONTR_MAX>>8);					//Рег51	 Контроль выходного напряжения, Umax, 0.1В
0001e2  48b0              LDR      r0,|L1.1188|
0001e4  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_MAX
0001e6  ea4f2120          ASR      r1,r0,#8
0001ea  f88d1068          STRB     r1,[sp,#0x68]
;;;1097   modbus_registers[101]=(char)(U_OUT_KONTR_MAX);
0001ee  f88d0069          STRB     r0,[sp,#0x69]
;;;1098   modbus_registers[102]=(char)(U_OUT_KONTR_MIN>>8);					//Рег52	 Контроль выходного напряжения, Umin, 0.1В
0001f2  48ad              LDR      r0,|L1.1192|
0001f4  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_MIN
0001f6  ea4f2120          ASR      r1,r0,#8
0001fa  f88d106a          STRB     r1,[sp,#0x6a]
;;;1099   modbus_registers[103]=(char)(U_OUT_KONTR_MIN);
0001fe  f88d006b          STRB     r0,[sp,#0x6b]
;;;1100   modbus_registers[104]=(char)(U_OUT_KONTR_DELAY>>8);				//Рег53	 Контроль выходного напряжения, Tзадержки, 1сек.
000202  48aa              LDR      r0,|L1.1196|
000204  8800              LDRH     r0,[r0,#0]  ; U_OUT_KONTR_DELAY
000206  ea4f2120          ASR      r1,r0,#8
00020a  f88d106c          STRB     r1,[sp,#0x6c]
;;;1101   modbus_registers[105]=(char)(U_OUT_KONTR_DELAY);
00020e  f88d006d          STRB     r0,[sp,#0x6d]
;;;1102   
;;;1103   
;;;1104   
;;;1105   
;;;1106   if(prot==MODBUS_RTU_PROT)
;;;1107   	{
;;;1108   	modbus_tx_buff[0]=adr;
;;;1109   	modbus_tx_buff[1]=func;
;;;1110   	modbus_tx_buff[2]=(char)(reg_quantity*2);
;;;1111   	mem_copy((char*)&modbus_tx_buff[3],(char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000212  f1a20201          SUB      r2,r2,#1
000216  a801              ADD      r0,sp,#4              ;1029
000218  eb000142          ADD      r1,r0,r2,LSL #1
00021c  b12b              CBZ      r3,|L1.554|
;;;1112   	
;;;1113   	crc_temp=CRC16_2(modbus_tx_buff,(reg_quantity*2)+3);
;;;1114   
;;;1115   	modbus_tx_buff[3+(reg_quantity*2)]=(char)crc_temp;
;;;1116   	modbus_tx_buff[4+(reg_quantity*2)]=crc_temp>>8;
;;;1117   
;;;1118   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1119   		{
;;;1120   		putchar0(modbus_tx_buff[i]);
;;;1121   		}
;;;1122   
;;;1123   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1124   		{
;;;1125   		putchar_sc16is700(modbus_tx_buff[i]);
;;;1126   		}
;;;1127   	}
;;;1128   else if(prot==MODBUS_TCP_PROT)
00021e  2b01              CMP      r3,#1
000220  d101              BNE      |L1.550|
;;;1129   	{
;;;1130   	modbus_tcp_out_ptr=(char*)&modbus_registers[(reg_adr-1)*2];
000222  48a3              LDR      r0,|L1.1200|
000224  6001              STR      r1,[r0,#0]  ; modbus_tcp_out_ptr
                  |L1.550|
;;;1131   	}
;;;1132   }
000226  b027              ADD      sp,sp,#0x9c
000228  bdf0              POP      {r4-r7,pc}
                  |L1.554|
00022a  4ea2              LDR      r6,|L1.1204|
00022c  7034              STRB     r4,[r6,#0]            ;1108
00022e  7077              STRB     r7,[r6,#1]            ;1109
000230  ea4f0245          LSL      r2,r5,#1              ;1110
000234  70b2              STRB     r2,[r6,#2]            ;1110
000236  f1060003          ADD      r0,r6,#3              ;1111
00023a  f7fffffe          BL       mem_copy
00023e  2003              MOVS     r0,#3                 ;1113
000240  eb000045          ADD      r0,r0,r5,LSL #1       ;1113
000244  b201              SXTH     r1,r0                 ;1113
000246  4630              MOV      r0,r6                 ;1113
000248  f7fffffe          BL       CRC16_2
00024c  eb060145          ADD      r1,r6,r5,LSL #1       ;1115
000250  70c8              STRB     r0,[r1,#3]            ;1115
000252  ea4f2010          LSR      r0,r0,#8              ;1116
000256  7108              STRB     r0,[r1,#4]            ;1116
000258  f04f0400          MOV      r4,#0                 ;1118
00025c  f04f0005          MOV      r0,#5                 ;1118
000260  eb000545          ADD      r5,r0,r5,LSL #1       ;1118
000264  e005              B        |L1.626|
                  |L1.614|
000266  5d30              LDRB     r0,[r6,r4]            ;1120
000268  f7fffffe          BL       putchar0
00026c  f1040401          ADD      r4,r4,#1              ;1118
000270  b2e4              UXTB     r4,r4                 ;1118
                  |L1.626|
000272  42a5              CMP      r5,r4                 ;1118
000274  d8f7              BHI      |L1.614|
000276  f04f0400          MOV      r4,#0                 ;1123
00027a  e005              B        |L1.648|
                  |L1.636|
00027c  5d30              LDRB     r0,[r6,r4]            ;1125
00027e  f7fffffe          BL       putchar_sc16is700
000282  f1040401          ADD      r4,r4,#1              ;1123
000286  b2e4              UXTB     r4,r4                 ;1123
                  |L1.648|
000288  42a5              CMP      r5,r4                 ;1123
00028a  d8f7              BHI      |L1.636|
00028c  e7cb              B        |L1.550|
;;;1133   
                          ENDP

                  modbus_input_registers_transmit PROC
;;;1134   //-----------------------------------------------
;;;1135   void modbus_input_registers_transmit(unsigned char adr,unsigned char func,unsigned short reg_adr,unsigned short reg_quantity, char prot)
00028e  b5f0              PUSH     {r4-r7,lr}
;;;1136   {
000290  b0fd              SUB      sp,sp,#0x1f4
000292  4604              MOV      r4,r0
000294  f8ddc208          LDR      r12,[sp,#0x208]
000298  460f              MOV      r7,r1
00029a  461d              MOV      r5,r3
;;;1137   signed char modbus_registers[500];
;;;1138   //char modbus_tx_buff[200];
;;;1139   unsigned short crc_temp;
;;;1140   char i;
;;;1141   short tempS;
;;;1142   
;;;1143   //tempS=(MODBUS_INPUT_REGS[0]);
;;;1144   modbus_registers[0]=(signed char)(bps[0]._Uii>>8);			//Рег1	Выходное напряжение выпрямителя №1, 0.1В
00029c  4886              LDR      r0,|L1.1208|
00029e  69c1              LDR      r1,[r0,#0x1c]  ; bps
0002a0  ea4f2321          ASR      r3,r1,#8
0002a4  f88d3000          STRB     r3,[sp,#0]
;;;1145   modbus_registers[1]=(signed char)(bps[0]._Uii);
0002a8  f88d1001          STRB     r1,[sp,#1]
;;;1146   modbus_registers[2]=(signed char)(bps[0]._Ii>>8);			//Рег2	Выходной ток выпрямителя №1, 0.1А
0002ac  6a41              LDR      r1,[r0,#0x24]  ; bps
0002ae  ea4f2321          ASR      r3,r1,#8
0002b2  f88d3002          STRB     r3,[sp,#2]
;;;1147   modbus_registers[3]=(signed char)(bps[0]._Ii);
0002b6  f88d1003          STRB     r1,[sp,#3]
;;;1148   modbus_registers[4]=(signed char)(bps[0]._Ti>>8);			//Рег3	Температура радиатора выпрямителя №1, 1гЦ
0002ba  6a81              LDR      r1,[r0,#0x28]  ; bps
0002bc  ea4f2321          ASR      r3,r1,#8
0002c0  f88d3004          STRB     r3,[sp,#4]
;;;1149   modbus_registers[5]=(signed char)(bps[0]._Ti);
0002c4  f88d1005          STRB     r1,[sp,#5]
;;;1150   modbus_registers[6]=(signed char)(bps[0]._av>>8);			//Рег4	Байт флагов выпрямителя №1, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0002c8  f04f0100          MOV      r1,#0
0002cc  f88d1006          STRB     r1,[sp,#6]
;;;1151   modbus_registers[7]=(signed char)(bps[0]._av);
0002d0  7843              LDRB     r3,[r0,#1]  ; bps
0002d2  f88d3007          STRB     r3,[sp,#7]
;;;1152   modbus_registers[8]=(signed char)(bps[1]._Uii>>8);			//Рег5	Выходное напряжение выпрямителя №2, 0.1В
0002d6  f8d03084          LDR      r3,[r0,#0x84]  ; bps
0002da  ea4f2623          ASR      r6,r3,#8
0002de  f88d6008          STRB     r6,[sp,#8]
;;;1153   modbus_registers[9]=(signed char)(bps[1]._Uii);
0002e2  f88d3009          STRB     r3,[sp,#9]
;;;1154   modbus_registers[10]=(signed char)(bps[1]._Ii>>8);			//Рег6	Выходной ток выпрямителя №2, 0.1А
0002e6  f8d0308c          LDR      r3,[r0,#0x8c]  ; bps
0002ea  ea4f2623          ASR      r6,r3,#8
0002ee  f88d600a          STRB     r6,[sp,#0xa]
;;;1155   modbus_registers[11]=(signed char)(bps[1]._Ii);
0002f2  f88d300b          STRB     r3,[sp,#0xb]
;;;1156   modbus_registers[12]=(signed char)(bps[1]._Ti>>8);			//Рег7	Температура радиатора выпрямителя №2, 1гЦ
0002f6  f8d03090          LDR      r3,[r0,#0x90]  ; bps
0002fa  ea4f2623          ASR      r6,r3,#8
0002fe  f88d600c          STRB     r6,[sp,#0xc]
;;;1157   modbus_registers[13]=(signed char)(bps[1]._Ti);
000302  f88d300d          STRB     r3,[sp,#0xd]
;;;1158   modbus_registers[14]=(signed char)(bps[1]._av>>8);			//Рег8	Байт флагов выпрямителя №2, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000306  f88d100e          STRB     r1,[sp,#0xe]
;;;1159   modbus_registers[15]=(signed char)(bps[1]._av);
00030a  f8903069          LDRB     r3,[r0,#0x69]  ; bps
00030e  f88d300f          STRB     r3,[sp,#0xf]
;;;1160   modbus_registers[16]=(signed char)(bps[2]._Uii>>8);			//Рег9	Выходное напряжение выпрямителя №3, 0.1В
000312  f8d030ec          LDR      r3,[r0,#0xec]  ; bps
000316  ea4f2623          ASR      r6,r3,#8
00031a  f88d6010          STRB     r6,[sp,#0x10]
;;;1161   modbus_registers[17]=(signed char)(bps[2]._Uii);
00031e  f88d3011          STRB     r3,[sp,#0x11]
;;;1162   modbus_registers[18]=(signed char)(bps[2]._Ii>>8);			//Рег10	Выходной ток выпрямителя №3, 0.1А
000322  f8d030f4          LDR      r3,[r0,#0xf4]  ; bps
000326  ea4f2623          ASR      r6,r3,#8
00032a  f88d6012          STRB     r6,[sp,#0x12]
;;;1163   modbus_registers[19]=(signed char)(bps[2]._Ii);
00032e  f88d3013          STRB     r3,[sp,#0x13]
;;;1164   modbus_registers[20]=(signed char)(bps[2]._Ti>>8);			//Рег11	Температура радиатора выпрямителя №3, 1гЦ
000332  f8d030f8          LDR      r3,[r0,#0xf8]  ; bps
000336  ea4f2623          ASR      r6,r3,#8
00033a  f88d6014          STRB     r6,[sp,#0x14]
;;;1165   modbus_registers[21]=(signed char)(bps[2]._Ti);
00033e  f88d3015          STRB     r3,[sp,#0x15]
;;;1166   modbus_registers[22]=(signed char)(bps[2]._av>>8);			//Рег12	Байт флагов выпрямителя №3, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000342  f88d1016          STRB     r1,[sp,#0x16]
;;;1167   modbus_registers[23]=(signed char)(bps[2]._av);
000346  f89030d1          LDRB     r3,[r0,#0xd1]  ; bps
00034a  f88d3017          STRB     r3,[sp,#0x17]
;;;1168   modbus_registers[24]=(signed char)(bps[3]._Uii>>8);			//Рег13	Выходное напряжение выпрямителя №4, 0.1В
00034e  f8d03154          LDR      r3,[r0,#0x154]  ; bps
000352  ea4f2623          ASR      r6,r3,#8
000356  f88d6018          STRB     r6,[sp,#0x18]
;;;1169   modbus_registers[25]=(signed char)(bps[3]._Uii);
00035a  f88d3019          STRB     r3,[sp,#0x19]
;;;1170   modbus_registers[26]=(signed char)(bps[3]._Ii>>8);			//Рег14	Выходной ток выпрямителя №4, 0.1А
00035e  f8d0315c          LDR      r3,[r0,#0x15c]  ; bps
000362  ea4f2623          ASR      r6,r3,#8
000366  f88d601a          STRB     r6,[sp,#0x1a]
;;;1171   modbus_registers[27]=(signed char)(bps[3]._Ii);
00036a  f88d301b          STRB     r3,[sp,#0x1b]
;;;1172   modbus_registers[28]=(signed char)(bps[3]._Ti>>8);			//Рег15	Температура радиатора выпрямителя №4, 1гЦ
00036e  f8d03160          LDR      r3,[r0,#0x160]  ; bps
000372  ea4f2623          ASR      r6,r3,#8
000376  f88d601c          STRB     r6,[sp,#0x1c]
;;;1173   modbus_registers[29]=(signed char)(bps[3]._Ti);
00037a  f88d301d          STRB     r3,[sp,#0x1d]
;;;1174   modbus_registers[30]=(signed char)(bps[3]._av>>8);			//Рег16	Байт флагов выпрямителя №4, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
00037e  f88d101e          STRB     r1,[sp,#0x1e]
;;;1175   modbus_registers[31]=(signed char)(bps[3]._av);
000382  f8903139          LDRB     r3,[r0,#0x139]  ; bps
000386  f88d301f          STRB     r3,[sp,#0x1f]
;;;1176   modbus_registers[32]=(signed char)(bps[4]._Uii>>8);			//Рег17	Выходное напряжение выпрямителя №5, 0.1В
00038a  f8d031bc          LDR      r3,[r0,#0x1bc]  ; bps
00038e  ea4f2623          ASR      r6,r3,#8
000392  f88d6020          STRB     r6,[sp,#0x20]
;;;1177   modbus_registers[33]=(signed char)(bps[4]._Uii);
000396  f88d3021          STRB     r3,[sp,#0x21]
;;;1178   modbus_registers[34]=(signed char)(bps[4]._Ii>>8);			//Рег18	Выходной ток выпрямителя №5, 0.1А
00039a  f8d031c4          LDR      r3,[r0,#0x1c4]  ; bps
00039e  ea4f2623          ASR      r6,r3,#8
0003a2  f88d6022          STRB     r6,[sp,#0x22]
;;;1179   modbus_registers[35]=(signed char)(bps[4]._Ii);
0003a6  f88d3023          STRB     r3,[sp,#0x23]
;;;1180   modbus_registers[36]=(signed char)(bps[4]._Ti>>8);			//Рег19	Температура радиатора выпрямителя №5, 1гЦ
0003aa  f8d031c8          LDR      r3,[r0,#0x1c8]  ; bps
0003ae  ea4f2623          ASR      r6,r3,#8
0003b2  f88d6024          STRB     r6,[sp,#0x24]
;;;1181   modbus_registers[37]=(signed char)(bps[4]._Ti);
0003b6  f88d3025          STRB     r3,[sp,#0x25]
;;;1182   modbus_registers[38]=(signed char)(bps[4]._av>>8);			//Рег20	Байт флагов выпрямителя №5, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0003ba  f88d1026          STRB     r1,[sp,#0x26]
;;;1183   modbus_registers[39]=(signed char)(bps[4]._av);
0003be  f89031a1          LDRB     r3,[r0,#0x1a1]  ; bps
0003c2  f88d3027          STRB     r3,[sp,#0x27]
;;;1184   modbus_registers[40]=(signed char)(bps[5]._Uii>>8);			//Рег21	Выходное напряжение выпрямителя №6, 0.1В
0003c6  f8d03224          LDR      r3,[r0,#0x224]  ; bps
0003ca  ea4f2623          ASR      r6,r3,#8
0003ce  f88d6028          STRB     r6,[sp,#0x28]
;;;1185   modbus_registers[41]=(signed char)(bps[5]._Uii);
0003d2  f88d3029          STRB     r3,[sp,#0x29]
;;;1186   modbus_registers[42]=(signed char)(bps[5]._Ii>>8);			//Рег22	Выходной ток выпрямителя №6, 0.1А
0003d6  f8d0322c          LDR      r3,[r0,#0x22c]  ; bps
0003da  ea4f2623          ASR      r6,r3,#8
0003de  f88d602a          STRB     r6,[sp,#0x2a]
;;;1187   modbus_registers[43]=(signed char)(bps[5]._Ii);
0003e2  f88d302b          STRB     r3,[sp,#0x2b]
;;;1188   modbus_registers[44]=(signed char)(bps[5]._Ti>>8);			//Рег23	Температура радиатора выпрямителя №6, 1гЦ
0003e6  f8d03230          LDR      r3,[r0,#0x230]  ; bps
0003ea  ea4f2623          ASR      r6,r3,#8
0003ee  f88d602c          STRB     r6,[sp,#0x2c]
;;;1189   modbus_registers[45]=(signed char)(bps[5]._Ti);
0003f2  f88d302d          STRB     r3,[sp,#0x2d]
;;;1190   modbus_registers[46]=(signed char)(bps[5]._av>>8);			//Рег24	Байт флагов выпрямителя №6, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0003f6  f88d102e          STRB     r1,[sp,#0x2e]
;;;1191   modbus_registers[47]=(signed char)(bps[5]._av);
0003fa  f8903209          LDRB     r3,[r0,#0x209]  ; bps
0003fe  f88d302f          STRB     r3,[sp,#0x2f]
;;;1192   modbus_registers[48]=(signed char)(bps[6]._Uii>>8);			//Рег25	Выходное напряжение выпрямителя №7, 0.1В
000402  f8d0328c          LDR      r3,[r0,#0x28c]  ; bps
000406  ea4f2623          ASR      r6,r3,#8
00040a  f88d6030          STRB     r6,[sp,#0x30]
;;;1193   modbus_registers[49]=(signed char)(bps[6]._Uii);
00040e  f88d3031          STRB     r3,[sp,#0x31]
;;;1194   modbus_registers[50]=(signed char)(bps[6]._Ii>>8);			//Рег26	Выходной ток выпрямителя №7, 0.1А
000412  f8d03294          LDR      r3,[r0,#0x294]  ; bps
000416  ea4f2623          ASR      r6,r3,#8
00041a  f88d6032          STRB     r6,[sp,#0x32]
;;;1195   modbus_registers[51]=(signed char)(bps[6]._Ii);
00041e  f88d3033          STRB     r3,[sp,#0x33]
;;;1196   modbus_registers[52]=(signed char)(bps[6]._Ti>>8);			//Рег27	Температура радиатора выпрямителя №7, 1гЦ
000422  f8d03298          LDR      r3,[r0,#0x298]  ; bps
000426  ea4f2623          ASR      r6,r3,#8
00042a  f88d6034          STRB     r6,[sp,#0x34]
;;;1197   modbus_registers[53]=(signed char)(bps[6]._Ti);
00042e  f88d3035          STRB     r3,[sp,#0x35]
;;;1198   modbus_registers[54]=(signed char)(bps[6]._av>>8);			//Рег28	Байт флагов выпрямителя №7, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000432  f88d1036          STRB     r1,[sp,#0x36]
;;;1199   modbus_registers[55]=(signed char)(bps[6]._av);
000436  f8903271          LDRB     r3,[r0,#0x271]  ; bps
00043a  f88d3037          STRB     r3,[sp,#0x37]
;;;1200   modbus_registers[56]=(signed char)(bps[7]._Uii>>8);			//Рег29	Выходное напряжение выпрямителя №8, 0.1В
00043e  f8d032f4          LDR      r3,[r0,#0x2f4]  ; bps
000442  ea4f2623          ASR      r6,r3,#8
000446  f88d6038          STRB     r6,[sp,#0x38]
;;;1201   modbus_registers[57]=(signed char)(bps[7]._Uii);
00044a  f88d3039          STRB     r3,[sp,#0x39]
;;;1202   modbus_registers[58]=(signed char)(bps[7]._Ii>>8);			//Рег30	Выходной ток выпрямителя №8, 0.1А
00044e  e035              B        |L1.1212|
                  |L1.1104|
                          DCD      0x40024020
                  |L1.1108|
                          DCD      NUMIST
                  |L1.1112|
                          DCD      ZV_ON
                  |L1.1116|
                          DCD      UBM_AV
                  |L1.1120|
                          DCD      TBAT
                  |L1.1124|
                          DCD      UMAX
                  |L1.1128|
                          DCD      USIGN
                  |L1.1132|
                          DCD      UMN
                  |L1.1136|
                          DCD      U0B
                  |L1.1140|
                          DCD      IKB
                  |L1.1144|
                          DCD      IZMAX
                  |L1.1148|
                          DCD      IMAX
                  |L1.1152|
                          DCD      IMIN
                  |L1.1156|
                          DCD      TZAS
                  |L1.1160|
                          DCD      TMAX
                  |L1.1164|
                          DCD      TSIGN
                  |L1.1168|
                          DCD      TBATMAX
                  |L1.1172|
                          DCD      TBATSIGN
                  |L1.1176|
                          DCD      speedChrgCurr
                  |L1.1180|
                          DCD      speedChrgVolt
                  |L1.1184|
                          DCD      speedChrgTimeInHour
                  |L1.1188|
                          DCD      U_OUT_KONTR_MAX
                  |L1.1192|
                          DCD      U_OUT_KONTR_MIN
                  |L1.1196|
                          DCD      U_OUT_KONTR_DELAY
                  |L1.1200|
                          DCD      modbus_tcp_out_ptr
                  |L1.1204|
                          DCD      ||area_number.4||+0x3c
                  |L1.1208|
                          DCD      bps
                  |L1.1212|
0004bc  f8d032fc          LDR      r3,[r0,#0x2fc]  ; bps
0004c0  ea4f2623          ASR      r6,r3,#8
0004c4  f88d603a          STRB     r6,[sp,#0x3a]
;;;1203   modbus_registers[59]=(signed char)(bps[7]._Ii);
0004c8  f88d303b          STRB     r3,[sp,#0x3b]
;;;1204   modbus_registers[60]=(signed char)(bps[7]._Ti>>8);			//Рег31	Температура радиатора выпрямителя №8, 1гЦ
0004cc  f8d03300          LDR      r3,[r0,#0x300]  ; bps
0004d0  ea4f2623          ASR      r6,r3,#8
0004d4  f88d603c          STRB     r6,[sp,#0x3c]
;;;1205   modbus_registers[61]=(signed char)(bps[7]._Ti);
0004d8  f88d303d          STRB     r3,[sp,#0x3d]
;;;1206   modbus_registers[62]=(signed char)(bps[7]._av>>8);			//Рег32	Байт флагов выпрямителя №8, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0004dc  f88d103e          STRB     r1,[sp,#0x3e]
;;;1207   modbus_registers[63]=(signed char)(bps[7]._av);
0004e0  f89032d9          LDRB     r3,[r0,#0x2d9]  ; bps
0004e4  f88d303f          STRB     r3,[sp,#0x3f]
;;;1208   modbus_registers[64]=(signed char)(bps[8]._Uii>>8);			//Рег33	Выходное напряжение выпрямителя №9, 0.1В
0004e8  f8d0335c          LDR      r3,[r0,#0x35c]  ; bps
0004ec  ea4f2623          ASR      r6,r3,#8
0004f0  f88d6040          STRB     r6,[sp,#0x40]
;;;1209   modbus_registers[65]=(signed char)(bps[8]._Uii);
0004f4  f88d3041          STRB     r3,[sp,#0x41]
;;;1210   modbus_registers[66]=(signed char)(bps[8]._Ii>>8);			//Рег34	Выходной ток выпрямителя №9, 0.1А
0004f8  f8d03364          LDR      r3,[r0,#0x364]  ; bps
0004fc  ea4f2623          ASR      r6,r3,#8
000500  f88d6042          STRB     r6,[sp,#0x42]
;;;1211   modbus_registers[67]=(signed char)(bps[8]._Ii);
000504  f88d3043          STRB     r3,[sp,#0x43]
;;;1212   modbus_registers[68]=(signed char)(bps[8]._Ti>>8);			//Рег35	Температура радиатора выпрямителя №9, 1гЦ
000508  f8d03368          LDR      r3,[r0,#0x368]  ; bps
00050c  ea4f2623          ASR      r6,r3,#8
000510  f88d6044          STRB     r6,[sp,#0x44]
;;;1213   modbus_registers[69]=(signed char)(bps[8]._Ti);
000514  f88d3045          STRB     r3,[sp,#0x45]
;;;1214   modbus_registers[70]=(signed char)(bps[8]._av>>8);			//Рег36	Байт флагов выпрямителя №9, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000518  f88d1046          STRB     r1,[sp,#0x46]
;;;1215   modbus_registers[71]=(signed char)(bps[8]._av);
00051c  f8903341          LDRB     r3,[r0,#0x341]  ; bps
000520  f88d3047          STRB     r3,[sp,#0x47]
;;;1216   modbus_registers[72]=(signed char)(bps[9]._Uii>>8);			//Рег37	Выходное напряжение выпрямителя №10, 0.1В
000524  f8d033c4          LDR      r3,[r0,#0x3c4]  ; bps
000528  ea4f2623          ASR      r6,r3,#8
00052c  f88d6048          STRB     r6,[sp,#0x48]
;;;1217   modbus_registers[73]=(signed char)(bps[9]._Uii);
000530  f88d3049          STRB     r3,[sp,#0x49]
;;;1218   modbus_registers[74]=(signed char)(bps[9]._Ii>>8);			//Рег38	Выходной ток выпрямителя №10, 0.1А
000534  f8d033cc          LDR      r3,[r0,#0x3cc]  ; bps
000538  ea4f2623          ASR      r6,r3,#8
00053c  f88d604a          STRB     r6,[sp,#0x4a]
;;;1219   modbus_registers[75]=(signed char)(bps[9]._Ii);
000540  f88d304b          STRB     r3,[sp,#0x4b]
;;;1220   modbus_registers[76]=(signed char)(bps[9]._Ti>>8);			//Рег39	Температура радиатора выпрямителя №10, 1гЦ
000544  f8d033d0          LDR      r3,[r0,#0x3d0]  ; bps
000548  ea4f2623          ASR      r6,r3,#8
00054c  f88d604c          STRB     r6,[sp,#0x4c]
;;;1221   modbus_registers[77]=(signed char)(bps[9]._Ti);
000550  f88d304d          STRB     r3,[sp,#0x4d]
;;;1222   modbus_registers[78]=(signed char)(bps[9]._av>>8);			//Рег40	Байт флагов выпрямителя №10, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000554  f88d104e          STRB     r1,[sp,#0x4e]
;;;1223   modbus_registers[79]=(signed char)(bps[9]._av);
000558  f89033a9          LDRB     r3,[r0,#0x3a9]  ; bps
00055c  f88d304f          STRB     r3,[sp,#0x4f]
;;;1224   modbus_registers[80]=(signed char)(bps[10]._Uii>>8);		//Рег41	Выходное напряжение выпрямителя №11, 0.1В
000560  f8d0342c          LDR      r3,[r0,#0x42c]  ; bps
000564  ea4f2623          ASR      r6,r3,#8
000568  f88d6050          STRB     r6,[sp,#0x50]
;;;1225   modbus_registers[81]=(signed char)(bps[10]._Uii);
00056c  f88d3051          STRB     r3,[sp,#0x51]
;;;1226   modbus_registers[82]=(signed char)(bps[10]._Ii>>8);			//Рег42	Выходной ток выпрямителя №11, 0.1А
000570  f8d03434          LDR      r3,[r0,#0x434]  ; bps
000574  ea4f2623          ASR      r6,r3,#8
000578  f88d6052          STRB     r6,[sp,#0x52]
;;;1227   modbus_registers[83]=(signed char)(bps[10]._Ii);
00057c  f88d3053          STRB     r3,[sp,#0x53]
;;;1228   modbus_registers[84]=(signed char)(bps[10]._Ti>>8);			//Рег43	Температура радиатора выпрямителя №11, 1гЦ
000580  f8d03438          LDR      r3,[r0,#0x438]  ; bps
000584  ea4f2623          ASR      r6,r3,#8
000588  f88d6054          STRB     r6,[sp,#0x54]
;;;1229   modbus_registers[85]=(signed char)(bps[10]._Ti);
00058c  f88d3055          STRB     r3,[sp,#0x55]
;;;1230   modbus_registers[86]=(signed char)(bps[10]._av>>8);			//Рег44	Байт флагов выпрямителя №11, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
000590  f88d1056          STRB     r1,[sp,#0x56]
;;;1231   modbus_registers[87]=(signed char)(bps[10]._av);
000594  f8903411          LDRB     r3,[r0,#0x411]  ; bps
000598  f88d3057          STRB     r3,[sp,#0x57]
;;;1232   modbus_registers[88]=(signed char)(bps[11]._Uii>>8);		//Рег45	Выходное напряжение выпрямителя №12, 0.1В
00059c  f500608f          ADD      r0,r0,#0x478
0005a0  69c3              LDR      r3,[r0,#0x1c]  ; bps
0005a2  ea4f2623          ASR      r6,r3,#8
0005a6  f88d6058          STRB     r6,[sp,#0x58]
;;;1233   modbus_registers[89]=(signed char)(bps[11]._Uii);
0005aa  f88d3059          STRB     r3,[sp,#0x59]
;;;1234   modbus_registers[90]=(signed char)(bps[11]._Ii>>8);			//Рег46	Выходной ток выпрямителя №12, 0.1А
0005ae  6a43              LDR      r3,[r0,#0x24]  ; bps
0005b0  ea4f2623          ASR      r6,r3,#8
0005b4  f88d605a          STRB     r6,[sp,#0x5a]
;;;1235   modbus_registers[91]=(signed char)(bps[11]._Ii);
0005b8  f88d305b          STRB     r3,[sp,#0x5b]
;;;1236   modbus_registers[92]=(signed char)(bps[11]._Ti>>8);			//Рег47	Температура радиатора выпрямителя №12, 1гЦ
0005bc  6a83              LDR      r3,[r0,#0x28]  ; bps
0005be  ea4f2623          ASR      r6,r3,#8
0005c2  f88d605c          STRB     r6,[sp,#0x5c]
;;;1237   modbus_registers[93]=(signed char)(bps[11]._Ti);
0005c6  f88d305d          STRB     r3,[sp,#0x5d]
;;;1238   modbus_registers[94]=(signed char)(bps[11]._av>>8);			//Рег48	Байт флагов выпрямителя №12, 0x01 - перегрев, 0x02 завышено Uвых, 0x04 занижено Uвых, 0x08 - отсутствует связь с выпрямителем
0005ca  f88d105e          STRB     r1,[sp,#0x5e]
;;;1239   modbus_registers[95]=(signed char)(bps[11]._av);
0005ce  7840              LDRB     r0,[r0,#1]  ; bps
0005d0  f88d005f          STRB     r0,[sp,#0x5f]
;;;1240   
;;;1241   															
;;;1242   modbus_registers[98]=(signed char)	(out_U>>8);				//Рег50 Выходное напряжение системы
0005d4  48ff              LDR      r0,|L1.2516|
0005d6  8800              LDRH     r0,[r0,#0]  ; out_U
0005d8  ea4f2120          ASR      r1,r0,#8
0005dc  f88d1062          STRB     r1,[sp,#0x62]
;;;1243   modbus_registers[99]=(signed char)	(out_U);
0005e0  f88d0063          STRB     r0,[sp,#0x63]
;;;1244   modbus_registers[100]=(signed char)	(in_U>>8);				//Рег51	Входное напряжение системы
0005e4  48fc              LDR      r0,|L1.2520|
0005e6  8800              LDRH     r0,[r0,#0]  ; in_U
0005e8  ea4f2120          ASR      r1,r0,#8
0005ec  f88d1064          STRB     r1,[sp,#0x64]
;;;1245   modbus_registers[101]=(signed char)	(in_U);
0005f0  f88d0065          STRB     r0,[sp,#0x65]
;;;1246   modbus_registers[102]=(signed char)	(vd_U>>8);				//Рег52	Напряжение вольтдобавки
0005f4  48f9              LDR      r0,|L1.2524|
0005f6  8800              LDRH     r0,[r0,#0]  ; vd_U
0005f8  ea4f2120          ASR      r1,r0,#8
0005fc  f88d1066          STRB     r1,[sp,#0x66]
;;;1247   modbus_registers[103]=(signed char)	(vd_U);
000600  f88d0067          STRB     r0,[sp,#0x67]
;;;1248   modbus_registers[104]=(signed char)	(Ib_ips_termokompensat>>8);		//Рег53	Выходной ток
000604  48f6              LDR      r0,|L1.2528|
000606  8800              LDRH     r0,[r0,#0]  ; Ib_ips_termokompensat
000608  ea4f2120          ASR      r1,r0,#8
00060c  f88d1068          STRB     r1,[sp,#0x68]
;;;1249   modbus_registers[105]=(signed char)	(Ib_ips_termokompensat);
000610  f88d0069          STRB     r0,[sp,#0x69]
;;;1250   
;;;1251   modbus_registers[106]=(signed char)	(t_ext[0]>>8);				//Рег54	 Температура системы
000614  48f3              LDR      r0,|L1.2532|
000616  8800              LDRH     r0,[r0,#0]  ; t_ext
000618  ea4f2120          ASR      r1,r0,#8
00061c  f88d106a          STRB     r1,[sp,#0x6a]
;;;1252   modbus_registers[107]=(signed char)	(t_ext[0]);
000620  f88d006b          STRB     r0,[sp,#0x6b]
;;;1253   modbus_registers[108]=(signed char)	(avar_vd_stat>>8);		//Рег55	 Флаг аварий системы
000624  48f0              LDR      r0,|L1.2536|
000626  8800              LDRH     r0,[r0,#0]  ; avar_vd_stat
000628  ea4f2120          ASR      r1,r0,#8
00062c  f88d106c          STRB     r1,[sp,#0x6c]
;;;1254   modbus_registers[109]=(signed char)	(avar_vd_stat);			// Бит 0 - авария одного из БПС
000630  f88d006d          STRB     r0,[sp,#0x6d]
000634  4668              MOV      r0,sp                 ;1137
;;;1255   															// Бит 1 - перегрузка системы по току
;;;1256   															// Бит 2 - перегрев системы
;;;1257   															// Бит 3 - выходное напряжение завышено
;;;1258   															// Бит 4 - выходное напряжение занижено
;;;1259   															// Бит 5 - входное напряжение завышено
;;;1260   															// Бит 6 - входное напряжение занижено
;;;1261   															// Бит 7 - авария связи по шине KAN
;;;1262   															// Бит 8 - вольтдобавка в работе
;;;1263   
;;;1264   
;;;1265   
;;;1266    /*
;;;1267   modbus_registers[106]=(signed char)(bps_U>>8);				//Рег54   	напряжение выпрямителей, 0.1В
;;;1268   modbus_registers[107]=(signed char)(bps_U);
;;;1269   tempS=0;
;;;1270   if(speedChIsOn) tempS=1;
;;;1271   modbus_registers[108]=(signed char)(tempS>>8);					//Рег55   	Ускоренный заряд включенность, (1 - вкл, 0 - Выкл)
;;;1272   modbus_registers[109]=(signed char)(tempS);
;;;1273   tempS=0;
;;;1274   if(spc_stat==spcVZ) tempS=1;
;;;1275   modbus_registers[110]=(signed char)(tempS>>8);					//Рег56   	Выравнивающий заряд включенность, (1 - вкл, 0 - Выкл)
;;;1276   modbus_registers[111]=(signed char)(tempS);
;;;1277   modbus_registers[112]=(signed char)(uout_av>>8);					//Рег57   Контроль выходного напряжения, (0 - норма, 1 - завышено, 2 - занижено)
;;;1278   modbus_registers[113]=(signed char)(uout_av);
;;;1279   
;;;1280   tempS=0;													 //Рег60	Регистр флагов состояния системы
;;;1281   if(bat_ips._av)			tempS|=(1<<0);						 // Бит 0	Авария батареи
;;;1282   if(avar_stat&0x0001)   	tempS|=(1<<1);						 //	Бит 1	Авария питающей сети 
;;;1283   if(avar_stat&(1<<(3+0)))tempS|=(1<<2);						 //	Бит 2	Авария выпрямителя №1
;;;1284   if(avar_stat&(1<<(3+1)))tempS|=(1<<3);						 //	Бит 3	Авария выпрямителя №2
;;;1285   if(avar_stat&(1<<(3+2)))tempS|=(1<<4);						 //	Бит 4	Авария выпрямителя №2
;;;1286   modbus_registers[118]=(signed char)(tempS>>8);
;;;1287   modbus_registers[119]=(signed char)(tempS);
;;;1288   
;;;1289   tempS=t_ext[0];
;;;1290   if(ND_EXT[0])tempS=-1000;
;;;1291   modbus_registers[400]=(signed char)(tempS>>8);				//Рег201	Внешний датчик температуры №1
;;;1292   modbus_registers[401]=(signed char)(tempS);
;;;1293   tempS=t_ext[1];
;;;1294   if(ND_EXT[1])tempS=-1000;
;;;1295   modbus_registers[402]=(signed char)(tempS>>8);				//Рег202	Внешний датчик температуры №2
;;;1296   modbus_registers[403]=(signed char)(tempS);
;;;1297   tempS=t_ext[2];
;;;1298   if(ND_EXT[2])tempS=-1000;
;;;1299   modbus_registers[404]=(signed char)(tempS>>8);				//Рег203	Внешний датчик температуры №3
;;;1300   modbus_registers[405]=(signed char)(tempS);
;;;1301   /*tempS=t_ext[3];
;;;1302   if(ND_EXT[3])tempS=-1000;
;;;1303   modbus_registers[406]=(signed char)(tempS>>8);				//Рег204	Внешний датчик температуры №4
;;;1304   modbus_registers[407]=(signed char)(tempS);   */
;;;1305   /*
;;;1306   tempS=0;
;;;1307   if(sk_stat[0]==ssON) tempS|=0x0001;
;;;1308   if(sk_av_stat[0]==sasON) tempS|=0x0002;
;;;1309   modbus_registers[420]=(signed char)(tempS>>8);				//Рег211	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
;;;1310   modbus_registers[421]=(signed char)(tempS);
;;;1311   tempS=0;
;;;1312   if(sk_stat[1]==ssON) tempS|=0x0001;
;;;1313   if(sk_av_stat[1]==sasON) tempS|=0x0002;
;;;1314   modbus_registers[422]=(signed char)(tempS>>8);				//Рег212	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
;;;1315   modbus_registers[423]=(signed char)(tempS);
;;;1316   tempS=0;
;;;1317   if(sk_stat[2]==ssON) tempS|=0x0001;
;;;1318   if(sk_av_stat[2]==sasON) tempS|=0x0002;
;;;1319   modbus_registers[424]=(signed char)(tempS>>8);				//Рег213	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
;;;1320   modbus_registers[425]=(signed char)(tempS);
;;;1321   tempS=0;
;;;1322   if(sk_stat[3]==ssON) tempS|=0x0001;
;;;1323   if(sk_av_stat[3]==sasON) tempS|=0x0002;
;;;1324   modbus_registers[426]=(signed char)(tempS>>8);				//Рег214	Состояние  сухого контакта №1, (нулевой бит - физическое состояние, 1 - замкнут, 0 - разомкнут, первый бит - аварийность, 1 - авария, 0 - норма)
;;;1325   modbus_registers[427]=(signed char)(tempS);
;;;1326   
;;;1327   //modbus_registers[
;;;1328     */
;;;1329   
;;;1330   if(prot==MODBUS_RTU_PROT)
;;;1331   	{
;;;1332   	modbus_tx_buff[0]=adr;
;;;1333   	modbus_tx_buff[1]=func;
;;;1334   
;;;1335   	modbus_tx_buff[2]=(char)(reg_quantity*2);
;;;1336   
;;;1337   	mem_copy((signed char*)&modbus_tx_buff[3],(signed char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000636  f1a20201          SUB      r2,r2,#1
00063a  4eec              LDR      r6,|L1.2540|
00063c  eb000142          ADD      r1,r0,r2,LSL #1
000640  ea4f0245          LSL      r2,r5,#1              ;1335
000644  f1bc0f00          CMP      r12,#0                ;1330
000648  d009              BEQ      |L1.1630|
;;;1338   
;;;1339   	crc_temp=CRC16_2(modbus_tx_buff,(reg_quantity*2)+3);
;;;1340   
;;;1341   	modbus_tx_buff[3+(reg_quantity*2)]=(char)crc_temp;
;;;1342   	modbus_tx_buff[4+(reg_quantity*2)]=crc_temp>>8;
;;;1343   
;;;1344   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1345   		{
;;;1346   		putchar0(modbus_tx_buff[i]);
;;;1347   		}
;;;1348   	for (i=0;i<(5+(reg_quantity*2));i++)
;;;1349   		{
;;;1350   		putchar_sc16is700(modbus_tx_buff[i]);
;;;1351   		}
;;;1352   	}
;;;1353   else if(prot==MODBUS_TCP_PROT)
00064a  f1bc0f01          CMP      r12,#1
00064e  d104              BNE      |L1.1626|
;;;1354   	{
;;;1355   	mem_copy((signed char*)modbus_tx_buff,(signed char*)&modbus_registers[(reg_adr-1)*2],reg_quantity*2);
000650  4630              MOV      r0,r6
000652  f7fffffe          BL       mem_copy
;;;1356   	modbus_tcp_out_ptr=(signed char*)modbus_tx_buff;
000656  48e6              LDR      r0,|L1.2544|
000658  6006              STR      r6,[r0,#0]  ; modbus_tcp_out_ptr
                  |L1.1626|
;;;1357   	}
;;;1358   }
00065a  b07d              ADD      sp,sp,#0x1f4
00065c  bdf0              POP      {r4-r7,pc}
                  |L1.1630|
00065e  7034              STRB     r4,[r6,#0]            ;1332
000660  7077              STRB     r7,[r6,#1]            ;1333
000662  70b2              STRB     r2,[r6,#2]            ;1335
000664  1cf0              ADDS     r0,r6,#3              ;1337
000666  f7fffffe          BL       mem_copy
00066a  2003              MOVS     r0,#3                 ;1339
00066c  eb000045          ADD      r0,r0,r5,LSL #1       ;1339
000670  b201              SXTH     r1,r0                 ;1339
000672  48de              LDR      r0,|L1.2540|
000674  f7fffffe          BL       CRC16_2
000678  eb060145          ADD      r1,r6,r5,LSL #1       ;1341
00067c  70c8              STRB     r0,[r1,#3]            ;1341
00067e  ea4f2010          LSR      r0,r0,#8              ;1342
000682  7108              STRB     r0,[r1,#4]            ;1342
000684  f04f0400          MOV      r4,#0                 ;1344
000688  f04f0005          MOV      r0,#5                 ;1344
00068c  eb000545          ADD      r5,r0,r5,LSL #1       ;1344
000690  e005              B        |L1.1694|
                  |L1.1682|
000692  5d30              LDRB     r0,[r6,r4]            ;1346
000694  f7fffffe          BL       putchar0
000698  f1040401          ADD      r4,r4,#1              ;1344
00069c  b2e4              UXTB     r4,r4                 ;1344
                  |L1.1694|
00069e  42a5              CMP      r5,r4                 ;1344
0006a0  d8f7              BHI      |L1.1682|
0006a2  f04f0400          MOV      r4,#0                 ;1348
0006a6  e005              B        |L1.1716|
                  |L1.1704|
0006a8  5d30              LDRB     r0,[r6,r4]            ;1350
0006aa  f7fffffe          BL       putchar_sc16is700
0006ae  f1040401          ADD      r4,r4,#1              ;1348
0006b2  b2e4              UXTB     r4,r4                 ;1348
                  |L1.1716|
0006b4  42a5              CMP      r5,r4                 ;1348
0006b6  d8f7              BHI      |L1.1704|
0006b8  e7cf              B        |L1.1626|
;;;1359   
                          ENDP

                  modbus_in PROC
;;;258    //-----------------------------------------------
;;;259    void modbus_in(void)
0006ba  e92d4ff0          PUSH     {r4-r11,lr}
;;;260    {
0006be  b089              SUB      sp,sp,#0x24
;;;261    short crc16_calculated;		//вычисляемая из принятых данных CRC
;;;262    short crc16_incapsulated;	//встроеннная в посылку CRC
;;;263    unsigned short modbus_rx_arg0;		//встроенный в посылку первый аргумент
;;;264    unsigned short modbus_rx_arg1;		//встроенный в посылку второй аргумент
;;;265    //unsigned short modbus_rx_arg2;		//встроенный в посылку третий аргумент
;;;266    //unsigned short modbus_rx_arg3;		//встроенный в посылку четвертый аргумент
;;;267    unsigned char modbus_func;			//встроенный в посылку код функции
;;;268    
;;;269    
;;;270    
;;;271    mem_copy(modbus_an_buffer,modbus_rx_buffer,modbus_rx_buffer_ptr);
0006c0  4ccc              LDR      r4,|L1.2548|
0006c2  49ca              LDR      r1,|L1.2540|
0006c4  393c              SUBS     r1,r1,#0x3c
0006c6  7862              LDRB     r2,[r4,#1]  ; modbus_rx_buffer_ptr
0006c8  f101001e          ADD      r0,r1,#0x1e
0006cc  f7fffffe          BL       mem_copy
;;;272    modbus_rx_counter=modbus_rx_buffer_ptr;
0006d0  7861              LDRB     r1,[r4,#1]  ; modbus_rx_buffer_ptr
0006d2  70a1              STRB     r1,[r4,#2]
;;;273    modbus_rx_buffer_ptr=0;
0006d4  f04f0900          MOV      r9,#0
0006d8  f8849001          STRB     r9,[r4,#1]
;;;274    bMODBUS_TIMEOUT=0;
0006dc  f8849000          STRB     r9,[r4,#0]
;;;275    	
;;;276    crc16_calculated  = CRC16_2((char*)modbus_an_buffer, modbus_rx_counter-2);
0006e0  48c2              LDR      r0,|L1.2540|
0006e2  f1a10102          SUB      r1,r1,#2
0006e6  f1a0001e          SUB      r0,r0,#0x1e
0006ea  f7fffffe          BL       CRC16_2
0006ee  fa0ffa80          SXTH     r10,r0
;;;277    crc16_incapsulated = *((short*)&modbus_an_buffer[modbus_rx_counter-2]);
0006f2  48be              LDR      r0,|L1.2540|
0006f4  78a1              LDRB     r1,[r4,#2]  ; modbus_rx_counter
0006f6  381e              SUBS     r0,r0,#0x1e
0006f8  eb000201          ADD      r2,r0,r1
0006fc  f932bc02          LDRSH    r11,[r2,#-2]
;;;278    
;;;279    modbus_plazma1=modbus_rx_counter;
000700  80e1              STRH     r1,[r4,#6]
;;;280    modbus_plazma2=crc16_calculated;
000702  f8a4a008          STRH     r10,[r4,#8]
;;;281    modbus_plazma3=crc16_incapsulated;
000706  f8a4b00a          STRH     r11,[r4,#0xa]
;;;282    
;;;283    modbus_func=modbus_an_buffer[1];
00070a  7846              LDRB     r6,[r0,#1]  ; modbus_an_buffer
;;;284    modbus_rx_arg0=(((unsigned short)modbus_an_buffer[2])*((unsigned short)256))+((unsigned short)modbus_an_buffer[3]);
00070c  78c1              LDRB     r1,[r0,#3]  ; modbus_an_buffer
00070e  7882              LDRB     r2,[r0,#2]  ; modbus_an_buffer
000710  eb012302          ADD      r3,r1,r2,LSL #8
000714  b29d              UXTH     r5,r3
;;;285    modbus_rx_arg1=(((unsigned short)modbus_an_buffer[4])*((unsigned short)256))+((unsigned short)modbus_an_buffer[5]);
000716  7943              LDRB     r3,[r0,#5]  ; modbus_an_buffer
000718  7904              LDRB     r4,[r0,#4]  ; modbus_an_buffer
00071a  eb032304          ADD      r3,r3,r4,LSL #8
00071e  b29c              UXTH     r4,r3
;;;286    //modbus_rx_arg2=(((unsigned short)modbus_an_buffer[6])*((unsigned short)256))+((unsigned short)modbus_an_buffer[7]);
;;;287    //modbus_rx_arg3=(((unsigned short)modbus_an_buffer[8])*((unsigned short)256))+((unsigned short)modbus_an_buffer[9]);
;;;288    
;;;289    //#define IPS_CURR_AVG_MODBUS_ADRESS	1
;;;290    
;;;291    
;;;292    if(modbus_an_buffer[0]=='r')
000720  7800              LDRB     r0,[r0,#0]  ; modbus_an_buffer
000722  2872              CMP      r0,#0x72
000724  d17e              BNE      |L1.2084|
;;;293    	{
;;;294    	pvlk=1;
000726  4fb4              LDR      r7,|L1.2552|
000728  f04f0001          MOV      r0,#1
00072c  8038              STRH     r0,[r7,#0]
;;;295    	if(modbus_an_buffer[1]=='e')
00072e  f8df82bc          LDR      r8,|L1.2540|
000732  2e65              CMP      r6,#0x65
000734  f1a8081e          SUB      r8,r8,#0x1e
000738  d174              BNE      |L1.2084|
;;;296    		{
;;;297    		pvlk=2;
00073a  f04f0002          MOV      r0,#2
00073e  8038              STRH     r0,[r7,#0]
;;;298    		if(modbus_an_buffer[2]=='a')
000740  2a61              CMP      r2,#0x61
000742  d16f              BNE      |L1.2084|
;;;299    			{
;;;300    			pvlk=3;
000744  f04f0003          MOV      r0,#3
000748  8038              STRH     r0,[r7,#0]
;;;301    			if(modbus_an_buffer[3]=='d')
00074a  2964              CMP      r1,#0x64
00074c  d16a              BNE      |L1.2084|
;;;302    				{
;;;303    				pvlk=4;
00074e  f04f0004          MOV      r0,#4
000752  8038              STRH     r0,[r7,#0]
;;;304    				if(modbus_an_buffer[6]==crc_87(modbus_an_buffer,6))
000754  f04f0106          MOV      r1,#6
000758  4640              MOV      r0,r8
00075a  f7fffffe          BL       crc_87
00075e  f8981006          LDRB     r1,[r8,#6]  ; modbus_an_buffer
000762  4288              CMP      r0,r1
000764  d15e              BNE      |L1.2084|
;;;305    					{
;;;306    					pvlk=5;
000766  f04f0005          MOV      r0,#5
00076a  8038              STRH     r0,[r7,#0]
;;;307    					if(modbus_an_buffer[7]==crc_95(modbus_an_buffer,6))
00076c  f04f0106          MOV      r1,#6
000770  4640              MOV      r0,r8
000772  f7fffffe          BL       crc_95
000776  f8981007          LDRB     r1,[r8,#7]  ; modbus_an_buffer
00077a  4288              CMP      r0,r1
00077c  d152              BNE      |L1.2084|
;;;308    						{
;;;309    						pvlk=6;	
;;;310    
;;;311    							{
;;;312    							unsigned short ptr;
;;;313    							unsigned long data1,data2;
;;;314    							char temp_out[20];
;;;315    							pvlk++;
00077e  f04f0007          MOV      r0,#7
000782  8038              STRH     r0,[r7,#0]
;;;316    							ptr=modbus_an_buffer[4]+(modbus_an_buffer[5]*256U);
000784  f8980004          LDRB     r0,[r8,#4]  ; modbus_an_buffer
000788  f8981005          LDRB     r1,[r8,#5]  ; modbus_an_buffer
00078c  eb002001          ADD      r0,r0,r1,LSL #8
000790  b280              UXTH     r0,r0
000792  4607              MOV      r7,r0
000794  9008              STR      r0,[sp,#0x20]
;;;317    							data1=lc640_read_long(ptr);
000796  4638              MOV      r0,r7
000798  f7fffffe          BL       lc640_read_long
00079c  9007              STR      r0,[sp,#0x1c]
;;;318    							data2=lc640_read_long(ptr+4);
00079e  1d38              ADDS     r0,r7,#4
0007a0  f7fffffe          BL       lc640_read_long
0007a4  9006              STR      r0,[sp,#0x18]
;;;319    							temp_out[0]='r';
0007a6  f04f0072          MOV      r0,#0x72
0007aa  f88d0004          STRB     r0,[sp,#4]
;;;320    							temp_out[1]='e';
0007ae  4630              MOV      r0,r6
0007b0  f88d0005          STRB     r0,[sp,#5]
;;;321    							temp_out[2]='a';
0007b4  f04f0061          MOV      r0,#0x61
0007b8  f88d0006          STRB     r0,[sp,#6]
;;;322    							temp_out[3]='d';
0007bc  f04f0064          MOV      r0,#0x64
0007c0  f88d0007          STRB     r0,[sp,#7]
;;;323    							temp_out[4]=*((char*)&ptr);
0007c4  f89d0020          LDRB     r0,[sp,#0x20]
0007c8  f88d0008          STRB     r0,[sp,#8]
;;;324    							temp_out[5]=*(((char*)&ptr)+1);	
0007cc  f89d0021          LDRB     r0,[sp,#0x21]
0007d0  f88d0009          STRB     r0,[sp,#9]
;;;325    							temp_out[6]=*((char*)&data1);
0007d4  f89d001c          LDRB     r0,[sp,#0x1c]
0007d8  f88d000a          STRB     r0,[sp,#0xa]
;;;326    							temp_out[7]=*(((char*)&data1)+1);		
0007dc  f89d001d          LDRB     r0,[sp,#0x1d]
0007e0  f88d000b          STRB     r0,[sp,#0xb]
;;;327    							temp_out[8]=*(((char*)&data1)+2);	
0007e4  f89d001e          LDRB     r0,[sp,#0x1e]
0007e8  f88d000c          STRB     r0,[sp,#0xc]
;;;328    							temp_out[9]=*(((char*)&data1)+3);		
0007ec  f89d001f          LDRB     r0,[sp,#0x1f]
0007f0  f88d000d          STRB     r0,[sp,#0xd]
;;;329    							temp_out[10]=*((char*)&data2);
0007f4  f89d0018          LDRB     r0,[sp,#0x18]
0007f8  f88d000e          STRB     r0,[sp,#0xe]
;;;330    							temp_out[11]=*(((char*)&data2)+1);		
0007fc  f89d0019          LDRB     r0,[sp,#0x19]
000800  f88d000f          STRB     r0,[sp,#0xf]
;;;331    							temp_out[12]=*(((char*)&data2)+2);	
000804  f89d001a          LDRB     r0,[sp,#0x1a]
000808  f88d0010          STRB     r0,[sp,#0x10]
;;;332    							temp_out[13]=*(((char*)&data2)+3);	
00080c  f89d001b          LDRB     r0,[sp,#0x1b]
000810  f88d0011          STRB     r0,[sp,#0x11]
;;;333    							temp_out[14]=crc_87(temp_out,14);	
000814  f04f010e          MOV      r1,#0xe
000818  a801              ADD      r0,sp,#4
00081a  f7fffffe          BL       crc_87
00081e  f88d0012          STRB     r0,[sp,#0x12]
;;;334    							temp_out[15]=crc_95(temp_out,14);			
000822  e000              B        |L1.2086|
                  |L1.2084|
000824  e02c              B        |L1.2176|
                  |L1.2086|
000826  210e              MOVS     r1,#0xe
000828  a801              ADD      r0,sp,#4
00082a  f7fffffe          BL       crc_95
00082e  f88d0013          STRB     r0,[sp,#0x13]
;;;335    							
;;;336    							temp_out[17]=0;
000832  f88d9015          STRB     r9,[sp,#0x15]
;;;337    							for (i=0;i<16;i++)
000836  4f71              LDR      r7,|L1.2556|
000838  f8879000          STRB     r9,[r7,#0]
00083c  f10d0804          ADD      r8,sp,#4              ;314
                  |L1.2112|
;;;338    								{
;;;339    								putchar_sc16is700(temp_out[i]);
000840  7838              LDRB     r0,[r7,#0]  ; i
000842  f8180000          LDRB     r0,[r8,r0]
000846  f7fffffe          BL       putchar_sc16is700
;;;340    								temp_out[17]^=temp_out[i];
00084a  7838              LDRB     r0,[r7,#0]  ; i
00084c  f89d1015          LDRB     r1,[sp,#0x15]
000850  f8182000          LDRB     r2,[r8,r0]
000854  ea810102          EOR      r1,r1,r2
000858  f88d1015          STRB     r1,[sp,#0x15]
00085c  f1000001          ADD      r0,r0,#1              ;337
000860  b2c0              UXTB     r0,r0                 ;337
000862  7038              STRB     r0,[r7,#0]            ;337
000864  2810              CMP      r0,#0x10              ;337
000866  d3eb              BCC      |L1.2112|
;;;341    								}
;;;342    							putchar_sc16is700(16);
000868  2010              MOVS     r0,#0x10
00086a  f7fffffe          BL       putchar_sc16is700
;;;343    							putchar_sc16is700(temp_out[17]^16);
00086e  f89d0015          LDRB     r0,[sp,#0x15]
000872  f0800010          EOR      r0,r0,#0x10
000876  f7fffffe          BL       putchar_sc16is700
;;;344    							putchar_sc16is700(0x0a);
00087a  200a              MOVS     r0,#0xa
00087c  f7fffffe          BL       putchar_sc16is700
                  |L1.2176|
;;;345    							}
;;;346    						}
;;;347    					}
;;;348    				}
;;;349    			} 
;;;350    		}	 
;;;351    	} 
;;;352    
;;;353    if(modbus_an_buffer[0]=='w')
000880  485a              LDR      r0,|L1.2540|
000882  381e              SUBS     r0,r0,#0x1e
000884  7800              LDRB     r0,[r0,#0]  ; modbus_an_buffer
000886  2877              CMP      r0,#0x77
000888  d17e              BNE      |L1.2440|
;;;354    	{
;;;355    //	pvlk=1;
;;;356    	if(modbus_an_buffer[1]=='r')
00088a  4f58              LDR      r7,|L1.2540|
00088c  3f1e              SUBS     r7,r7,#0x1e
00088e  7878              LDRB     r0,[r7,#1]  ; modbus_an_buffer
000890  2872              CMP      r0,#0x72
000892  d179              BNE      |L1.2440|
;;;357    		{
;;;358    //		pvlk=2;
;;;359    		if(modbus_an_buffer[2]=='i')
000894  78b8              LDRB     r0,[r7,#2]  ; modbus_an_buffer
000896  2869              CMP      r0,#0x69
000898  d176              BNE      |L1.2440|
;;;360    			{
;;;361    //			pvlk=3;
;;;362    			if(modbus_an_buffer[3]=='t')
00089a  78f8              LDRB     r0,[r7,#3]  ; modbus_an_buffer
00089c  2874              CMP      r0,#0x74
00089e  d173              BNE      |L1.2440|
;;;363    				{
;;;364    //				pvlk=4;
;;;365    				if(modbus_an_buffer[4]=='e')
0008a0  7938              LDRB     r0,[r7,#4]  ; modbus_an_buffer
0008a2  2865              CMP      r0,#0x65
0008a4  d170              BNE      |L1.2440|
;;;366    					{
;;;367    //					pvlk=5;
;;;368    					if(modbus_an_buffer[15]==crc_87(modbus_an_buffer,15))
0008a6  210f              MOVS     r1,#0xf
0008a8  4638              MOV      r0,r7
0008aa  f7fffffe          BL       crc_87
0008ae  7bf9              LDRB     r1,[r7,#0xf]  ; modbus_an_buffer
0008b0  4288              CMP      r0,r1
0008b2  d169              BNE      |L1.2440|
;;;369    						{
;;;370    //						pvlk=6;
;;;371    						if(modbus_an_buffer[16]==crc_95(modbus_an_buffer,15))
0008b4  210f              MOVS     r1,#0xf
0008b6  4638              MOV      r0,r7
0008b8  f7fffffe          BL       crc_95
0008bc  7c39              LDRB     r1,[r7,#0x10]  ; modbus_an_buffer
0008be  4288              CMP      r0,r1
0008c0  d179              BNE      |L1.2486|
;;;372    
;;;373    							{
;;;374    							unsigned short ptr;
;;;375    							unsigned long data1,data2;
;;;376    							char temp_out[20];
;;;377    //							pvlk=7;
;;;378    							ptr=modbus_an_buffer[5]+(modbus_an_buffer[6]*256U);
0008c2  7978              LDRB     r0,[r7,#5]  ; modbus_an_buffer
0008c4  79b9              LDRB     r1,[r7,#6]  ; modbus_an_buffer
0008c6  eb002001          ADD      r0,r0,r1,LSL #8
0008ca  b280              UXTH     r0,r0
0008cc  4680              MOV      r8,r0
0008ce  9008              STR      r0,[sp,#0x20]
;;;379    							*((char*)&data1)=modbus_an_buffer[7];
0008d0  79f8              LDRB     r0,[r7,#7]  ; modbus_an_buffer
0008d2  f88d001c          STRB     r0,[sp,#0x1c]
;;;380    							*(((char*)&data1)+1)=modbus_an_buffer[8];
0008d6  7a38              LDRB     r0,[r7,#8]  ; modbus_an_buffer
0008d8  f88d001d          STRB     r0,[sp,#0x1d]
;;;381    							*(((char*)&data1)+2)=modbus_an_buffer[9];
0008dc  7a78              LDRB     r0,[r7,#9]  ; modbus_an_buffer
0008de  f88d001e          STRB     r0,[sp,#0x1e]
;;;382    							*(((char*)&data1)+3)=modbus_an_buffer[10];
0008e2  7ab8              LDRB     r0,[r7,#0xa]  ; modbus_an_buffer
0008e4  f88d001f          STRB     r0,[sp,#0x1f]
;;;383    							*((char*)&data2)=modbus_an_buffer[11];
0008e8  7af8              LDRB     r0,[r7,#0xb]  ; modbus_an_buffer
0008ea  f88d0018          STRB     r0,[sp,#0x18]
;;;384    							*(((char*)&data2)+1)=modbus_an_buffer[12];
0008ee  7b38              LDRB     r0,[r7,#0xc]  ; modbus_an_buffer
0008f0  f88d0019          STRB     r0,[sp,#0x19]
;;;385    							*(((char*)&data2)+2)=modbus_an_buffer[13];
0008f4  7b78              LDRB     r0,[r7,#0xd]  ; modbus_an_buffer
0008f6  f88d001a          STRB     r0,[sp,#0x1a]
;;;386    							*(((char*)&data2)+3)=modbus_an_buffer[14];	
0008fa  7bb8              LDRB     r0,[r7,#0xe]  ; modbus_an_buffer
0008fc  f88d001b          STRB     r0,[sp,#0x1b]
;;;387    							lc640_write_long(ptr,data1);
000900  4640              MOV      r0,r8
000902  9907              LDR      r1,[sp,#0x1c]
000904  f7fffffe          BL       lc640_write_long
;;;388    							lc640_write_long(ptr+4,data2);
000908  f1080004          ADD      r0,r8,#4
00090c  9906              LDR      r1,[sp,#0x18]
00090e  f7fffffe          BL       lc640_write_long
;;;389    							
;;;390    							//data1=lc640_read_long(ptr);
;;;391    							//data2=lc640_read_long(ptr+4);
;;;392    							temp_out[0]='w';
000912  f04f0077          MOV      r0,#0x77
000916  f88d0004          STRB     r0,[sp,#4]
;;;393    							temp_out[1]='r';
00091a  f04f0072          MOV      r0,#0x72
00091e  f88d0005          STRB     r0,[sp,#5]
;;;394    							temp_out[2]='i';
000922  f04f0069          MOV      r0,#0x69
000926  f88d0006          STRB     r0,[sp,#6]
;;;395    							temp_out[3]='t';
00092a  f04f0074          MOV      r0,#0x74
00092e  f88d0007          STRB     r0,[sp,#7]
;;;396    							temp_out[4]='e';
000932  f04f0065          MOV      r0,#0x65
000936  f88d0008          STRB     r0,[sp,#8]
;;;397    							temp_out[5]=*((char*)&ptr);
00093a  f89d0020          LDRB     r0,[sp,#0x20]
00093e  f88d0009          STRB     r0,[sp,#9]
;;;398    							temp_out[6]=*(((char*)&ptr)+1);	
000942  f89d0021          LDRB     r0,[sp,#0x21]
000946  f88d000a          STRB     r0,[sp,#0xa]
;;;399    						
;;;400    							temp_out[7]=crc_87(temp_out,7);	
00094a  f04f0107          MOV      r1,#7
00094e  a801              ADD      r0,sp,#4
000950  f7fffffe          BL       crc_87
000954  f88d000b          STRB     r0,[sp,#0xb]
;;;401    							temp_out[8]=crc_95(temp_out,7);			
000958  2107              MOVS     r1,#7
00095a  a801              ADD      r0,sp,#4
00095c  f7fffffe          BL       crc_95
000960  f88d000c          STRB     r0,[sp,#0xc]
;;;402    							
;;;403    							temp_out[10]=0;
000964  f88d900e          STRB     r9,[sp,#0xe]
;;;404    							for (i=0;i<9;i++)
000968  4f24              LDR      r7,|L1.2556|
00096a  f8879000          STRB     r9,[r7,#0]
00096e  f10d0804          ADD      r8,sp,#4              ;376
                  |L1.2418|
;;;405    								{
;;;406    								putchar_sc16is700(temp_out[i]);
000972  7838              LDRB     r0,[r7,#0]  ; i
000974  f8180000          LDRB     r0,[r8,r0]
000978  f7fffffe          BL       putchar_sc16is700
;;;407    								temp_out[10]^=temp_out[i];
00097c  7838              LDRB     r0,[r7,#0]  ; i
00097e  f89d100e          LDRB     r1,[sp,#0xe]
000982  f8182000          LDRB     r2,[r8,r0]
000986  e000              B        |L1.2442|
                  |L1.2440|
000988  e015              B        |L1.2486|
                  |L1.2442|
00098a  ea810102          EOR      r1,r1,r2
00098e  f88d100e          STRB     r1,[sp,#0xe]
000992  f1000001          ADD      r0,r0,#1              ;404
000996  b2c0              UXTB     r0,r0                 ;404
000998  7038              STRB     r0,[r7,#0]            ;404
00099a  2809              CMP      r0,#9                 ;404
00099c  d3e9              BCC      |L1.2418|
;;;408    								}
;;;409    							putchar_sc16is700(9);
00099e  2009              MOVS     r0,#9
0009a0  f7fffffe          BL       putchar_sc16is700
;;;410    							putchar_sc16is700(temp_out[10]^9);
0009a4  f89d000e          LDRB     r0,[sp,#0xe]
0009a8  f0800009          EOR      r0,r0,#9
0009ac  f7fffffe          BL       putchar_sc16is700
;;;411    							putchar_sc16is700(0x0a);
0009b0  200a              MOVS     r0,#0xa
0009b2  f7fffffe          BL       putchar_sc16is700
                  |L1.2486|
;;;412    							}
;;;413    						}
;;;414    					}
;;;415    				}
;;;416    		   	}
;;;417    		}
;;;418    	}
;;;419    
;;;420    if(crc16_calculated==crc16_incapsulated)
0009b6  45da              CMP      r10,r11
0009b8  d14b              BNE      |L1.2642|
;;;421    	{
;;;422    	ica_plazma[4]++;
0009ba  4911              LDR      r1,|L1.2560|
0009bc  7908              LDRB     r0,[r1,#4]  ; ica_plazma
0009be  f1000001          ADD      r0,r0,#1
0009c2  7108              STRB     r0,[r1,#4]
;;;423     	if(modbus_an_buffer[0]==MODBUS_ADRESS)
0009c4  4a09              LDR      r2,|L1.2540|
0009c6  f8df803c          LDR      r8,|L1.2564|
0009ca  f1a2021e          SUB      r2,r2,#0x1e
0009ce  7810              LDRB     r0,[r2,#0]  ; modbus_an_buffer
0009d0  e01a              B        |L1.2568|
0009d2  0000              DCW      0x0000
                  |L1.2516|
                          DCD      out_U
                  |L1.2520|
                          DCD      in_U
                  |L1.2524|
                          DCD      vd_U
                  |L1.2528|
                          DCD      Ib_ips_termokompensat
                  |L1.2532|
                          DCD      t_ext
                  |L1.2536|
                          DCD      avar_vd_stat
                  |L1.2540|
                          DCD      ||area_number.4||+0x3c
                  |L1.2544|
                          DCD      modbus_tcp_out_ptr
                  |L1.2548|
                          DCD      ||area_number.8||
                  |L1.2552|
                          DCD      pvlk
                  |L1.2556|
                          DCD      i
                  |L1.2560|
                          DCD      ica_plazma
                  |L1.2564|
                          DCD      MODBUS_ADRESS
                  |L1.2568|
000a08  f9b87000          LDRSH    r7,[r8,#0]  ; MODBUS_ADRESS
000a0c  42b8              CMP      r0,r7
000a0e  d174              BNE      |L1.2810|
;;;424    		{
;;;425    		if(modbus_func==3)		//чтение произвольного кол-ва регистров хранения
000a10  2e03              CMP      r6,#3
000a12  d10c              BNE      |L1.2606|
;;;426    			{
;;;427    			modbus_plazma++;
000a14  498f              LDR      r1,|L1.3156|
000a16  8888              LDRH     r0,[r1,#4]  ; modbus_plazma
000a18  f1000001          ADD      r0,r0,#1
000a1c  8088              STRH     r0,[r1,#4]
;;;428    			modbus_hold_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,modbus_rx_arg1,MODBUS_RTU_PROT);
000a1e  4623              MOV      r3,r4
000a20  462a              MOV      r2,r5
000a22  4631              MOV      r1,r6
000a24  b2f8              UXTB     r0,r7
000a26  f8cd9000          STR      r9,[sp,#0]
000a2a  f7fffffe          BL       modbus_hold_registers_transmit
                  |L1.2606|
;;;429    			}
;;;430    
;;;431    		if(modbus_func==4)		//чтение произвольного кол-ва регистров	входов
000a2e  2e04              CMP      r6,#4
000a30  d005              BEQ      |L1.2622|
;;;432    			{
;;;433    			modbus_input_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,modbus_rx_arg1,MODBUS_RTU_PROT);
;;;434    			}
;;;435    
;;;436    		else if(modbus_func==6) 	//запись регистров хранения
000a32  2e06              CMP      r6,#6
000a34  d10d              BNE      |L1.2642|
;;;437    			{
;;;438    			if(modbus_rx_arg0==11)		//Установка времени 
;;;439    				{
;;;440    				LPC_RTC->YEAR=(uint16_t)modbus_rx_arg1;
000a36  4888              LDR      r0,|L1.3160|
000a38  2d0b              CMP      r5,#0xb               ;438
000a3a  d00d              BEQ      |L1.2648|
000a3c  e00d              B        |L1.2650|
                  |L1.2622|
000a3e  f8cd9000          STR      r9,[sp,#0]            ;433
000a42  f8b80000          LDRH     r0,[r8,#0]            ;433  ; MODBUS_ADRESS
000a46  4623              MOV      r3,r4                 ;433
000a48  462a              MOV      r2,r5                 ;433
000a4a  4631              MOV      r1,r6                 ;433
000a4c  b2c0              UXTB     r0,r0                 ;433
000a4e  f7fffffe          BL       modbus_input_registers_transmit
                  |L1.2642|
;;;441    				}
;;;442    			if(modbus_rx_arg0==12)		//Установка времени 
;;;443    				{
;;;444    				LPC_RTC->MONTH=(uint16_t)modbus_rx_arg1;
;;;445    				}
;;;446    			if(modbus_rx_arg0==13)		//Установка времени 
;;;447    				{
;;;448    				LPC_RTC->DOM=(uint16_t)modbus_rx_arg1;
;;;449    				}
;;;450    			if(modbus_rx_arg0==14)		//Установка времени 
;;;451    				{
;;;452    				LPC_RTC->HOUR=(uint16_t)modbus_rx_arg1;
;;;453    				}
;;;454    			if(modbus_rx_arg0==15)		//Установка времени 
;;;455    				{
;;;456    				LPC_RTC->MIN=(uint16_t)modbus_rx_arg1;
;;;457    				}
;;;458    			if(modbus_rx_arg0==16)		//Установка времени 
;;;459    				{
;;;460    				LPC_RTC->SEC=(uint16_t)modbus_rx_arg1;
;;;461    				}
;;;462    			if(modbus_rx_arg0==20)		//ток стабилизации для режима стабилизации тока
;;;463    				{
;;;464    				if((modbus_rx_arg1>0)&&(modbus_rx_arg1<=18))
;;;465    				lc640_write_int(EE_NUMIST,modbus_rx_arg1);  
;;;466    				}
;;;467    			if(modbus_rx_arg0==21)		//ток стабилизации для режима стабилизации тока
;;;468    				{
;;;469    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;470    				lc640_write_int(EE_PAR,modbus_rx_arg1);  
;;;471    				}
;;;472    			if(modbus_rx_arg0==22)		//ток стабилизации для режима стабилизации тока
;;;473    				{
;;;474    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;475    				lc640_write_int(EE_ZV_ON,modbus_rx_arg1);  
;;;476    				}
;;;477    			if(modbus_rx_arg0==23)		//ток стабилизации для режима стабилизации тока
;;;478    				{
;;;479    				if((modbus_rx_arg1==0)||(modbus_rx_arg1==1))
;;;480    				lc640_write_int(EE_TERMOKOMP,modbus_rx_arg1);  
;;;481    				}
;;;482    			if(modbus_rx_arg0==24)		//ток стабилизации для режима стабилизации тока
;;;483    				{
;;;484    				if(/*(modbus_rx_arg1>=0)||*/(modbus_rx_arg1<=20))
;;;485    				lc640_write_int(EE_UBM_AV,modbus_rx_arg1);  
;;;486    				}
;;;487    
;;;488    
;;;489    			if(modbus_rx_arg0==30)		//напряжение стабилизации для режима стабилизации напряжения
;;;490    				{
;;;491    				/*if(modbus_rx_arg1<0)TBAT=0;
;;;492    				else */if((modbus_rx_arg1>0)&&(modbus_rx_arg1<=5))modbus_rx_arg1=0;
;;;493    				else if(modbus_rx_arg1>=60)TBAT=60;
;;;494    				else TBAT=modbus_rx_arg1;
;;;495    				lc640_write_int(EE_TBAT,TBAT);
;;;496    
;;;497    				main_kb_cnt=(TBAT*60)-20;
;;;498    	     		}
;;;499    			if(modbus_rx_arg0==31)		//
;;;500    				{
;;;501    				lc640_write_int(EE_UMAX,modbus_rx_arg1);
;;;502    	     		}
;;;503    			if(modbus_rx_arg0==32)		//
;;;504    				{
;;;505    				//lc640_write_int(EE_DU,UB20-modbus_rx_arg1);
;;;506    	     		}
;;;507    			if(modbus_rx_arg0==33)		//
;;;508    				{
;;;509    				//lc640_write_int(EE_UB0,modbus_rx_arg1);
;;;510    	     		}
;;;511    			if(modbus_rx_arg0==34)		//
;;;512    				{
;;;513    				//lc640_write_int(EE_UB20,modbus_rx_arg1);
;;;514    	     		}
;;;515    			if(modbus_rx_arg0==35)		//
;;;516    				{
;;;517    				lc640_write_int(EE_USIGN,modbus_rx_arg1);
;;;518    	     		}
;;;519    			if(modbus_rx_arg0==36)		//
;;;520    				{
;;;521    				lc640_write_int(EE_UMN,modbus_rx_arg1);
;;;522    	     		}
;;;523    			if(modbus_rx_arg0==37)		//
;;;524    				{
;;;525    				lc640_write_int(EE_U0B,modbus_rx_arg1);
;;;526    	     		}
;;;527    			if(modbus_rx_arg0==38)		//
;;;528    				{
;;;529    				lc640_write_int(EE_IKB,modbus_rx_arg1);
;;;530    	     		}
;;;531    			if(modbus_rx_arg0==39)		//
;;;532    				{
;;;533    				lc640_write_int(EE_IZMAX,modbus_rx_arg1);
;;;534    	     		}
;;;535    			if(modbus_rx_arg0==40)		//
;;;536    				{
;;;537    				lc640_write_int(EE_IMAX,modbus_rx_arg1);
;;;538    	     		}
;;;539    			if(modbus_rx_arg0==41)		//
;;;540    				{
;;;541    				lc640_write_int(EE_IMIN,modbus_rx_arg1);
;;;542    	     		}
;;;543    			if(modbus_rx_arg0==42)		//
;;;544    				{
;;;545    				//lc640_write_int(EE_UVZ,modbus_rx_arg1);
;;;546    	     		}
;;;547    			if(modbus_rx_arg0==43)		//
;;;548    				{
;;;549    				lc640_write_int(EE_TZAS,modbus_rx_arg1);
;;;550    	     		}
;;;551    			if(modbus_rx_arg0==44)		//
;;;552    				{
;;;553    				lc640_write_int(EE_TMAX,modbus_rx_arg1);
;;;554    	     		}
;;;555    			if(modbus_rx_arg0==45)		//
;;;556    				{
;;;557    				lc640_write_int(EE_TSIGN,modbus_rx_arg1);
;;;558    	     		}
;;;559    			if(modbus_rx_arg0==46)		//
;;;560    				{
;;;561    				lc640_write_int(EE_TBATMAX,modbus_rx_arg1);
;;;562    	     		}
;;;563    			if(modbus_rx_arg0==47)		//
;;;564    				{
;;;565    				lc640_write_int(EE_TBATSIGN,modbus_rx_arg1);
;;;566    	     		}
;;;567    			if(modbus_rx_arg0==48)		//
;;;568    				{
;;;569    				lc640_write_int(EE_SPEED_CHRG_CURR,modbus_rx_arg1);
;;;570    	     		}
;;;571    			if(modbus_rx_arg0==49)		//
;;;572    				{
;;;573    				lc640_write_int(EE_SPEED_CHRG_VOLT,modbus_rx_arg1);
;;;574    	     		}
;;;575    			if(modbus_rx_arg0==50)		//
;;;576    				{
;;;577    				lc640_write_int(EE_SPEED_CHRG_TIME,modbus_rx_arg1);
;;;578    	     		}
;;;579    			if(modbus_rx_arg0==51)		//
;;;580    				{
;;;581    				lc640_write_int(EE_U_OUT_KONTR_MAX,modbus_rx_arg1);
;;;582    	     		}
;;;583    			if(modbus_rx_arg0==52)		//
;;;584    				{
;;;585    				lc640_write_int(EE_U_OUT_KONTR_MIN,modbus_rx_arg1);
;;;586    	     		}
;;;587    			if(modbus_rx_arg0==53)		//
;;;588    				{
;;;589    				lc640_write_int(EE_U_OUT_KONTR_DELAY,modbus_rx_arg1);
;;;590    	     		}
;;;591    
;;;592    			if(modbus_rx_arg0==19)		//вкл/выкл источника напр.
;;;593    				{
;;;594    	/*			if(modbus_rx_arg1==1)
;;;595    					{
;;;596    					if(work_stat!=wsPS)
;;;597    						{
;;;598    						work_stat=wsPS;
;;;599    						time_proc=0;
;;;600    						time_proc_remain=T_PROC_PS;
;;;601    						restart_on_PS();
;;;602    						lc640_write_int(EE_MAIN_MENU_MODE,mmmIN);
;;;603    						}
;;;604    					}
;;;605    				if(modbus_rx_arg1==0)
;;;606    					{
;;;607    					if(work_stat==wsPS)
;;;608    						{
;;;609    						work_stat=wsOFF;
;;;610    						restart_off();
;;;611    						}
;;;612    					} */
;;;613    				}
;;;614    			if(modbus_rx_arg0==20)		//вкл/выкл источника тока
;;;615    				{
;;;616    /*				if(modbus_rx_arg1==1)
;;;617    					{
;;;618    					if(work_stat!=wsGS)
;;;619    						{
;;;620    						work_stat=wsGS;
;;;621    						time_proc=0;
;;;622    						time_proc_remain=T_PROC_GS;
;;;623    						lc640_write_int(EE_MAIN_MENU_MODE,mmmIT);
;;;624    						}
;;;625    					}
;;;626    				if(modbus_rx_arg1==0)
;;;627    					{
;;;628    					if(work_stat==wsGS)
;;;629    						{
;;;630    						work_stat=wsOFF;
;;;631    						restart_off();
;;;632    						}
;;;633    					}*/
;;;634    				}
;;;635    			//modbus_hold_register_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0);
;;;636    			modbus_hold_registers_transmit(MODBUS_ADRESS,modbus_func,modbus_rx_arg0,1,MODBUS_RTU_PROT);
;;;637    			}
;;;638    		} 
;;;639    	else if(modbus_an_buffer[0]==ICA_MODBUS_ADDRESS)
;;;640    		{
;;;641    		ica_plazma[3]++;
;;;642    		if(modbus_func==4)		//чтение произвольного кол-ва регистров	входов
;;;643    			{
;;;644    			ica_plazma[2]++;
;;;645    			if(modbus_an_buffer[2]==2)
;;;646    				{
;;;647    				ica_your_current=(((unsigned short)modbus_an_buffer[3])*((unsigned short)256))+((unsigned short)modbus_an_buffer[4]);
;;;648    				}
;;;649    			}
;;;650    		}
;;;651    	
;;;652    	}
;;;653    
;;;654    
;;;655    }
000a52  b009              ADD      sp,sp,#0x24
000a54  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.2648|
000a58  8784              STRH     r4,[r0,#0x3c]         ;440
                  |L1.2650|
000a5a  2d0c              CMP      r5,#0xc               ;442
000a5c  d101              BNE      |L1.2658|
000a5e  f8804038          STRB     r4,[r0,#0x38]         ;444
                  |L1.2658|
000a62  2d0d              CMP      r5,#0xd               ;446
000a64  d101              BNE      |L1.2666|
000a66  f880402c          STRB     r4,[r0,#0x2c]         ;448
                  |L1.2666|
000a6a  2d0e              CMP      r5,#0xe               ;450
000a6c  d101              BNE      |L1.2674|
000a6e  f8804028          STRB     r4,[r0,#0x28]         ;452
                  |L1.2674|
000a72  2d0f              CMP      r5,#0xf               ;454
000a74  d101              BNE      |L1.2682|
000a76  f8804024          STRB     r4,[r0,#0x24]         ;456
                  |L1.2682|
000a7a  2d10              CMP      r5,#0x10              ;458
000a7c  d101              BNE      |L1.2690|
000a7e  f8804020          STRB     r4,[r0,#0x20]         ;460
                  |L1.2690|
000a82  2d14              CMP      r5,#0x14              ;462
000a84  d106              BNE      |L1.2708|
000a86  1e60              SUBS     r0,r4,#1              ;464
000a88  2811              CMP      r0,#0x11              ;464
000a8a  d803              BHI      |L1.2708|
000a8c  b221              SXTH     r1,r4                 ;465
000a8e  2098              MOVS     r0,#0x98              ;465
000a90  f7fffffe          BL       lc640_write_int
                  |L1.2708|
000a94  2d15              CMP      r5,#0x15              ;467
000a96  d106              BNE      |L1.2726|
000a98  b10c              CBZ      r4,|L1.2718|
000a9a  2c01              CMP      r4,#1                 ;469
000a9c  d103              BNE      |L1.2726|
                  |L1.2718|
000a9e  b221              SXTH     r1,r4                 ;470
000aa0  20ca              MOVS     r0,#0xca              ;470
000aa2  f7fffffe          BL       lc640_write_int
                  |L1.2726|
000aa6  2d16              CMP      r5,#0x16              ;472
000aa8  d106              BNE      |L1.2744|
000aaa  b10c              CBZ      r4,|L1.2736|
000aac  2c01              CMP      r4,#1                 ;474
000aae  d103              BNE      |L1.2744|
                  |L1.2736|
000ab0  b221              SXTH     r1,r4                 ;475
000ab2  2086              MOVS     r0,#0x86              ;475
000ab4  f7fffffe          BL       lc640_write_int
                  |L1.2744|
000ab8  2d17              CMP      r5,#0x17              ;477
000aba  d106              BNE      |L1.2762|
000abc  b10c              CBZ      r4,|L1.2754|
000abe  2c01              CMP      r4,#1                 ;479
000ac0  d103              BNE      |L1.2762|
                  |L1.2754|
000ac2  b221              SXTH     r1,r4                 ;480
000ac4  20f2              MOVS     r0,#0xf2              ;480
000ac6  f7fffffe          BL       lc640_write_int
                  |L1.2762|
000aca  2d18              CMP      r5,#0x18              ;482
000acc  d106              BNE      |L1.2780|
000ace  2c14              CMP      r4,#0x14              ;484
000ad0  d804              BHI      |L1.2780|
000ad2  b221              SXTH     r1,r4                 ;485
000ad4  f44f7019          MOV      r0,#0x264             ;485
000ad8  f7fffffe          BL       lc640_write_int
                  |L1.2780|
000adc  2d1e              CMP      r5,#0x1e              ;489
000ade  d11c              BNE      |L1.2842|
000ae0  1e60              SUBS     r0,r4,#1              ;492
000ae2  4f5e              LDR      r7,|L1.3164|
000ae4  2804              CMP      r0,#4                 ;492
000ae6  d802              BHI      |L1.2798|
000ae8  f04f0400          MOV      r4,#0                 ;492
000aec  e007              B        |L1.2814|
                  |L1.2798|
000aee  2c3c              CMP      r4,#0x3c              ;493
000af0  d304              BCC      |L1.2812|
000af2  f04f003c          MOV      r0,#0x3c              ;493
000af6  8038              STRH     r0,[r7,#0]            ;493
000af8  e001              B        |L1.2814|
                  |L1.2810|
000afa  e091              B        |L1.3104|
                  |L1.2812|
000afc  803c              STRH     r4,[r7,#0]            ;494
                  |L1.2814|
000afe  f9b71000          LDRSH    r1,[r7,#0]            ;495  ; TBAT
000b02  20c2              MOVS     r0,#0xc2              ;495
000b04  f7fffffe          BL       lc640_write_int
000b08  8838              LDRH     r0,[r7,#0]            ;497  ; TBAT
000b0a  f06f0113          MVN      r1,#0x13              ;497
000b0e  ebc01000          RSB      r0,r0,r0,LSL #4       ;497
000b12  eb010080          ADD      r0,r1,r0,LSL #2       ;497
000b16  4952              LDR      r1,|L1.3168|
000b18  8008              STRH     r0,[r1,#0]            ;497
                  |L1.2842|
000b1a  2d1f              CMP      r5,#0x1f              ;499
000b1c  d103              BNE      |L1.2854|
000b1e  b221              SXTH     r1,r4                 ;501
000b20  2078              MOVS     r0,#0x78              ;501
000b22  f7fffffe          BL       lc640_write_int
                  |L1.2854|
000b26  2d23              CMP      r5,#0x23              ;515
000b28  d103              BNE      |L1.2866|
000b2a  b221              SXTH     r1,r4                 ;517
000b2c  2082              MOVS     r0,#0x82              ;517
000b2e  f7fffffe          BL       lc640_write_int
                  |L1.2866|
000b32  2d24              CMP      r5,#0x24              ;519
000b34  d103              BNE      |L1.2878|
000b36  b221              SXTH     r1,r4                 ;521
000b38  2084              MOVS     r0,#0x84              ;521
000b3a  f7fffffe          BL       lc640_write_int
                  |L1.2878|
000b3e  2d25              CMP      r5,#0x25              ;523
000b40  d103              BNE      |L1.2890|
000b42  b221              SXTH     r1,r4                 ;525
000b44  2094              MOVS     r0,#0x94              ;525
000b46  f7fffffe          BL       lc640_write_int
                  |L1.2890|
000b4a  2d26              CMP      r5,#0x26              ;527
000b4c  d103              BNE      |L1.2902|
000b4e  b221              SXTH     r1,r4                 ;529
000b50  2088              MOVS     r0,#0x88              ;529
000b52  f7fffffe          BL       lc640_write_int
                  |L1.2902|
000b56  2d27              CMP      r5,#0x27              ;531
000b58  d103              BNE      |L1.2914|
000b5a  b221              SXTH     r1,r4                 ;533
000b5c  2092              MOVS     r0,#0x92              ;533
000b5e  f7fffffe          BL       lc640_write_int
                  |L1.2914|
000b62  2d28              CMP      r5,#0x28              ;535
000b64  d103              BNE      |L1.2926|
000b66  b221              SXTH     r1,r4                 ;537
000b68  208c              MOVS     r0,#0x8c              ;537
000b6a  f7fffffe          BL       lc640_write_int
                  |L1.2926|
000b6e  2d29              CMP      r5,#0x29              ;539
000b70  d103              BNE      |L1.2938|
000b72  b221              SXTH     r1,r4                 ;541
000b74  208e              MOVS     r0,#0x8e              ;541
000b76  f7fffffe          BL       lc640_write_int
                  |L1.2938|
000b7a  2d2b              CMP      r5,#0x2b              ;547
000b7c  d103              BNE      |L1.2950|
000b7e  b221              SXTH     r1,r4                 ;549
000b80  2096              MOVS     r0,#0x96              ;549
000b82  f7fffffe          BL       lc640_write_int
                  |L1.2950|
000b86  2d2c              CMP      r5,#0x2c              ;551
000b88  d103              BNE      |L1.2962|
000b8a  b221              SXTH     r1,r4                 ;553
000b8c  207e              MOVS     r0,#0x7e              ;553
000b8e  f7fffffe          BL       lc640_write_int
                  |L1.2962|
000b92  2d2d              CMP      r5,#0x2d              ;555
000b94  d103              BNE      |L1.2974|
000b96  b221              SXTH     r1,r4                 ;557
000b98  20c6              MOVS     r0,#0xc6              ;557
000b9a  f7fffffe          BL       lc640_write_int
                  |L1.2974|
000b9e  2d2e              CMP      r5,#0x2e              ;559
000ba0  d103              BNE      |L1.2986|
000ba2  b221              SXTH     r1,r4                 ;561
000ba4  20cc              MOVS     r0,#0xcc              ;561
000ba6  f7fffffe          BL       lc640_write_int
                  |L1.2986|
000baa  2d2f              CMP      r5,#0x2f              ;563
000bac  d103              BNE      |L1.2998|
000bae  b221              SXTH     r1,r4                 ;565
000bb0  20ce              MOVS     r0,#0xce              ;565
000bb2  f7fffffe          BL       lc640_write_int
                  |L1.2998|
000bb6  2d30              CMP      r5,#0x30              ;567
000bb8  d104              BNE      |L1.3012|
000bba  b221              SXTH     r1,r4                 ;569
000bbc  f44f708b          MOV      r0,#0x116             ;569
000bc0  f7fffffe          BL       lc640_write_int
                  |L1.3012|
000bc4  2d31              CMP      r5,#0x31              ;571
000bc6  d104              BNE      |L1.3026|
000bc8  b221              SXTH     r1,r4                 ;573
000bca  f44f708c          MOV      r0,#0x118             ;573
000bce  f7fffffe          BL       lc640_write_int
                  |L1.3026|
000bd2  2d32              CMP      r5,#0x32              ;575
000bd4  d104              BNE      |L1.3040|
000bd6  b221              SXTH     r1,r4                 ;577
000bd8  f44f708d          MOV      r0,#0x11a             ;577
000bdc  f7fffffe          BL       lc640_write_int
                  |L1.3040|
000be0  2d33              CMP      r5,#0x33              ;579
000be2  d104              BNE      |L1.3054|
000be4  b221              SXTH     r1,r4                 ;581
000be6  f44f7095          MOV      r0,#0x12a             ;581
000bea  f7fffffe          BL       lc640_write_int
                  |L1.3054|
000bee  2d34              CMP      r5,#0x34              ;583
000bf0  d104              BNE      |L1.3068|
000bf2  b221              SXTH     r1,r4                 ;585
000bf4  f44f7096          MOV      r0,#0x12c             ;585
000bf8  f7fffffe          BL       lc640_write_int
                  |L1.3068|
000bfc  2d35              CMP      r5,#0x35              ;587
000bfe  d104              BNE      |L1.3082|
000c00  b221              SXTH     r1,r4                 ;589
000c02  f44f7097          MOV      r0,#0x12e             ;589
000c06  f7fffffe          BL       lc640_write_int
                  |L1.3082|
000c0a  f8cd9000          STR      r9,[sp,#0]            ;636
000c0e  f8b80000          LDRH     r0,[r8,#0]            ;636  ; MODBUS_ADRESS
000c12  2301              MOVS     r3,#1                 ;636
000c14  462a              MOV      r2,r5                 ;636
000c16  4631              MOV      r1,r6                 ;636
000c18  b2c0              UXTB     r0,r0                 ;636
000c1a  f7fffffe          BL       modbus_hold_registers_transmit
                  |L1.3102|
000c1e  e718              B        |L1.2642|
                  |L1.3104|
000c20  4b10              LDR      r3,|L1.3172|
000c22  f9b33000          LDRSH    r3,[r3,#0]            ;639  ; ICA_MODBUS_ADDRESS
000c26  4298              CMP      r0,r3                 ;639
000c28  d1f9              BNE      |L1.3102|
000c2a  78c8              LDRB     r0,[r1,#3]            ;641  ; ica_plazma
000c2c  f1000001          ADD      r0,r0,#1              ;641
000c30  70c8              STRB     r0,[r1,#3]            ;641
000c32  2e04              CMP      r6,#4                 ;642
000c34  d1f3              BNE      |L1.3102|
000c36  7888              LDRB     r0,[r1,#2]            ;644  ; ica_plazma
000c38  f1000001          ADD      r0,r0,#1              ;644
000c3c  7088              STRB     r0,[r1,#2]            ;644
000c3e  7890              LDRB     r0,[r2,#2]            ;645  ; modbus_an_buffer
000c40  2802              CMP      r0,#2                 ;645
000c42  d1ec              BNE      |L1.3102|
000c44  7910              LDRB     r0,[r2,#4]            ;647  ; modbus_an_buffer
000c46  78d1              LDRB     r1,[r2,#3]            ;647  ; modbus_an_buffer
000c48  eb002001          ADD      r0,r0,r1,LSL #8       ;647
000c4c  4906              LDR      r1,|L1.3176|
000c4e  8008              STRH     r0,[r1,#0]            ;647
000c50  e6ff              B        |L1.2642|
;;;656    /*
                          ENDP

000c52  0000              DCW      0x0000
                  |L1.3156|
                          DCD      ||area_number.8||
                  |L1.3160|
                          DCD      0x40024000
                  |L1.3164|
                          DCD      TBAT
                  |L1.3168|
                          DCD      main_kb_cnt
                  |L1.3172|
                          DCD      ICA_MODBUS_ADDRESS
                  |L1.3176|
                          DCD      ica_your_current

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  modbus_buf
                          %        20

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  modbus_rx_buffer
                          %        30
                  modbus_an_buffer
                          %        30
                  modbus_tx_buff
                          %        100

                          AREA ||.data||, DATA, ALIGN=1

                  modbus_crc16
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  modbus_timeout_cnt
000000  00                DCB      0x00

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  bMODBUS_TIMEOUT
000000  00                DCB      0x00
                  modbus_rx_buffer_ptr
000001  00                DCB      0x00
                  modbus_rx_counter
000002  0000              DCB      0x00,0x00
                  modbus_plazma
000004  0000              DCB      0x00,0x00
                  modbus_plazma1
000006  0000              DCB      0x00,0x00
                  modbus_plazma2
000008  0000              DCB      0x00,0x00
                  modbus_plazma3
00000a  0000              DCB      0x00,0x00

                          AREA ||area_number.9||, DATA, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.data||
                  modbus_rx_arg0
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.10||, DATA, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.data||
                  modbus_rx_arg1
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.11||, DATA, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.data||
                  modbus_rx_arg2
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.12||, DATA, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.data||
                  modbus_rx_arg3
000000  0000              DCB      0x00,0x00
