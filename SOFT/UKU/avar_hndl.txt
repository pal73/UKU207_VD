; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\avar_hndl.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\avar_hndl.d --feedback=.\EXE\UKU_VD_WG12232L3.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_VD -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DWG12232L3 --omf_browse=.\EXE\avar_hndl.crf avar_hndl.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  avar_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  b530              PUSH     {r4,r5,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000002  48ff              LDR      r0,|L1.1024|
000004  4aff              LDR      r2,|L1.1028|
000006  7801              LDRB     r1,[r0,#0]  ; net_av
000008  6810              LDR      r0,[r2,#0]
00000a  b119              CBZ      r1,|L1.20|
00000c  f0400001          ORR      r0,r0,#1
000010  6010              STR      r0,[r2,#0]  ; avar_stat
000012  e002              B        |L1.26|
                  |L1.20|
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  f0200001          BIC      r0,r0,#1
000018  6010              STR      r0,[r2,#0]  ; avar_stat
                  |L1.26|
;;;66     
;;;67     for(i=0;i<29;i++)
00001a  f04f0000          MOV      r0,#0
;;;68     	{
;;;69     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00001e  4cfa              LDR      r4,|L1.1032|
000020  f04f0301          MOV      r3,#1
                  |L1.36|
000024  ebc01100          RSB      r1,r0,r0,LSL #4
000028  eb0401c1          ADD      r1,r4,r1,LSL #3
00002c  7849              LDRB     r1,[r1,#1]
00002e  f0110fef          TST      r1,#0xef
000032  d00a              BEQ      |L1.74|
000034  f1000503          ADD      r5,r0,#3
000038  fa03f105          LSL      r1,r3,r5
00003c  6815              LDR      r5,[r2,#0]  ; avar_stat
00003e  ea250501          BIC      r5,r5,r1
000042  ea450501          ORR      r5,r5,r1
000046  6015              STR      r5,[r2,#0]  ; avar_stat
000048  e007              B        |L1.90|
                  |L1.74|
;;;70     	else	   			SET_REG(avar_stat,0,3+i,1);
00004a  f1000103          ADD      r1,r0,#3
00004e  fa03f501          LSL      r5,r3,r1
000052  6811              LDR      r1,[r2,#0]  ; avar_stat
000054  ea210105          BIC      r1,r1,r5
000058  6011              STR      r1,[r2,#0]  ; avar_stat
                  |L1.90|
00005a  f1000001          ADD      r0,r0,#1              ;67
00005e  b2c0              UXTB     r0,r0                 ;67
000060  281d              CMP      r0,#0x1d              ;67
000062  d3df              BCC      |L1.36|
;;;71     	}
;;;72     for(i=29;i<32;i++)
000064  f04f001d          MOV      r0,#0x1d
                  |L1.104|
;;;73     	{
;;;74     	if(bps[i]._av&0xef)	SET_REG(avar_stat1,1,i-29,1);
000068  ebc01100          RSB      r1,r0,r0,LSL #4
00006c  eb0401c1          ADD      r1,r4,r1,LSL #3
000070  7849              LDRB     r1,[r1,#1]
000072  f0110fef          TST      r1,#0xef
000076  d00a              BEQ      |L1.142|
000078  f1a0051d          SUB      r5,r0,#0x1d
00007c  fa03f105          LSL      r1,r3,r5
000080  6855              LDR      r5,[r2,#4]  ; avar_stat1
000082  ea250501          BIC      r5,r5,r1
000086  ea450501          ORR      r5,r5,r1
00008a  6055              STR      r5,[r2,#4]  ; avar_stat1
00008c  e007              B        |L1.158|
                  |L1.142|
;;;75     	else	   			SET_REG(avar_stat1,0,i-29,1);
00008e  f1a0011d          SUB      r1,r0,#0x1d
000092  fa03f501          LSL      r5,r3,r1
000096  6851              LDR      r1,[r2,#4]  ; avar_stat1
000098  ea210105          BIC      r1,r1,r5
00009c  6051              STR      r1,[r2,#4]  ; avar_stat1
                  |L1.158|
00009e  f1000001          ADD      r0,r0,#1              ;72
0000a2  b2c0              UXTB     r0,r0                 ;72
0000a4  2820              CMP      r0,#0x20              ;72
0000a6  d3df              BCC      |L1.104|
;;;76     	}
;;;77     
;;;78     
;;;79     if(uout_av)			SET_REG(avar_stat,1,1,1);
0000a8  48d8              LDR      r0,|L1.1036|
0000aa  7800              LDRB     r0,[r0,#0]  ; uout_av
0000ac  b120              CBZ      r0,|L1.184|
0000ae  6810              LDR      r0,[r2,#0]  ; avar_stat
0000b0  f0400002          ORR      r0,r0,#2
0000b4  6010              STR      r0,[r2,#0]  ; avar_stat
0000b6  e003              B        |L1.192|
                  |L1.184|
;;;80     else	   			SET_REG(avar_stat,0,1,1);
0000b8  6810              LDR      r0,[r2,#0]  ; avar_stat
0000ba  f0200002          BIC      r0,r0,#2
0000be  6010              STR      r0,[r2,#0]  ; avar_stat
                  |L1.192|
;;;81     
;;;82     
;;;83     avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
0000c0  6810              LDR      r0,[r2,#0]  ; avar_stat
0000c2  6911              LDR      r1,[r2,#0x10]  ; avar_stat_old
0000c4  4604              MOV      r4,r0
0000c6  ea200001          BIC      r0,r0,r1
0000ca  6190              STR      r0,[r2,#0x18]  ; avar_stat_new
;;;84     
;;;85     avar_ind_stat|=avar_stat_new;
0000cc  6893              LDR      r3,[r2,#8]  ; avar_ind_stat
0000ce  ea430300          ORR      r3,r3,r0
0000d2  6093              STR      r3,[r2,#8]  ; avar_ind_stat
;;;86     
;;;87     avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
0000d4  ea210104          BIC      r1,r1,r4
0000d8  ea6f0001          MVN      r0,r1
0000dc  61d0              STR      r0,[r2,#0x1c]  ; avar_stat_offed
;;;88     
;;;89     if(!AV_OFF_AVT)avar_stat_offed|=0x00000006;
0000de  49cc              LDR      r1,|L1.1040|
0000e0  f9b11000          LDRSH    r1,[r1,#0]  ; AV_OFF_AVT
0000e4  2900              CMP      r1,#0
0000e6  d102              BNE      |L1.238|
0000e8  f0400006          ORR      r0,r0,#6
0000ec  61d0              STR      r0,[r2,#0x1c]  ; avar_stat_offed
                  |L1.238|
;;;90     
;;;91     avar_ind_stat&=avar_stat_offed; 
0000ee  69d0              LDR      r0,[r2,#0x1c]  ; avar_stat_offed
0000f0  ea030300          AND      r3,r3,r0
0000f4  6093              STR      r3,[r2,#8]  ; avar_ind_stat
;;;92     
;;;93     avar_stat_old=avar_stat;
0000f6  6114              STR      r4,[r2,#0x10]  ; avar_stat_old
;;;94     
;;;95     
;;;96     avar_stat1_new=(avar_stat1^avar_stat1_old)&avar_stat1;
0000f8  6850              LDR      r0,[r2,#4]  ; avar_stat1
0000fa  6953              LDR      r3,[r2,#0x14]  ; avar_stat1_old
0000fc  4604              MOV      r4,r0
0000fe  ea200003          BIC      r0,r0,r3
000102  6210              STR      r0,[r2,#0x20]  ; avar_stat1_new
;;;97     
;;;98     avar_ind_stat1|=avar_stat1_new;
000104  68d1              LDR      r1,[r2,#0xc]  ; avar_ind_stat1
000106  ea410100          ORR      r1,r1,r0
00010a  60d1              STR      r1,[r2,#0xc]  ; avar_ind_stat1
;;;99     
;;;100    avar_stat1_offed=~((avar_stat1^avar_stat1_old)&avar_stat1_old);
00010c  ea230304          BIC      r3,r3,r4
000110  ea6f0003          MVN      r0,r3
000114  6250              STR      r0,[r2,#0x24]  ; avar_stat1_offed
;;;101    
;;;102    if(!AV_OFF_AVT)avar_stat1_offed|=0x00000000;
;;;103    
;;;104    avar_ind_stat1&=avar_stat1_offed; 
000116  ea010100          AND      r1,r1,r0
00011a  60d1              STR      r1,[r2,#0xc]  ; avar_ind_stat1
;;;105    
;;;106    avar_stat1_old=avar_stat1;
00011c  6154              STR      r4,[r2,#0x14]  ; avar_stat1_old
;;;107    }
00011e  bd30              POP      {r4,r5,pc}
;;;108    
                          ENDP

                  reload_hndl PROC
;;;109    //-----------------------------------------------
;;;110    void reload_hndl(void)
000120  b5f8              PUSH     {r3-r7,lr}
;;;111    {
;;;112    char data[4];
;;;113    unsigned int event_ptr,lc640_adr/*,event_ptr_find*/,event_cnt;
;;;114    
;;;115    event_ptr=lc640_read_int(PTR_EVENT_LOG);
000122  f44f6560          MOV      r5,#0xe00
000126  4628              MOV      r0,r5
000128  f7fffffe          BL       lc640_read_int
;;;116    event_ptr++;	
00012c  f1000001          ADD      r0,r0,#1
000130  4604              MOV      r4,r0
;;;117    if(event_ptr>63)event_ptr=0;	
000132  2c3f              CMP      r4,#0x3f
000134  d901              BLS      |L1.314|
000136  f04f0400          MOV      r4,#0
                  |L1.314|
;;;118    lc640_write_int(PTR_EVENT_LOG,event_ptr);	
00013a  b221              SXTH     r1,r4
00013c  4628              MOV      r0,r5
00013e  f7fffffe          BL       lc640_write_int
;;;119    	
;;;120    event_cnt=lc640_read_int(CNT_EVENT_LOG);
000142  f6406602          MOV      r6,#0xe02
000146  4630              MOV      r0,r6
000148  f7fffffe          BL       lc640_read_int
;;;121    if(event_cnt!=63)event_cnt=event_ptr;
00014c  283f              CMP      r0,#0x3f
00014e  d000              BEQ      |L1.338|
000150  4620              MOV      r0,r4
                  |L1.338|
;;;122    lc640_write_int(CNT_EVENT_LOG,event_cnt); 
000152  b201              SXTH     r1,r0
000154  4630              MOV      r0,r6
000156  f7fffffe          BL       lc640_write_int
;;;123    	
;;;124    lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
00015a  4628              MOV      r0,r5
00015c  f7fffffe          BL       lc640_read_int
000160  f44f6180          MOV      r1,#0x400
000164  eb011440          ADD      r4,r1,r0,LSL #5
;;;125    	
;;;126    data[0]='U';
000168  f04f0055          MOV      r0,#0x55
00016c  f88d0000          STRB     r0,[sp,#0]
;;;127    data[1]=0;
000170  f04f0600          MOV      r6,#0
000174  f88d6001          STRB     r6,[sp,#1]
;;;128    data[2]='R';
000178  f04f0052          MOV      r0,#0x52
00017c  f88d0002          STRB     r0,[sp,#2]
;;;129    data[3]=0;
000180  f88d6003          STRB     r6,[sp,#3]
;;;130    lc640_write_long_ptr(lc640_adr,data);
000184  4669              MOV      r1,sp
000186  4620              MOV      r0,r4
000188  f7fffffe          BL       lc640_write_long_ptr
;;;131    
;;;132    data[0]=0;
;;;133    data[1]=0;
;;;134    data[2]=0;
;;;135    data[3]=0;
00018c  9600              STR      r6,[sp,#0]
;;;136    lc640_write_long_ptr(lc640_adr+4,data);
00018e  4669              MOV      r1,sp
000190  1d20              ADDS     r0,r4,#4
000192  f7fffffe          BL       lc640_write_long_ptr
;;;137    
;;;138    data[0]=LPC_RTC->YEAR;
000196  4d9f              LDR      r5,|L1.1044|
000198  8ba8              LDRH     r0,[r5,#0x1c]
00019a  f88d0000          STRB     r0,[sp,#0]
;;;139    data[1]=LPC_RTC->MONTH;
00019e  7e28              LDRB     r0,[r5,#0x18]
0001a0  f88d0001          STRB     r0,[sp,#1]
;;;140    data[2]=LPC_RTC->DOM;
0001a4  7b28              LDRB     r0,[r5,#0xc]
0001a6  f88d0002          STRB     r0,[sp,#2]
;;;141    data[3]=0;
0001aa  f88d6003          STRB     r6,[sp,#3]
;;;142    lc640_write_long_ptr(lc640_adr+8,data);
0001ae  4669              MOV      r1,sp
0001b0  f1040008          ADD      r0,r4,#8
0001b4  f7fffffe          BL       lc640_write_long_ptr
;;;143    
;;;144    data[0]=LPC_RTC->HOUR;
0001b8  7a28              LDRB     r0,[r5,#8]
0001ba  f88d0000          STRB     r0,[sp,#0]
;;;145    data[1]=LPC_RTC->MIN;
0001be  7928              LDRB     r0,[r5,#4]
0001c0  f88d0001          STRB     r0,[sp,#1]
;;;146    data[2]=LPC_RTC->SEC;
0001c4  7828              LDRB     r0,[r5,#0]
0001c6  f88d0002          STRB     r0,[sp,#2]
;;;147    data[3]=LPC_SC->RSID;
0001ca  4893              LDR      r0,|L1.1048|
0001cc  f8d00180          LDR      r0,[r0,#0x180]
0001d0  f88d0003          STRB     r0,[sp,#3]
;;;148    
;;;149    lc640_write_long_ptr(lc640_adr+12,data);
0001d4  4669              MOV      r1,sp
0001d6  f104000c          ADD      r0,r4,#0xc
0001da  f7fffffe          BL       lc640_write_long_ptr
;;;150    	
;;;151    data[0]='A';
0001de  f04f0541          MOV      r5,#0x41
0001e2  f88d5000          STRB     r5,[sp,#0]
;;;152    data[1]='A';
0001e6  f88d5001          STRB     r5,[sp,#1]
;;;153    data[2]='A';
0001ea  f88d5002          STRB     r5,[sp,#2]
;;;154    data[3]='A';
0001ee  f88d5003          STRB     r5,[sp,#3]
;;;155    lc640_write_long_ptr(lc640_adr+16,data);
0001f2  4669              MOV      r1,sp
0001f4  f1040010          ADD      r0,r4,#0x10
0001f8  f7fffffe          BL       lc640_write_long_ptr
;;;156    	
;;;157    data[0]='A';
0001fc  f88d5000          STRB     r5,[sp,#0]
;;;158    data[1]='A';
000200  f88d5001          STRB     r5,[sp,#1]
;;;159    data[2]='A';
000204  f88d5002          STRB     r5,[sp,#2]
;;;160    data[3]='A';
000208  f88d5003          STRB     r5,[sp,#3]
;;;161    lc640_write_long_ptr(lc640_adr+20,data);
00020c  4669              MOV      r1,sp
00020e  f1040014          ADD      r0,r4,#0x14
000212  f7fffffe          BL       lc640_write_long_ptr
;;;162    	
;;;163    data[0]='A';
000216  f88d5000          STRB     r5,[sp,#0]
;;;164    data[1]='A';
00021a  f88d5001          STRB     r5,[sp,#1]
;;;165    data[2]='A';
00021e  f88d5002          STRB     r5,[sp,#2]
;;;166    data[3]='A';
000222  f88d5003          STRB     r5,[sp,#3]
;;;167    lc640_write_long_ptr(lc640_adr+24,data);
000226  4669              MOV      r1,sp
000228  f1040018          ADD      r0,r4,#0x18
00022c  f7fffffe          BL       lc640_write_long_ptr
;;;168    	
;;;169    data[0]='A';
000230  f88d5000          STRB     r5,[sp,#0]
;;;170    data[1]='A';
000234  f88d5001          STRB     r5,[sp,#1]
;;;171    data[2]='A';
000238  f88d5002          STRB     r5,[sp,#2]
;;;172    data[3]='A';
00023c  f88d5003          STRB     r5,[sp,#3]
;;;173    lc640_write_long_ptr(lc640_adr+28,data);				
000240  4669              MOV      r1,sp
000242  f104001c          ADD      r0,r4,#0x1c
000246  f7fffffe          BL       lc640_write_long_ptr
;;;174    	
;;;175    	
;;;176    }
00024a  bdf8              POP      {r3-r7,pc}
;;;177    
                          ENDP

                  avar_bps_hndl PROC
;;;326    //-----------------------------------------------
;;;327    void avar_bps_hndl(char dev, char v, char in)
00024c  e92d4ff8          PUSH     {r3-r11,lr}
;;;328    {
000250  4606              MOV      r6,r0
000252  460c              MOV      r4,r1
;;;329    char data[4];
;;;330    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;331    char avar_simbol;
;;;332    
;;;333    avar_simbol='T';
000254  f04f0754          MOV      r7,#0x54
;;;334    if(v==0)avar_simbol='T';
000258  b174              CBZ      r4,|L1.632|
;;;335    else if(v==1)avar_simbol='U';
00025a  2c01              CMP      r4,#1
00025c  d004              BEQ      |L1.616|
;;;336    else if(v==2)avar_simbol='u';
00025e  2c02              CMP      r4,#2
000260  d005              BEQ      |L1.622|
;;;337    else if(v==3)avar_simbol='L';
000262  2c03              CMP      r4,#3
000264  d006              BEQ      |L1.628|
000266  e007              B        |L1.632|
                  |L1.616|
000268  f04f0755          MOV      r7,#0x55              ;335
00026c  e004              B        |L1.632|
                  |L1.622|
00026e  f04f0775          MOV      r7,#0x75              ;336
000272  e001              B        |L1.632|
                  |L1.628|
000274  f04f074c          MOV      r7,#0x4c
                  |L1.632|
;;;338    
;;;339    if(in==1)
;;;340    	{
;;;341    	//av_src[bps]=1;
;;;342    
;;;343    //	SET_REG(avar_ind_stat,1,3+dev,1);
;;;344    //	SET_REG(avar_stat,1,3+dev,1);
;;;345    	
;;;346    	if(v==0)bps[dev]._av|=(1<<0);
;;;347    	else if(v==1) bps[dev]._av|=(1<<1);
;;;348    	else if(v==2) bps[dev]._av|=(1<<2);
;;;349    	else if(v==3) bps[dev]._av|=(1<<3);
;;;350    
;;;351    	bps[dev]._last_avar=v;
;;;352    
;;;353    	//beep_init(0x33333333,'A');
;;;354    
;;;355    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;356    	event_ptr++;	
;;;357    	if(event_ptr>63)event_ptr=0;	
;;;358    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;359    	
;;;360         event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;361    	if(event_cnt!=63)event_cnt=event_ptr;
;;;362    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;363    	
;;;364    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;365    	
;;;366    	data[0]='S';
;;;367    	data[1]=dev; 
;;;368    	data[2]=avar_simbol;
;;;369    	data[3]=0;
;;;370    	lc640_write_long_ptr(lc640_adr,data);
;;;371    
;;;372    	data[0]=0;
;;;373    	data[1]=0;
;;;374    	data[2]=0;
;;;375    	data[3]=0;
;;;376    	lc640_write_long_ptr(lc640_adr+4,data);
;;;377    
;;;378    	data[0]=LPC_RTC->YEAR;
000278  f8df8198          LDR      r8,|L1.1044|
00027c  4862              LDR      r0,|L1.1032|
00027e  ebc61106          RSB      r1,r6,r6,LSL #4       ;346
000282  f04f0900          MOV      r9,#0                 ;328
000286  f1a80820          SUB      r8,r8,#0x20
00028a  f44f6a60          MOV      r10,#0xe00            ;355
00028e  f44f6580          MOV      r5,#0x400             ;364
000292  eb0000c1          ADD      r0,r0,r1,LSL #3       ;346
000296  2a01              CMP      r2,#1                 ;339
000298  d002              BEQ      |L1.672|
;;;379    	data[1]=LPC_RTC->MONTH;
;;;380    	data[2]=LPC_RTC->DOM;
;;;381    	data[3]=0;
;;;382    	lc640_write_long_ptr(lc640_adr+8,data);
;;;383    
;;;384    	data[0]=LPC_RTC->HOUR;
;;;385    	data[1]=LPC_RTC->MIN;
;;;386    	data[2]=LPC_RTC->SEC;
;;;387    	data[3]=0;
;;;388    	lc640_write_long_ptr(lc640_adr+12,data);
;;;389    	
;;;390    	data[0]='A';
;;;391    	data[1]='A';
;;;392    	data[2]='A';
;;;393    	data[3]='A';
;;;394    	lc640_write_long_ptr(lc640_adr+16,data);
;;;395    	
;;;396    	data[0]='A';
;;;397    	data[1]='A';
;;;398    	data[2]='A';
;;;399    	data[3]='A';
;;;400    	lc640_write_long_ptr(lc640_adr+20,data);
;;;401    	
;;;402    	data[0]='A';
;;;403    	data[1]='A';
;;;404    	data[2]='A';
;;;405    	data[3]='A';
;;;406    	lc640_write_long_ptr(lc640_adr+24,data);
;;;407    	
;;;408    	data[0]='A';
;;;409    	data[1]='A';
;;;410    	data[2]='A';
;;;411    	data[3]='A';
;;;412    	lc640_write_long_ptr(lc640_adr+28,data);		
;;;413    
;;;414    
;;;415    	if(dev==0)
;;;416    		{
;;;417    		if(v==0)
;;;418    		snmp_trap_send("BPS #1 Alarm, overheat",4,1,0);
;;;419    		else if(v==1)
;;;420    		snmp_trap_send("BPS #1 Alarm, voltage is up",4,1,1);
;;;421    		else if(v==2)
;;;422    		snmp_trap_send("BPS #1 Alarm, voltage is down",4,1,2);
;;;423    		else if(v==3)
;;;424    		snmp_trap_send("BPS #1 Alarm, connect is lost",4,1,3);
;;;425    		}
;;;426    	else if(dev==1)
;;;427    		{
;;;428    		if(v==0)
;;;429    		snmp_trap_send("BPS #2 Alarm, overheat",4,2,0);
;;;430    		else if(v==1)
;;;431    		snmp_trap_send("BPS #2 Alarm, voltage is up",4,2,1);
;;;432    		else if(v==2)
;;;433    		snmp_trap_send("BPS #2 Alarm, voltage is down",4,2,2);
;;;434    		else if(v==3)
;;;435    		snmp_trap_send("BPS #2 Alarm, connect is lost",4,2,3);
;;;436    		} 
;;;437    	else if(dev==2)
;;;438    		{
;;;439    		if(v==0)
;;;440    		snmp_trap_send("BPS #3 Alarm, overheat",4,3,0);
;;;441    		else if(v==1)
;;;442    		snmp_trap_send("BPS #3 Alarm, voltage is up",4,3,1);
;;;443    		else if(v==2)
;;;444    		snmp_trap_send("BPS #3 Alarm, voltage is down",4,3,2);
;;;445    		else if(v==3)
;;;446    		snmp_trap_send("BPS #3 Alarm, connect is lost",4,3,3);
;;;447    		} 	
;;;448    			
;;;449    	}
;;;450    
;;;451    else if(in==0)
00029a  2a00              CMP      r2,#0
00029c  d07e              BEQ      |L1.924|
00029e  e1d3              B        |L1.1608|
                  |L1.672|
0002a0  b134              CBZ      r4,|L1.688|
0002a2  2c01              CMP      r4,#1                 ;347
0002a4  d009              BEQ      |L1.698|
0002a6  2c02              CMP      r4,#2                 ;348
0002a8  d00c              BEQ      |L1.708|
0002aa  2c03              CMP      r4,#3                 ;349
0002ac  d00f              BEQ      |L1.718|
0002ae  e012              B        |L1.726|
                  |L1.688|
0002b0  7841              LDRB     r1,[r0,#1]            ;346
0002b2  f0410101          ORR      r1,r1,#1              ;346
0002b6  7041              STRB     r1,[r0,#1]            ;346
0002b8  e00d              B        |L1.726|
                  |L1.698|
0002ba  7841              LDRB     r1,[r0,#1]            ;347
0002bc  f0410102          ORR      r1,r1,#2              ;347
0002c0  7041              STRB     r1,[r0,#1]            ;347
0002c2  e008              B        |L1.726|
                  |L1.708|
0002c4  7841              LDRB     r1,[r0,#1]            ;348
0002c6  f0410104          ORR      r1,r1,#4              ;348
0002ca  7041              STRB     r1,[r0,#1]            ;348
0002cc  e003              B        |L1.726|
                  |L1.718|
0002ce  7841              LDRB     r1,[r0,#1]            ;349
0002d0  f0410108          ORR      r1,r1,#8              ;349
0002d4  7041              STRB     r1,[r0,#1]            ;349
                  |L1.726|
0002d6  f8804059          STRB     r4,[r0,#0x59]         ;351
0002da  4650              MOV      r0,r10                ;355
0002dc  f7fffffe          BL       lc640_read_int
0002e0  f1000001          ADD      r0,r0,#1              ;356
0002e4  fa1ffb80          UXTH     r11,r0                ;356
0002e8  f1bb0f3f          CMP      r11,#0x3f             ;357
0002ec  d901              BLS      |L1.754|
0002ee  f04f0b00          MOV      r11,#0                ;357
                  |L1.754|
0002f2  fa0ff18b          SXTH     r1,r11                ;358
0002f6  4650              MOV      r0,r10                ;358
0002f8  f7fffffe          BL       lc640_write_int
0002fc  f6406002          MOV      r0,#0xe02             ;360
000300  f7fffffe          BL       lc640_read_int
000304  b280              UXTH     r0,r0                 ;360
000306  283f              CMP      r0,#0x3f              ;361
000308  d000              BEQ      |L1.780|
00030a  4658              MOV      r0,r11                ;361
                  |L1.780|
00030c  b201              SXTH     r1,r0                 ;362
00030e  f6406002          MOV      r0,#0xe02             ;362
000312  f7fffffe          BL       lc640_write_int
000316  4650              MOV      r0,r10                ;364
000318  f7fffffe          BL       lc640_read_int
00031c  eb051040          ADD      r0,r5,r0,LSL #5       ;364
000320  b285              UXTH     r5,r0                 ;364
000322  f04f0053          MOV      r0,#0x53              ;366
000326  f88d0000          STRB     r0,[sp,#0]            ;366
00032a  f88d6001          STRB     r6,[sp,#1]            ;367
00032e  f88d7002          STRB     r7,[sp,#2]            ;368
000332  f88d9003          STRB     r9,[sp,#3]            ;369
000336  4669              MOV      r1,sp                 ;370
000338  4628              MOV      r0,r5                 ;370
00033a  f7fffffe          BL       lc640_write_long_ptr
00033e  f8cd9000          STR      r9,[sp,#0]            ;375
000342  4669              MOV      r1,sp                 ;376
000344  1d28              ADDS     r0,r5,#4              ;376
000346  f7fffffe          BL       lc640_write_long_ptr
00034a  f8b8003c          LDRH     r0,[r8,#0x3c]         ;378
00034e  f88d0000          STRB     r0,[sp,#0]            ;378
000352  f8980038          LDRB     r0,[r8,#0x38]         ;379
000356  f88d0001          STRB     r0,[sp,#1]            ;379
00035a  f898002c          LDRB     r0,[r8,#0x2c]         ;380
00035e  f88d0002          STRB     r0,[sp,#2]            ;380
000362  f88d9003          STRB     r9,[sp,#3]            ;381
000366  4669              MOV      r1,sp                 ;382
000368  f1050008          ADD      r0,r5,#8              ;382
00036c  f7fffffe          BL       lc640_write_long_ptr
000370  f8980028          LDRB     r0,[r8,#0x28]         ;384
000374  f88d0000          STRB     r0,[sp,#0]            ;384
000378  f8980024          LDRB     r0,[r8,#0x24]         ;385
00037c  f88d0001          STRB     r0,[sp,#1]            ;385
000380  f8980020          LDRB     r0,[r8,#0x20]         ;386
000384  f88d0002          STRB     r0,[sp,#2]            ;386
000388  f88d9003          STRB     r9,[sp,#3]            ;387
00038c  4669              MOV      r1,sp                 ;388
00038e  f105000c          ADD      r0,r5,#0xc            ;388
000392  f7fffffe          BL       lc640_write_long_ptr
000396  f04f0741          MOV      r7,#0x41              ;390
00039a  e000              B        |L1.926|
                  |L1.924|
00039c  e0b4              B        |L1.1288|
                  |L1.926|
00039e  f88d7000          STRB     r7,[sp,#0]            ;390
0003a2  f88d7001          STRB     r7,[sp,#1]            ;391
0003a6  f88d7002          STRB     r7,[sp,#2]            ;392
0003aa  f88d7003          STRB     r7,[sp,#3]            ;393
0003ae  4669              MOV      r1,sp                 ;394
0003b0  f1050010          ADD      r0,r5,#0x10           ;394
0003b4  f7fffffe          BL       lc640_write_long_ptr
0003b8  f88d7000          STRB     r7,[sp,#0]            ;396
0003bc  f88d7001          STRB     r7,[sp,#1]            ;397
0003c0  f88d7002          STRB     r7,[sp,#2]            ;398
0003c4  f88d7003          STRB     r7,[sp,#3]            ;399
0003c8  4669              MOV      r1,sp                 ;400
0003ca  f1050014          ADD      r0,r5,#0x14           ;400
0003ce  f7fffffe          BL       lc640_write_long_ptr
0003d2  f88d7000          STRB     r7,[sp,#0]            ;402
0003d6  f88d7001          STRB     r7,[sp,#1]            ;403
0003da  f88d7002          STRB     r7,[sp,#2]            ;404
0003de  f88d7003          STRB     r7,[sp,#3]            ;405
0003e2  4669              MOV      r1,sp                 ;406
0003e4  f1050018          ADD      r0,r5,#0x18           ;406
0003e8  f7fffffe          BL       lc640_write_long_ptr
0003ec  f88d7000          STRB     r7,[sp,#0]            ;408
0003f0  f88d7001          STRB     r7,[sp,#1]            ;409
0003f4  f88d7002          STRB     r7,[sp,#2]            ;410
0003f8  f88d7003          STRB     r7,[sp,#3]            ;411
0003fc  4669              MOV      r1,sp                 ;412
0003fe  e00d              B        |L1.1052|
                  |L1.1024|
                          DCD      net_av
                  |L1.1028|
                          DCD      ||.data||
                  |L1.1032|
                          DCD      bps
                  |L1.1036|
                          DCD      uout_av
                  |L1.1040|
                          DCD      AV_OFF_AVT
                  |L1.1044|
                          DCD      0x40024020
                  |L1.1048|
                          DCD      0x400fc000
                  |L1.1052|
00041c  f105001c          ADD      r0,r5,#0x1c           ;412
000420  f7fffffe          BL       lc640_write_long_ptr
000424  b126              CBZ      r6,|L1.1072|
000426  2e01              CMP      r6,#1                 ;426
000428  d026              BEQ      |L1.1144|
00042a  2e02              CMP      r6,#2                 ;437
00042c  d048              BEQ      |L1.1216|
00042e  e10b              B        |L1.1608|
                  |L1.1072|
000430  b134              CBZ      r4,|L1.1088|
000432  2c01              CMP      r4,#1                 ;419
000434  d00b              BEQ      |L1.1102|
000436  2c02              CMP      r4,#2                 ;421
000438  d010              BEQ      |L1.1116|
00043a  2c03              CMP      r4,#3                 ;423
00043c  d015              BEQ      |L1.1130|
00043e  e103              B        |L1.1608|
                  |L1.1088|
000440  2300              MOVS     r3,#0                 ;418
000442  2201              MOVS     r2,#1                 ;418
000444  2104              MOVS     r1,#4                 ;418
000446  a0df              ADR      r0,|L1.1988|
000448  f7fffffe          BL       snmp_trap_send
00044c  e0fc              B        |L1.1608|
                  |L1.1102|
00044e  2301              MOVS     r3,#1                 ;420
000450  461a              MOV      r2,r3                 ;420
000452  2104              MOVS     r1,#4                 ;420
000454  a0e1              ADR      r0,|L1.2012|
000456  f7fffffe          BL       snmp_trap_send
00045a  e0f5              B        |L1.1608|
                  |L1.1116|
00045c  2302              MOVS     r3,#2                 ;422
00045e  2201              MOVS     r2,#1                 ;422
000460  2104              MOVS     r1,#4                 ;422
000462  a0e5              ADR      r0,|L1.2040|
000464  f7fffffe          BL       snmp_trap_send
000468  e0ee              B        |L1.1608|
                  |L1.1130|
00046a  2303              MOVS     r3,#3                 ;424
00046c  2201              MOVS     r2,#1                 ;424
00046e  2104              MOVS     r1,#4                 ;424
000470  a0e9              ADR      r0,|L1.2072|
000472  f7fffffe          BL       snmp_trap_send
000476  e0e7              B        |L1.1608|
                  |L1.1144|
000478  b134              CBZ      r4,|L1.1160|
00047a  2c01              CMP      r4,#1                 ;430
00047c  d00b              BEQ      |L1.1174|
00047e  2c02              CMP      r4,#2                 ;432
000480  d010              BEQ      |L1.1188|
000482  2c03              CMP      r4,#3                 ;434
000484  d015              BEQ      |L1.1202|
000486  e0df              B        |L1.1608|
                  |L1.1160|
000488  2300              MOVS     r3,#0                 ;429
00048a  2202              MOVS     r2,#2                 ;429
00048c  2104              MOVS     r1,#4                 ;429
00048e  a0ea              ADR      r0,|L1.2104|
000490  f7fffffe          BL       snmp_trap_send
000494  e0d8              B        |L1.1608|
                  |L1.1174|
000496  2301              MOVS     r3,#1                 ;431
000498  2202              MOVS     r2,#2                 ;431
00049a  2104              MOVS     r1,#4                 ;431
00049c  a0ec              ADR      r0,|L1.2128|
00049e  f7fffffe          BL       snmp_trap_send
0004a2  e0d1              B        |L1.1608|
                  |L1.1188|
0004a4  2302              MOVS     r3,#2                 ;433
0004a6  461a              MOV      r2,r3                 ;433
0004a8  2104              MOVS     r1,#4                 ;433
0004aa  a0f0              ADR      r0,|L1.2156|
0004ac  f7fffffe          BL       snmp_trap_send
0004b0  e0ca              B        |L1.1608|
                  |L1.1202|
0004b2  2303              MOVS     r3,#3                 ;435
0004b4  2202              MOVS     r2,#2                 ;435
0004b6  2104              MOVS     r1,#4                 ;435
0004b8  a0f4              ADR      r0,|L1.2188|
0004ba  f7fffffe          BL       snmp_trap_send
0004be  e0c3              B        |L1.1608|
                  |L1.1216|
0004c0  b134              CBZ      r4,|L1.1232|
0004c2  2c01              CMP      r4,#1                 ;441
0004c4  d00b              BEQ      |L1.1246|
0004c6  2c02              CMP      r4,#2                 ;443
0004c8  d010              BEQ      |L1.1260|
0004ca  2c03              CMP      r4,#3                 ;445
0004cc  d015              BEQ      |L1.1274|
0004ce  e0bb              B        |L1.1608|
                  |L1.1232|
0004d0  2300              MOVS     r3,#0                 ;440
0004d2  2203              MOVS     r2,#3                 ;440
0004d4  2104              MOVS     r1,#4                 ;440
0004d6  a0f5              ADR      r0,|L1.2220|
0004d8  f7fffffe          BL       snmp_trap_send
0004dc  e0b4              B        |L1.1608|
                  |L1.1246|
0004de  2301              MOVS     r3,#1                 ;442
0004e0  2203              MOVS     r2,#3                 ;442
0004e2  2104              MOVS     r1,#4                 ;442
0004e4  a0f7              ADR      r0,|L1.2244|
0004e6  f7fffffe          BL       snmp_trap_send
0004ea  e0ad              B        |L1.1608|
                  |L1.1260|
0004ec  2302              MOVS     r3,#2                 ;444
0004ee  2203              MOVS     r2,#3                 ;444
0004f0  2104              MOVS     r1,#4                 ;444
0004f2  a0fb              ADR      r0,|L1.2272|
0004f4  f7fffffe          BL       snmp_trap_send
0004f8  e0a6              B        |L1.1608|
                  |L1.1274|
0004fa  2303              MOVS     r3,#3                 ;446
0004fc  461a              MOV      r2,r3                 ;446
0004fe  2104              MOVS     r1,#4                 ;446
000500  a0ff              ADR      r0,|L1.2304|
000502  f7fffffe          BL       snmp_trap_send
000506  e09f              B        |L1.1608|
                  |L1.1288|
;;;452    	{      
;;;453    //	av_bps[bps]=0;
;;;454    
;;;455    	//SET_REG(avar_stat,0,3+bps,1);
;;;456    	//if(AV_OFF_AVT) SET_REG(avar_ind_stat,0,3+bps,1);
;;;457    
;;;458         if(v==0) bps[dev]._av&=(~(1<<0));
000508  b134              CBZ      r4,|L1.1304|
;;;459         else if(v==1) bps[dev]._av&=(~(1<<1));
00050a  2c01              CMP      r4,#1
00050c  d009              BEQ      |L1.1314|
;;;460    	else if(v==2) bps[dev]._av&=(~(1<<2));
00050e  2c02              CMP      r4,#2
000510  d00c              BEQ      |L1.1324|
;;;461    	else if(v==3) bps[dev]._av&=(~(1<<3));
000512  2c03              CMP      r4,#3
000514  d00f              BEQ      |L1.1334|
000516  e012              B        |L1.1342|
                  |L1.1304|
000518  7841              LDRB     r1,[r0,#1]            ;458
00051a  f0210101          BIC      r1,r1,#1              ;458
00051e  7041              STRB     r1,[r0,#1]            ;458
000520  e00d              B        |L1.1342|
                  |L1.1314|
000522  7841              LDRB     r1,[r0,#1]            ;459
000524  f0210102          BIC      r1,r1,#2              ;459
000528  7041              STRB     r1,[r0,#1]            ;459
00052a  e008              B        |L1.1342|
                  |L1.1324|
00052c  7841              LDRB     r1,[r0,#1]            ;460
00052e  f0210104          BIC      r1,r1,#4              ;460
000532  7041              STRB     r1,[r0,#1]            ;460
000534  e003              B        |L1.1342|
                  |L1.1334|
000536  7841              LDRB     r1,[r0,#1]
000538  f0210108          BIC      r1,r1,#8
00053c  7041              STRB     r1,[r0,#1]
                  |L1.1342|
;;;462         
;;;463    //	if((bps[dev]._av&0x0f==0))
;;;464    //	     {
;;;465    		//SET_REG(avar_stat,0,3+bps,1);
;;;466    		//if(AV_OFF_AVT) SET_REG(avar_ind_stat,0,3+bps,1);
;;;467    //	     }
;;;468     
;;;469    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
00053e  4650              MOV      r0,r10
000540  f7fffffe          BL       lc640_read_int
000544  fa1ffb80          UXTH     r11,r0
;;;470    	event_ptr_find=event_ptr;
000548  465c              MOV      r4,r11
                  |L1.1354|
;;;471    	
;;;472    avar_src_hndl_lbl1: 
;;;473    
;;;474    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
00054a  eb051044          ADD      r0,r5,r4,LSL #5
00054e  fa1ffa80          UXTH     r10,r0
;;;475    
;;;476         lc640_read_long_ptr(lc640_adr,data);
000552  4669              MOV      r1,sp
000554  4650              MOV      r0,r10
000556  f7fffffe          BL       lc640_read_long_ptr
;;;477         
;;;478         if(!((data[0]=='S')&&(data[1]==dev)&&(data[2]==avar_simbol)))
00055a  f89d0000          LDRB     r0,[sp,#0]
00055e  2853              CMP      r0,#0x53
000560  d107              BNE      |L1.1394|
000562  f89d0001          LDRB     r0,[sp,#1]
000566  42b0              CMP      r0,r6
000568  d103              BNE      |L1.1394|
00056a  f89d0002          LDRB     r0,[sp,#2]
00056e  42b8              CMP      r0,r7
000570  d009              BEQ      |L1.1414|
                  |L1.1394|
;;;479         	{        
;;;480         	if(event_ptr_find)event_ptr_find--;
000572  b11c              CBZ      r4,|L1.1404|
000574  f1a40401          SUB      r4,r4,#1
000578  b2a4              UXTH     r4,r4
00057a  e001              B        |L1.1408|
                  |L1.1404|
;;;481         	else event_ptr_find=63;
00057c  f04f043f          MOV      r4,#0x3f
                  |L1.1408|
;;;482         	if(event_ptr_find==event_ptr)goto avar_src_hndl_end;
000580  455c              CMP      r4,r11
000582  d1e2              BNE      |L1.1354|
000584  e060              B        |L1.1608|
                  |L1.1414|
;;;483         	else goto avar_src_hndl_lbl1;
;;;484         	}
;;;485         else 
;;;486         	{
;;;487         	lc640_read_long_ptr(lc640_adr+16,data);
000586  4669              MOV      r1,sp
000588  f10a0010          ADD      r0,r10,#0x10
00058c  f7fffffe          BL       lc640_read_long_ptr
;;;488         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
000590  f89d0000          LDRB     r0,[sp,#0]
000594  2841              CMP      r0,#0x41
000596  d10b              BNE      |L1.1456|
000598  f89d0001          LDRB     r0,[sp,#1]
00059c  2841              CMP      r0,#0x41
00059e  d107              BNE      |L1.1456|
0005a0  f89d0002          LDRB     r0,[sp,#2]
0005a4  2841              CMP      r0,#0x41
0005a6  d103              BNE      |L1.1456|
0005a8  f89d0003          LDRB     r0,[sp,#3]
0005ac  2841              CMP      r0,#0x41
0005ae  d009              BEQ      |L1.1476|
                  |L1.1456|
;;;489         		{        
;;;490         		if(event_ptr_find)event_ptr_find--;
0005b0  b11c              CBZ      r4,|L1.1466|
0005b2  f1a40401          SUB      r4,r4,#1
0005b6  b2a4              UXTH     r4,r4
0005b8  e001              B        |L1.1470|
                  |L1.1466|
;;;491             		else event_ptr_find=63;
0005ba  f04f043f          MOV      r4,#0x3f
                  |L1.1470|
;;;492             		if(event_ptr_find==event_ptr)goto avar_src_hndl_end;
0005be  455c              CMP      r4,r11
0005c0  d1c3              BNE      |L1.1354|
0005c2  e041              B        |L1.1608|
                  |L1.1476|
;;;493         		else goto avar_src_hndl_lbl1;
;;;494         		}
;;;495    
;;;496         	}	
;;;497    
;;;498    
;;;499    	
;;;500    	data[0]=LPC_RTC->YEAR;
0005c4  f8b8003c          LDRH     r0,[r8,#0x3c]
0005c8  f88d0000          STRB     r0,[sp,#0]
;;;501    	data[1]=LPC_RTC->MONTH;
0005cc  f8980038          LDRB     r0,[r8,#0x38]
0005d0  f88d0001          STRB     r0,[sp,#1]
;;;502    	data[2]=LPC_RTC->DOM;
0005d4  f898002c          LDRB     r0,[r8,#0x2c]
0005d8  f88d0002          STRB     r0,[sp,#2]
;;;503    	data[3]=0;
0005dc  f88d9003          STRB     r9,[sp,#3]
;;;504    	lc640_write_long_ptr(lc640_adr+16,data);
0005e0  4669              MOV      r1,sp
0005e2  f10a0010          ADD      r0,r10,#0x10
0005e6  f7fffffe          BL       lc640_write_long_ptr
;;;505    
;;;506    	data[0]=LPC_RTC->HOUR;
0005ea  f8980028          LDRB     r0,[r8,#0x28]
0005ee  f88d0000          STRB     r0,[sp,#0]
;;;507    	data[1]=LPC_RTC->MIN;
0005f2  f8980024          LDRB     r0,[r8,#0x24]
0005f6  f88d0001          STRB     r0,[sp,#1]
;;;508    	data[2]=LPC_RTC->SEC;
0005fa  f8980020          LDRB     r0,[r8,#0x20]
0005fe  f88d0002          STRB     r0,[sp,#2]
;;;509    	data[3]=0;
000602  f88d9003          STRB     r9,[sp,#3]
;;;510    	lc640_write_long_ptr(lc640_adr+20,data);
000606  4669              MOV      r1,sp
000608  f10a0014          ADD      r0,r10,#0x14
00060c  f7fffffe          BL       lc640_write_long_ptr
;;;511    	
;;;512    	data[0]='B';
000610  f04f0442          MOV      r4,#0x42
000614  f88d4000          STRB     r4,[sp,#0]
;;;513    	data[1]='B';
000618  f88d4001          STRB     r4,[sp,#1]
;;;514    	data[2]='B';
00061c  f88d4002          STRB     r4,[sp,#2]
;;;515    	data[3]='B';
000620  f88d4003          STRB     r4,[sp,#3]
;;;516    	lc640_write_long_ptr(lc640_adr+24,data);
000624  4669              MOV      r1,sp
000626  f10a0018          ADD      r0,r10,#0x18
00062a  f7fffffe          BL       lc640_write_long_ptr
;;;517    	
;;;518    	data[0]='B';
00062e  f88d4000          STRB     r4,[sp,#0]
;;;519    	data[1]='B';
000632  f88d4001          STRB     r4,[sp,#1]
;;;520    	data[2]='B';
000636  f88d4002          STRB     r4,[sp,#2]
;;;521    	data[3]='B';
00063a  f88d4003          STRB     r4,[sp,#3]
;;;522    	lc640_write_long_ptr(lc640_adr+28,data);
00063e  4669              MOV      r1,sp
000640  f10a001c          ADD      r0,r10,#0x1c
000644  f7fffffe          BL       lc640_write_long_ptr
                  |L1.1608|
;;;523    	
;;;524    	}
;;;525    	
;;;526    avar_src_hndl_end:
;;;527    __nop();		
000648  bf00              NOP      
;;;528    }
00064a  e8bd8ff8          POP      {r3-r11,pc}
;;;529    
                          ENDP

                  avar_overload_hndl PROC
;;;736    //-----------------------------------------------
;;;737    void avar_overload_hndl(char in)
00064e  e92d43f8          PUSH     {r3-r9,lr}
;;;738    {
;;;739    
;;;740    char data[4];
;;;741    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;742    
;;;743    if(in==1)
;;;744    	{
;;;745    	if(overloadAvar==1)return;
000652  4ab4              LDR      r2,|L1.2340|
;;;746        
;;;747    	overloadAvar=1;
;;;748    
;;;749    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;750    	event_ptr++;	
;;;751    	if(event_ptr>63)event_ptr=0;	
;;;752    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;753    	
;;;754        event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;755    	if(event_cnt!=63)event_cnt=event_ptr;
;;;756    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;757    	
;;;758    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;759    	
;;;760    	data[0]='O';
;;;761    	data[1]='V';
;;;762    	data[2]='L';
;;;763    	data[3]=0;
;;;764    	lc640_write_long_ptr(lc640_adr,data);
;;;765    
;;;766    	data[0]=0;
;;;767    	data[1]=0;
;;;768    	data[2]=0;
;;;769    	data[3]=0;
;;;770    	lc640_write_long_ptr(lc640_adr+4,data);
;;;771    
;;;772    	data[0]=LPC_RTC->YEAR;
000654  4fb2              LDR      r7,|L1.2336|
000656  f44f6560          MOV      r5,#0xe00             ;749
00065a  7811              LDRB     r1,[r2,#0]            ;745
00065c  f04f0800          MOV      r8,#0                 ;751
000660  f44f6980          MOV      r9,#0x400             ;758
000664  2801              CMP      r0,#1                 ;743
000666  d016              BEQ      |L1.1686|
;;;773    	data[1]=LPC_RTC->MONTH;
;;;774    	data[2]=LPC_RTC->DOM;
;;;775    	data[3]=0;
;;;776    	lc640_write_long_ptr(lc640_adr+8,data);
;;;777    
;;;778    	data[0]=LPC_RTC->HOUR;
;;;779    	data[1]=LPC_RTC->MIN;
;;;780    	data[2]=LPC_RTC->SEC;
;;;781    	data[3]=0;
;;;782    	lc640_write_long_ptr(lc640_adr+12,data);
;;;783    	
;;;784    	data[0]='A';
;;;785    	data[1]='A';
;;;786    	data[2]='A';
;;;787    	data[3]='A';
;;;788    	lc640_write_long_ptr(lc640_adr+16,data);
;;;789    	
;;;790    	data[0]='A';
;;;791    	data[1]='A';
;;;792    	data[2]='A';
;;;793    	data[3]='A';
;;;794    	lc640_write_long_ptr(lc640_adr+20,data);
;;;795    	
;;;796    	data[0]='A';
;;;797    	data[1]='A';
;;;798    	data[2]='A';
;;;799    	data[3]='A';
;;;800    	lc640_write_long_ptr(lc640_adr+24,data);
;;;801    	
;;;802    	data[0]='A';
;;;803    	data[1]='A';
;;;804    	data[2]='A';
;;;805    	data[3]='A';
;;;806    	lc640_write_long_ptr(lc640_adr+28,data);				
;;;807    
;;;808    	snmp_trap_send("System overload",5,1,2);
;;;809    
;;;810    	
;;;811    	}
;;;812    
;;;813    else if(in==0)
000668  2800              CMP      r0,#0
00066a  d17d              BNE      |L1.1896|
;;;814    	{
;;;815    	if(overloadAvar==0)return;
00066c  2900              CMP      r1,#0
00066e  d07b              BEQ      |L1.1896|
;;;816    
;;;817    	overloadAvar=0;
000670  f8828000          STRB     r8,[r2,#0]
;;;818    
;;;819        event_ptr=lc640_read_int(PTR_EVENT_LOG);
000674  4628              MOV      r0,r5
000676  f7fffffe          BL       lc640_read_int
00067a  b286              UXTH     r6,r0
;;;820    	event_ptr_find=event_ptr;
00067c  4634              MOV      r4,r6
                  |L1.1662|
;;;821    	
;;;822    avar_overload_hndl_lbl1: 
;;;823    
;;;824    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
00067e  eb091044          ADD      r0,r9,r4,LSL #5
000682  b285              UXTH     r5,r0
;;;825    
;;;826    	lc640_read_long_ptr(lc640_adr,data);
000684  4669              MOV      r1,sp
000686  4628              MOV      r0,r5
000688  f7fffffe          BL       lc640_read_long_ptr
;;;827         
;;;828        if(!((data[0]=='O')&&(data[1]=='V')&&(data[2]=='L')))
00068c  f89d0000          LDRB     r0,[sp,#0]
000690  284f              CMP      r0,#0x4f
000692  d16a              BNE      |L1.1898|
000694  e154              B        |L1.2368|
                  |L1.1686|
000696  2901              CMP      r1,#1                 ;745
000698  d066              BEQ      |L1.1896|
00069a  f04f0001          MOV      r0,#1                 ;747
00069e  7010              STRB     r0,[r2,#0]            ;747
0006a0  4628              MOV      r0,r5                 ;749
0006a2  f7fffffe          BL       lc640_read_int
0006a6  f1000001          ADD      r0,r0,#1              ;750
0006aa  b284              UXTH     r4,r0                 ;750
0006ac  2c3f              CMP      r4,#0x3f              ;751
0006ae  d901              BLS      |L1.1716|
0006b0  f04f0400          MOV      r4,#0                 ;751
                  |L1.1716|
0006b4  b221              SXTH     r1,r4                 ;752
0006b6  4628              MOV      r0,r5                 ;752
0006b8  f7fffffe          BL       lc640_write_int
0006bc  f6406602          MOV      r6,#0xe02             ;754
0006c0  4630              MOV      r0,r6                 ;754
0006c2  f7fffffe          BL       lc640_read_int
0006c6  b281              UXTH     r1,r0                 ;754
0006c8  293f              CMP      r1,#0x3f              ;755
0006ca  d000              BEQ      |L1.1742|
0006cc  4621              MOV      r1,r4                 ;755
                  |L1.1742|
0006ce  b209              SXTH     r1,r1                 ;756
0006d0  4630              MOV      r0,r6                 ;756
0006d2  f7fffffe          BL       lc640_write_int
0006d6  4628              MOV      r0,r5                 ;758
0006d8  f7fffffe          BL       lc640_read_int
0006dc  eb091040          ADD      r0,r9,r0,LSL #5       ;758
0006e0  b284              UXTH     r4,r0                 ;758
0006e2  f04f004f          MOV      r0,#0x4f              ;760
0006e6  f88d0000          STRB     r0,[sp,#0]            ;760
0006ea  f04f0056          MOV      r0,#0x56              ;761
0006ee  f88d0001          STRB     r0,[sp,#1]            ;761
0006f2  f04f004c          MOV      r0,#0x4c              ;762
0006f6  f88d0002          STRB     r0,[sp,#2]            ;762
0006fa  f88d8003          STRB     r8,[sp,#3]            ;763
0006fe  4669              MOV      r1,sp                 ;764
000700  4620              MOV      r0,r4                 ;764
000702  f7fffffe          BL       lc640_write_long_ptr
000706  f8cd8000          STR      r8,[sp,#0]            ;769
00070a  4669              MOV      r1,sp                 ;770
00070c  1d20              ADDS     r0,r4,#4              ;770
00070e  f7fffffe          BL       lc640_write_long_ptr
000712  f1070720          ADD      r7,r7,#0x20           ;772
000716  8bb8              LDRH     r0,[r7,#0x1c]         ;772
000718  f88d0000          STRB     r0,[sp,#0]            ;772
00071c  7e38              LDRB     r0,[r7,#0x18]         ;773
00071e  f88d0001          STRB     r0,[sp,#1]            ;773
000722  7b38              LDRB     r0,[r7,#0xc]          ;774
000724  f88d0002          STRB     r0,[sp,#2]            ;774
000728  f88d8003          STRB     r8,[sp,#3]            ;775
00072c  4669              MOV      r1,sp                 ;776
00072e  f1040008          ADD      r0,r4,#8              ;776
000732  f7fffffe          BL       lc640_write_long_ptr
000736  7a38              LDRB     r0,[r7,#8]            ;778
000738  f88d0000          STRB     r0,[sp,#0]            ;778
00073c  7938              LDRB     r0,[r7,#4]            ;779
00073e  f88d0001          STRB     r0,[sp,#1]            ;779
000742  7838              LDRB     r0,[r7,#0]            ;780
000744  f88d0002          STRB     r0,[sp,#2]            ;780
000748  f88d8003          STRB     r8,[sp,#3]            ;781
00074c  4669              MOV      r1,sp                 ;782
00074e  f104000c          ADD      r0,r4,#0xc            ;782
000752  f7fffffe          BL       lc640_write_long_ptr
000756  f04f0541          MOV      r5,#0x41              ;784
00075a  f88d5000          STRB     r5,[sp,#0]            ;784
00075e  f88d5001          STRB     r5,[sp,#1]            ;785
000762  f88d5002          STRB     r5,[sp,#2]            ;786
000766  e001              B        |L1.1900|
                  |L1.1896|
000768  e0e8              B        |L1.2364|
                  |L1.1898|
00076a  e0f1              B        |L1.2384|
                  |L1.1900|
00076c  f88d5003          STRB     r5,[sp,#3]            ;787
000770  4669              MOV      r1,sp                 ;788
000772  f1040010          ADD      r0,r4,#0x10           ;788
000776  f7fffffe          BL       lc640_write_long_ptr
00077a  f88d5000          STRB     r5,[sp,#0]            ;790
00077e  f88d5001          STRB     r5,[sp,#1]            ;791
000782  f88d5002          STRB     r5,[sp,#2]            ;792
000786  f88d5003          STRB     r5,[sp,#3]            ;793
00078a  4669              MOV      r1,sp                 ;794
00078c  f1040014          ADD      r0,r4,#0x14           ;794
000790  f7fffffe          BL       lc640_write_long_ptr
000794  f88d5000          STRB     r5,[sp,#0]            ;796
000798  f88d5001          STRB     r5,[sp,#1]            ;797
00079c  f88d5002          STRB     r5,[sp,#2]            ;798
0007a0  f88d5003          STRB     r5,[sp,#3]            ;799
0007a4  4669              MOV      r1,sp                 ;800
0007a6  f1040018          ADD      r0,r4,#0x18           ;800
0007aa  f7fffffe          BL       lc640_write_long_ptr
0007ae  f88d5000          STRB     r5,[sp,#0]            ;802
0007b2  f88d5001          STRB     r5,[sp,#1]            ;803
0007b6  f88d5002          STRB     r5,[sp,#2]            ;804
0007ba  f88d5003          STRB     r5,[sp,#3]            ;805
0007be  4669              MOV      r1,sp                 ;806
0007c0  e0b2              B        |L1.2344|
0007c2  0000              DCW      0x0000
                  |L1.1988|
0007c4  42505320          DCB      "BPS #1 Alarm, overheat",0
0007c8  23312041
0007cc  6c61726d
0007d0  2c206f76
0007d4  65726865
0007d8  617400  
0007db  00                DCB      0
                  |L1.2012|
0007dc  42505320          DCB      "BPS #1 Alarm, voltage is up",0
0007e0  23312041
0007e4  6c61726d
0007e8  2c20766f
0007ec  6c746167
0007f0  65206973
0007f4  20757000
                  |L1.2040|
0007f8  42505320          DCB      "BPS #1 Alarm, voltage is down",0
0007fc  23312041
000800  6c61726d
000804  2c20766f
000808  6c746167
00080c  65206973
000810  20646f77
000814  6e00    
000816  00                DCB      0
000817  00                DCB      0
                  |L1.2072|
000818  42505320          DCB      "BPS #1 Alarm, connect is lost",0
00081c  23312041
000820  6c61726d
000824  2c20636f
000828  6e6e6563
00082c  74206973
000830  206c6f73
000834  7400    
000836  00                DCB      0
000837  00                DCB      0
                  |L1.2104|
000838  42505320          DCB      "BPS #2 Alarm, overheat",0
00083c  23322041
000840  6c61726d
000844  2c206f76
000848  65726865
00084c  617400  
00084f  00                DCB      0
                  |L1.2128|
000850  42505320          DCB      "BPS #2 Alarm, voltage is up",0
000854  23322041
000858  6c61726d
00085c  2c20766f
000860  6c746167
000864  65206973
000868  20757000
                  |L1.2156|
00086c  42505320          DCB      "BPS #2 Alarm, voltage is down",0
000870  23322041
000874  6c61726d
000878  2c20766f
00087c  6c746167
000880  65206973
000884  20646f77
000888  6e00    
00088a  00                DCB      0
00088b  00                DCB      0
                  |L1.2188|
00088c  42505320          DCB      "BPS #2 Alarm, connect is lost",0
000890  23322041
000894  6c61726d
000898  2c20636f
00089c  6e6e6563
0008a0  74206973
0008a4  206c6f73
0008a8  7400    
0008aa  00                DCB      0
0008ab  00                DCB      0
                  |L1.2220|
0008ac  42505320          DCB      "BPS #3 Alarm, overheat",0
0008b0  23332041
0008b4  6c61726d
0008b8  2c206f76
0008bc  65726865
0008c0  617400  
0008c3  00                DCB      0
                  |L1.2244|
0008c4  42505320          DCB      "BPS #3 Alarm, voltage is up",0
0008c8  23332041
0008cc  6c61726d
0008d0  2c20766f
0008d4  6c746167
0008d8  65206973
0008dc  20757000
                  |L1.2272|
0008e0  42505320          DCB      "BPS #3 Alarm, voltage is down",0
0008e4  23332041
0008e8  6c61726d
0008ec  2c20766f
0008f0  6c746167
0008f4  65206973
0008f8  20646f77
0008fc  6e00    
0008fe  00                DCB      0
0008ff  00                DCB      0
                  |L1.2304|
000900  42505320          DCB      "BPS #3 Alarm, connect is lost",0
000904  23332041
000908  6c61726d
00090c  2c20636f
000910  6e6e6563
000914  74206973
000918  206c6f73
00091c  7400    
00091e  00                DCB      0
00091f  00                DCB      0
                  |L1.2336|
                          DCD      0x40024000
                  |L1.2340|
                          DCD      overloadAvar
                  |L1.2344|
000928  f104001c          ADD      r0,r4,#0x1c           ;806
00092c  f7fffffe          BL       lc640_write_long_ptr
000930  2302              MOVS     r3,#2                 ;808
000932  2201              MOVS     r2,#1                 ;808
000934  2105              MOVS     r1,#5                 ;808
000936  a0fa              ADR      r0,|L1.3360|
000938  f7fffffe          BL       snmp_trap_send
                  |L1.2364|
;;;829         	{        
;;;830         	if(event_ptr_find)event_ptr_find--;
;;;831         	else event_ptr_find=63;
;;;832         	if(event_ptr_find==event_ptr)return;
;;;833         	else goto avar_overload_hndl_lbl1;
;;;834         	}
;;;835         else 
;;;836         	{
;;;837         	lc640_read_long_ptr(lc640_adr+16,data);
;;;838         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;839         		{        
;;;840         		if(event_ptr_find)event_ptr_find--;
;;;841             	else event_ptr_find=63;
;;;842             	if(event_ptr_find==event_ptr)return;
;;;843         		else goto avar_overload_hndl_lbl1;
;;;844         		}
;;;845    
;;;846         	}
;;;847         		
;;;848    	data[0]=LPC_RTC->YEAR;
;;;849    	data[1]=LPC_RTC->MONTH;
;;;850    	data[2]=LPC_RTC->DOM;
;;;851    	data[3]=0;
;;;852    	lc640_write_long_ptr(lc640_adr+16,data);
;;;853    
;;;854    	data[0]=LPC_RTC->HOUR;
;;;855    	data[1]=LPC_RTC->MIN;
;;;856    	data[2]=LPC_RTC->SEC;
;;;857    	data[3]=0;
;;;858    	lc640_write_long_ptr(lc640_adr+20,data);
;;;859    	
;;;860    	data[0]='B';
;;;861    	data[1]='B';
;;;862    	data[2]='B';
;;;863    	data[3]='B';
;;;864    	lc640_write_long_ptr(lc640_adr+24,data);
;;;865    	
;;;866    	data[0]='B';
;;;867    	data[1]='B';
;;;868    	data[2]='B';
;;;869    	data[3]='B';
;;;870    	lc640_write_long_ptr(lc640_adr+28,data);
;;;871    	
;;;872    
;;;873    	
;;;874    	}
;;;875    	
;;;876    }
00093c  e8bd83f8          POP      {r3-r9,pc}
                  |L1.2368|
000940  f89d0001          LDRB     r0,[sp,#1]            ;828
000944  2856              CMP      r0,#0x56              ;828
000946  d103              BNE      |L1.2384|
000948  f89d0002          LDRB     r0,[sp,#2]            ;828
00094c  284c              CMP      r0,#0x4c              ;828
00094e  d00a              BEQ      |L1.2406|
                  |L1.2384|
000950  b11c              CBZ      r4,|L1.2394|
000952  f1a40401          SUB      r4,r4,#1              ;830
000956  b2a4              UXTH     r4,r4                 ;830
000958  e001              B        |L1.2398|
                  |L1.2394|
00095a  f04f043f          MOV      r4,#0x3f              ;831
                  |L1.2398|
00095e  42b4              CMP      r4,r6                 ;832
                  |L1.2400|
000960  f47fae8d          BNE      |L1.1662|
000964  e7ea              B        |L1.2364|
                  |L1.2406|
000966  4669              MOV      r1,sp                 ;837
000968  f1050010          ADD      r0,r5,#0x10           ;837
00096c  f7fffffe          BL       lc640_read_long_ptr
000970  f89d0000          LDRB     r0,[sp,#0]            ;838
000974  2841              CMP      r0,#0x41              ;838
000976  d10b              BNE      |L1.2448|
000978  f89d0001          LDRB     r0,[sp,#1]            ;838
00097c  2841              CMP      r0,#0x41              ;838
00097e  d107              BNE      |L1.2448|
000980  f89d0002          LDRB     r0,[sp,#2]            ;838
000984  2841              CMP      r0,#0x41              ;838
000986  d103              BNE      |L1.2448|
000988  f89d0003          LDRB     r0,[sp,#3]            ;838
00098c  2841              CMP      r0,#0x41              ;838
00098e  d009              BEQ      |L1.2468|
                  |L1.2448|
000990  b11c              CBZ      r4,|L1.2458|
000992  f1a40401          SUB      r4,r4,#1              ;840
000996  b2a4              UXTH     r4,r4                 ;840
000998  e001              B        |L1.2462|
                  |L1.2458|
00099a  f04f043f          MOV      r4,#0x3f              ;841
                  |L1.2462|
00099e  42b4              CMP      r4,r6                 ;842
0009a0  d1de              BNE      |L1.2400|
0009a2  e7cb              B        |L1.2364|
                  |L1.2468|
0009a4  f1070720          ADD      r7,r7,#0x20           ;848
0009a8  8bb8              LDRH     r0,[r7,#0x1c]         ;848
0009aa  f88d0000          STRB     r0,[sp,#0]            ;848
0009ae  7e38              LDRB     r0,[r7,#0x18]         ;849
0009b0  f88d0001          STRB     r0,[sp,#1]            ;849
0009b4  7b38              LDRB     r0,[r7,#0xc]          ;850
0009b6  f88d0002          STRB     r0,[sp,#2]            ;850
0009ba  f88d8003          STRB     r8,[sp,#3]            ;851
0009be  4669              MOV      r1,sp                 ;852
0009c0  f1050010          ADD      r0,r5,#0x10           ;852
0009c4  f7fffffe          BL       lc640_write_long_ptr
0009c8  7a38              LDRB     r0,[r7,#8]            ;854
0009ca  f88d0000          STRB     r0,[sp,#0]            ;854
0009ce  7938              LDRB     r0,[r7,#4]            ;855
0009d0  f88d0001          STRB     r0,[sp,#1]            ;855
0009d4  7838              LDRB     r0,[r7,#0]            ;856
0009d6  f88d0002          STRB     r0,[sp,#2]            ;856
0009da  f88d8003          STRB     r8,[sp,#3]            ;857
0009de  4669              MOV      r1,sp                 ;858
0009e0  f1050014          ADD      r0,r5,#0x14           ;858
0009e4  f7fffffe          BL       lc640_write_long_ptr
0009e8  f04f0442          MOV      r4,#0x42              ;860
0009ec  f88d4000          STRB     r4,[sp,#0]            ;860
0009f0  f88d4001          STRB     r4,[sp,#1]            ;861
0009f4  f88d4002          STRB     r4,[sp,#2]            ;862
0009f8  f88d4003          STRB     r4,[sp,#3]            ;863
0009fc  4669              MOV      r1,sp                 ;864
0009fe  f1050018          ADD      r0,r5,#0x18           ;864
000a02  f7fffffe          BL       lc640_write_long_ptr
000a06  f88d4000          STRB     r4,[sp,#0]            ;866
000a0a  f88d4001          STRB     r4,[sp,#1]            ;867
000a0e  f88d4002          STRB     r4,[sp,#2]            ;868
000a12  f88d4003          STRB     r4,[sp,#3]            ;869
000a16  4669              MOV      r1,sp                 ;870
000a18  f105001c          ADD      r0,r5,#0x1c           ;870
000a1c  f7fffffe          BL       lc640_write_long_ptr
000a20  e78c              B        |L1.2364|
;;;877    
                          ENDP

                  avar_u_out_hndl PROC
;;;878    //-----------------------------------------------
;;;879    void avar_u_out_hndl(char in,short volt)
000a22  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;880    {
000a26  b081              SUB      sp,sp,#4
000a28  4605              MOV      r5,r0
;;;881    
;;;882    char data[4];
;;;883    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;884    if(uOutAvar==in)return;
000a2a  49c1              LDR      r1,|L1.3376|
000a2c  7808              LDRB     r0,[r1,#0]  ; uOutAvar
000a2e  42a8              CMP      r0,r5
000a30  d07e              BEQ      |L1.2864|
;;;885    if((in==1)||(in==2))
;;;886    	{
;;;887    	if(uOutAvar==in)return;
;;;888        
;;;889    	uOutAvar=in;
;;;890    
;;;891    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;892    	event_ptr++;	
;;;893    	if(event_ptr>63)event_ptr=0;	
;;;894    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;895    	
;;;896        event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;897    	if(event_cnt!=63)event_cnt=event_ptr;
;;;898    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;899    	
;;;900    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;901    	
;;;902    	data[0]='V';
;;;903    	data[1]='O';
;;;904    	data[2]='U';
;;;905    	data[3]='T';
;;;906    	lc640_write_long_ptr(lc640_adr,data);
;;;907    
;;;908    	data[0]=*((char*)&volt);
000a32  f89d6008          LDRB     r6,[sp,#8]
;;;909    	data[1]=*(((char*)&volt)+1);
000a36  f89d7009          LDRB     r7,[sp,#9]
;;;910    	data[2]=in;
;;;911    	data[3]=0;
;;;912    	lc640_write_long_ptr(lc640_adr+4,data);
;;;913    
;;;914    	data[0]=LPC_RTC->YEAR;
000a3a  f8df82f8          LDR      r8,|L1.3380|
000a3e  f44f6460          MOV      r4,#0xe00             ;891
000a42  f04f0900          MOV      r9,#0                 ;893
000a46  f44f6a80          MOV      r10,#0x400            ;900
000a4a  2d01              CMP      r5,#1                 ;885
000a4c  d019              BEQ      |L1.2690|
000a4e  2d02              CMP      r5,#2                 ;885
000a50  d017              BEQ      |L1.2690|
;;;915    	data[1]=LPC_RTC->MONTH;
;;;916    	data[2]=LPC_RTC->DOM;
;;;917    	data[3]=0;
;;;918    	lc640_write_long_ptr(lc640_adr+8,data);
;;;919    
;;;920    	data[0]=LPC_RTC->HOUR;
;;;921    	data[1]=LPC_RTC->MIN;
;;;922    	data[2]=LPC_RTC->SEC;
;;;923    	data[3]=0;
;;;924    	lc640_write_long_ptr(lc640_adr+12,data);
;;;925    	
;;;926    	data[0]='A';
;;;927    	data[1]='A';
;;;928    	data[2]='A';
;;;929    	data[3]='A';
;;;930    	lc640_write_long_ptr(lc640_adr+16,data);
;;;931    	
;;;932    	data[0]='A';
;;;933    	data[1]='A';
;;;934    	data[2]='A';
;;;935    	data[3]='A';
;;;936    	lc640_write_long_ptr(lc640_adr+20,data);
;;;937    	
;;;938    	data[0]='A';
;;;939    	data[1]='A';
;;;940    	data[2]='A';
;;;941    	data[3]='A';
;;;942    	lc640_write_long_ptr(lc640_adr+24,data);
;;;943    	
;;;944    	data[0]='A';
;;;945    	data[1]='A';
;;;946    	data[2]='A';
;;;947    	data[3]='A';
;;;948    	lc640_write_long_ptr(lc640_adr+28,data);				
;;;949    
;;;950    	//snmp_trap_send("System overload",5,1,2);
;;;951    
;;;952    	
;;;953    	}
;;;954    
;;;955    else if(in==0)
000a52  2d00              CMP      r5,#0
000a54  d16c              BNE      |L1.2864|
;;;956    	{
;;;957    	if(uOutAvar==0)return;
000a56  2800              CMP      r0,#0
000a58  d06a              BEQ      |L1.2864|
;;;958    
;;;959    	uOutAvar=0;
000a5a  f8819000          STRB     r9,[r1,#0]
;;;960    
;;;961        event_ptr=lc640_read_int(PTR_EVENT_LOG);
000a5e  4620              MOV      r0,r4
000a60  f7fffffe          BL       lc640_read_int
000a64  fa1ffb80          UXTH     r11,r0
;;;962    	event_ptr_find=event_ptr;
000a68  465c              MOV      r4,r11
                  |L1.2666|
;;;963    	
;;;964    avar_u_out_hndl_lbl1: 
;;;965    
;;;966    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000a6a  eb0a1044          ADD      r0,r10,r4,LSL #5
000a6e  b285              UXTH     r5,r0
;;;967    
;;;968    	lc640_read_long_ptr(lc640_adr,data);
000a70  4669              MOV      r1,sp
000a72  4628              MOV      r0,r5
000a74  f7fffffe          BL       lc640_read_long_ptr
;;;969         
;;;970        if(!((data[0]=='V')&&(data[1]=='O')&&(data[2]=='U')&&(data[3]=='T')))
000a78  f89d0000          LDRB     r0,[sp,#0]
000a7c  2856              CMP      r0,#0x56
000a7e  d17d              BNE      |L1.2940|
000a80  e0a6              B        |L1.3024|
                  |L1.2690|
000a82  700d              STRB     r5,[r1,#0]            ;889
000a84  4620              MOV      r0,r4                 ;891
000a86  f7fffffe          BL       lc640_read_int
000a8a  f1000001          ADD      r0,r0,#1              ;892
000a8e  fa1ffb80          UXTH     r11,r0                ;892
000a92  f1bb0f3f          CMP      r11,#0x3f             ;893
000a96  d901              BLS      |L1.2716|
000a98  f04f0b00          MOV      r11,#0                ;893
                  |L1.2716|
000a9c  fa0ff18b          SXTH     r1,r11                ;894
000aa0  4620              MOV      r0,r4                 ;894
000aa2  f7fffffe          BL       lc640_write_int
000aa6  f6406002          MOV      r0,#0xe02             ;896
000aaa  f7fffffe          BL       lc640_read_int
000aae  b280              UXTH     r0,r0                 ;896
000ab0  283f              CMP      r0,#0x3f              ;897
000ab2  d000              BEQ      |L1.2742|
000ab4  4658              MOV      r0,r11                ;897
                  |L1.2742|
000ab6  b201              SXTH     r1,r0                 ;898
000ab8  f6406002          MOV      r0,#0xe02             ;898
000abc  f7fffffe          BL       lc640_write_int
000ac0  4620              MOV      r0,r4                 ;900
000ac2  f7fffffe          BL       lc640_read_int
000ac6  eb0a1040          ADD      r0,r10,r0,LSL #5      ;900
000aca  b284              UXTH     r4,r0                 ;900
000acc  f04f0056          MOV      r0,#0x56              ;902
000ad0  f88d0000          STRB     r0,[sp,#0]            ;902
000ad4  f04f004f          MOV      r0,#0x4f              ;903
000ad8  f88d0001          STRB     r0,[sp,#1]            ;903
000adc  f04f0055          MOV      r0,#0x55              ;904
000ae0  f88d0002          STRB     r0,[sp,#2]            ;904
000ae4  f04f0054          MOV      r0,#0x54              ;905
000ae8  f88d0003          STRB     r0,[sp,#3]            ;905
000aec  4669              MOV      r1,sp                 ;906
000aee  4620              MOV      r0,r4                 ;906
000af0  f7fffffe          BL       lc640_write_long_ptr
000af4  f88d6000          STRB     r6,[sp,#0]            ;908
000af8  f88d7001          STRB     r7,[sp,#1]            ;909
000afc  f88d5002          STRB     r5,[sp,#2]            ;910
000b00  f88d9003          STRB     r9,[sp,#3]            ;911
000b04  4669              MOV      r1,sp                 ;912
000b06  1d20              ADDS     r0,r4,#4              ;912
000b08  f7fffffe          BL       lc640_write_long_ptr
000b0c  f8b8003c          LDRH     r0,[r8,#0x3c]         ;914
000b10  f88d0000          STRB     r0,[sp,#0]            ;914
000b14  f8980038          LDRB     r0,[r8,#0x38]         ;915
000b18  f88d0001          STRB     r0,[sp,#1]            ;915
000b1c  f898002c          LDRB     r0,[r8,#0x2c]         ;916
000b20  f88d0002          STRB     r0,[sp,#2]            ;916
000b24  f88d9003          STRB     r9,[sp,#3]            ;917
000b28  4669              MOV      r1,sp                 ;918
000b2a  f1040008          ADD      r0,r4,#8              ;918
000b2e  e000              B        |L1.2866|
                  |L1.2864|
000b30  e04c              B        |L1.3020|
                  |L1.2866|
000b32  f7fffffe          BL       lc640_write_long_ptr
000b36  f8980028          LDRB     r0,[r8,#0x28]         ;920
000b3a  f88d0000          STRB     r0,[sp,#0]            ;920
000b3e  f8980024          LDRB     r0,[r8,#0x24]         ;921
000b42  f88d0001          STRB     r0,[sp,#1]            ;921
000b46  f8980020          LDRB     r0,[r8,#0x20]         ;922
000b4a  f88d0002          STRB     r0,[sp,#2]            ;922
000b4e  f88d9003          STRB     r9,[sp,#3]            ;923
000b52  4669              MOV      r1,sp                 ;924
000b54  f104000c          ADD      r0,r4,#0xc            ;924
000b58  f7fffffe          BL       lc640_write_long_ptr
000b5c  f04f0541          MOV      r5,#0x41              ;926
000b60  f88d5000          STRB     r5,[sp,#0]            ;926
000b64  f88d5001          STRB     r5,[sp,#1]            ;927
000b68  f88d5002          STRB     r5,[sp,#2]            ;928
000b6c  f88d5003          STRB     r5,[sp,#3]            ;929
000b70  4669              MOV      r1,sp                 ;930
000b72  f1040010          ADD      r0,r4,#0x10           ;930
000b76  f7fffffe          BL       lc640_write_long_ptr
000b7a  e000              B        |L1.2942|
                  |L1.2940|
000b7c  e034              B        |L1.3048|
                  |L1.2942|
000b7e  f88d5000          STRB     r5,[sp,#0]            ;932
000b82  f88d5001          STRB     r5,[sp,#1]            ;933
000b86  f88d5002          STRB     r5,[sp,#2]            ;934
000b8a  f88d5003          STRB     r5,[sp,#3]            ;935
000b8e  4669              MOV      r1,sp                 ;936
000b90  f1040014          ADD      r0,r4,#0x14           ;936
000b94  f7fffffe          BL       lc640_write_long_ptr
000b98  f88d5000          STRB     r5,[sp,#0]            ;938
000b9c  f88d5001          STRB     r5,[sp,#1]            ;939
000ba0  f88d5002          STRB     r5,[sp,#2]            ;940
000ba4  f88d5003          STRB     r5,[sp,#3]            ;941
000ba8  4669              MOV      r1,sp                 ;942
000baa  f1040018          ADD      r0,r4,#0x18           ;942
000bae  f7fffffe          BL       lc640_write_long_ptr
000bb2  f88d5000          STRB     r5,[sp,#0]            ;944
000bb6  f88d5001          STRB     r5,[sp,#1]            ;945
000bba  f88d5002          STRB     r5,[sp,#2]            ;946
000bbe  f88d5003          STRB     r5,[sp,#3]            ;947
000bc2  4669              MOV      r1,sp                 ;948
000bc4  f104001c          ADD      r0,r4,#0x1c           ;948
000bc8  f7fffffe          BL       lc640_write_long_ptr
                  |L1.3020|
;;;971         	{        
;;;972         	if(event_ptr_find)event_ptr_find--;
;;;973         	else event_ptr_find=63;
;;;974         	if(event_ptr_find==event_ptr)return;
;;;975         	else goto avar_u_out_hndl_lbl1;
;;;976         	}
;;;977         else 
;;;978         	{
;;;979         	lc640_read_long_ptr(lc640_adr+16,data);
;;;980         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;981         		{        
;;;982         		if(event_ptr_find)event_ptr_find--;
;;;983             	else event_ptr_find=63;
;;;984             	if(event_ptr_find==event_ptr)return;
;;;985         		else goto avar_u_out_hndl_lbl1;
;;;986         		}
;;;987    
;;;988         	}
;;;989         		
;;;990    	data[0]=LPC_RTC->YEAR;
;;;991    	data[1]=LPC_RTC->MONTH;
;;;992    	data[2]=LPC_RTC->DOM;
;;;993    	data[3]=0;
;;;994    	lc640_write_long_ptr(lc640_adr+16,data);
;;;995    
;;;996    	data[0]=LPC_RTC->HOUR;
;;;997    	data[1]=LPC_RTC->MIN;
;;;998    	data[2]=LPC_RTC->SEC;
;;;999    	data[3]=0;
;;;1000   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1001   	
;;;1002   	data[0]=*((char*)&volt);
;;;1003   	data[1]=*(((char*)&volt)+1);
;;;1004   	data[2]='B';
;;;1005   	data[3]='B';
;;;1006   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1007   	
;;;1008   	data[0]='B';
;;;1009   	data[1]='B';
;;;1010   	data[2]='B';
;;;1011   	data[3]='B';
;;;1012   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1013   	}
;;;1014   	
;;;1015   }
000bcc  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.3024|
000bd0  f89d0001          LDRB     r0,[sp,#1]            ;970
000bd4  284f              CMP      r0,#0x4f              ;970
000bd6  d107              BNE      |L1.3048|
000bd8  f89d0002          LDRB     r0,[sp,#2]            ;970
000bdc  2855              CMP      r0,#0x55              ;970
000bde  d103              BNE      |L1.3048|
000be0  f89d0003          LDRB     r0,[sp,#3]            ;970
000be4  2854              CMP      r0,#0x54              ;970
000be6  d00a              BEQ      |L1.3070|
                  |L1.3048|
000be8  b11c              CBZ      r4,|L1.3058|
000bea  f1a40401          SUB      r4,r4,#1              ;972
000bee  b2a4              UXTH     r4,r4                 ;972
000bf0  e001              B        |L1.3062|
                  |L1.3058|
000bf2  f04f043f          MOV      r4,#0x3f              ;973
                  |L1.3062|
000bf6  455c              CMP      r4,r11                ;974
                  |L1.3064|
000bf8  f47faf37          BNE      |L1.2666|
000bfc  e7e6              B        |L1.3020|
                  |L1.3070|
000bfe  4669              MOV      r1,sp                 ;979
000c00  f1050010          ADD      r0,r5,#0x10           ;979
000c04  f7fffffe          BL       lc640_read_long_ptr
000c08  f89d0000          LDRB     r0,[sp,#0]            ;980
000c0c  2841              CMP      r0,#0x41              ;980
000c0e  d10b              BNE      |L1.3112|
000c10  f89d0001          LDRB     r0,[sp,#1]            ;980
000c14  2841              CMP      r0,#0x41              ;980
000c16  d107              BNE      |L1.3112|
000c18  f89d0002          LDRB     r0,[sp,#2]            ;980
000c1c  2841              CMP      r0,#0x41              ;980
000c1e  d103              BNE      |L1.3112|
000c20  f89d0003          LDRB     r0,[sp,#3]            ;980
000c24  2841              CMP      r0,#0x41              ;980
000c26  d009              BEQ      |L1.3132|
                  |L1.3112|
000c28  b11c              CBZ      r4,|L1.3122|
000c2a  f1a40401          SUB      r4,r4,#1              ;982
000c2e  b2a4              UXTH     r4,r4                 ;982
000c30  e001              B        |L1.3126|
                  |L1.3122|
000c32  f04f043f          MOV      r4,#0x3f              ;983
                  |L1.3126|
000c36  455c              CMP      r4,r11                ;984
000c38  d1de              BNE      |L1.3064|
000c3a  e7c7              B        |L1.3020|
                  |L1.3132|
000c3c  f8b8003c          LDRH     r0,[r8,#0x3c]         ;990
000c40  f88d0000          STRB     r0,[sp,#0]            ;990
000c44  f8980038          LDRB     r0,[r8,#0x38]         ;991
000c48  f88d0001          STRB     r0,[sp,#1]            ;991
000c4c  f898002c          LDRB     r0,[r8,#0x2c]         ;992
000c50  f88d0002          STRB     r0,[sp,#2]            ;992
000c54  f88d9003          STRB     r9,[sp,#3]            ;993
000c58  4669              MOV      r1,sp                 ;994
000c5a  f1050010          ADD      r0,r5,#0x10           ;994
000c5e  f7fffffe          BL       lc640_write_long_ptr
000c62  f8980028          LDRB     r0,[r8,#0x28]         ;996
000c66  f88d0000          STRB     r0,[sp,#0]            ;996
000c6a  f8980024          LDRB     r0,[r8,#0x24]         ;997
000c6e  f88d0001          STRB     r0,[sp,#1]            ;997
000c72  f8980020          LDRB     r0,[r8,#0x20]         ;998
000c76  f88d0002          STRB     r0,[sp,#2]            ;998
000c7a  f88d9003          STRB     r9,[sp,#3]            ;999
000c7e  4669              MOV      r1,sp                 ;1000
000c80  f1050014          ADD      r0,r5,#0x14           ;1000
000c84  f7fffffe          BL       lc640_write_long_ptr
000c88  f88d6000          STRB     r6,[sp,#0]            ;1002
000c8c  f88d7001          STRB     r7,[sp,#1]            ;1003
000c90  f04f0442          MOV      r4,#0x42              ;1004
000c94  f88d4002          STRB     r4,[sp,#2]            ;1004
000c98  f88d4003          STRB     r4,[sp,#3]            ;1005
000c9c  4669              MOV      r1,sp                 ;1006
000c9e  f1050018          ADD      r0,r5,#0x18           ;1006
000ca2  f7fffffe          BL       lc640_write_long_ptr
000ca6  f88d4000          STRB     r4,[sp,#0]            ;1008
000caa  f88d4001          STRB     r4,[sp,#1]            ;1009
000cae  f88d4002          STRB     r4,[sp,#2]            ;1010
000cb2  f88d4003          STRB     r4,[sp,#3]            ;1011
000cb6  4669              MOV      r1,sp                 ;1012
000cb8  f105001c          ADD      r0,r5,#0x1c           ;1012
000cbc  f7fffffe          BL       lc640_write_long_ptr
000cc0  e784              B        |L1.3020|
;;;1016   
                          ENDP

                  avar_u_in_hndl PROC
;;;1017   //-----------------------------------------------
;;;1018   void avar_u_in_hndl(char in,short volt)
000cc2  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;1019   {
000cc6  b081              SUB      sp,sp,#4
000cc8  4605              MOV      r5,r0
;;;1020   
;;;1021   char data[4];
;;;1022   unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;1023   if(uInAvar==in)return;
000cca  481b              LDR      r0,|L1.3384|
000ccc  7801              LDRB     r1,[r0,#0]  ; uInAvar
000cce  42a9              CMP      r1,r5
000cd0  d07e              BEQ      |L1.3536|
;;;1024   if((in==1)||(in==2))
;;;1025   	{
;;;1026   	
;;;1027       
;;;1028   	uInAvar=in;
;;;1029   
;;;1030   	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;1031   	event_ptr++;	
;;;1032   	if(event_ptr>63)event_ptr=0;	
;;;1033   	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;1034   	
;;;1035       event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;1036   	if(event_cnt!=63)event_cnt=event_ptr;
;;;1037   	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;1038   	
;;;1039   	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;1040   	
;;;1041   	data[0]='V';
;;;1042   	data[1]='I';
;;;1043   	data[2]='N';
;;;1044   	data[3]=0;
;;;1045   	lc640_write_long_ptr(lc640_adr,data);
;;;1046   
;;;1047   	data[0]=*((char*)&volt);
000cd2  f89d6008          LDRB     r6,[sp,#8]
;;;1048   	data[1]=*(((char*)&volt)+1);
000cd6  f89d7009          LDRB     r7,[sp,#9]
;;;1049   	data[2]=in;
;;;1050   	data[3]=0;
;;;1051   	lc640_write_long_ptr(lc640_adr+4,data);
;;;1052   
;;;1053   	data[0]=LPC_RTC->YEAR;
000cda  f8df8058          LDR      r8,|L1.3380|
000cde  f44f6460          MOV      r4,#0xe00             ;1030
000ce2  f04f0900          MOV      r9,#0                 ;1032
000ce6  f44f6a80          MOV      r10,#0x400            ;1039
000cea  2d01              CMP      r5,#1                 ;1024
000cec  d026              BEQ      |L1.3388|
000cee  2d02              CMP      r5,#2                 ;1024
000cf0  d024              BEQ      |L1.3388|
;;;1054   	data[1]=LPC_RTC->MONTH;
;;;1055   	data[2]=LPC_RTC->DOM;
;;;1056   	data[3]=0;
;;;1057   	lc640_write_long_ptr(lc640_adr+8,data);
;;;1058   
;;;1059   	data[0]=LPC_RTC->HOUR;
;;;1060   	data[1]=LPC_RTC->MIN;
;;;1061   	data[2]=LPC_RTC->SEC;
;;;1062   	data[3]=0;
;;;1063   	lc640_write_long_ptr(lc640_adr+12,data);
;;;1064   	
;;;1065   	data[0]='A';
;;;1066   	data[1]='A';
;;;1067   	data[2]='A';
;;;1068   	data[3]='A';
;;;1069   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1070   	
;;;1071   	data[0]='A';
;;;1072   	data[1]='A';
;;;1073   	data[2]='A';
;;;1074   	data[3]='A';
;;;1075   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1076   	
;;;1077   	data[0]='A';
;;;1078   	data[1]='A';
;;;1079   	data[2]='A';
;;;1080   	data[3]='A';
;;;1081   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1082   	
;;;1083   	data[0]='A';
;;;1084   	data[1]='A';
;;;1085   	data[2]='A';
;;;1086   	data[3]='A';
;;;1087   	lc640_write_long_ptr(lc640_adr+28,data);				
;;;1088   
;;;1089   	//snmp_trap_send("System overload",5,1,2);
;;;1090   
;;;1091   	
;;;1092   	}
;;;1093   
;;;1094   else if(in==0)
000cf2  2d00              CMP      r5,#0
000cf4  d16c              BNE      |L1.3536|
;;;1095   	{
;;;1096   	
;;;1097   
;;;1098   	uInAvar=0;
000cf6  f8809000          STRB     r9,[r0,#0]
;;;1099   
;;;1100       event_ptr=lc640_read_int(PTR_EVENT_LOG);
000cfa  4620              MOV      r0,r4
000cfc  f7fffffe          BL       lc640_read_int
000d00  b284              UXTH     r4,r0
000d02  46a3              MOV      r11,r4
;;;1101   	event_ptr_find=event_ptr;
000d04  465c              MOV      r4,r11
                  |L1.3334|
;;;1102   	
;;;1103   avar_u_in_hndl_lbl1: 
;;;1104   
;;;1105   	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000d06  eb0a1044          ADD      r0,r10,r4,LSL #5
000d0a  b285              UXTH     r5,r0
;;;1106   
;;;1107   	lc640_read_long_ptr(lc640_adr,data);
000d0c  4669              MOV      r1,sp
000d0e  4628              MOV      r0,r5
000d10  f7fffffe          BL       lc640_read_long_ptr
;;;1108        
;;;1109       if(!((data[0]=='V')&&(data[1]=='I')&&(data[2]=='N')&&(data[3]==0)))
000d14  f89d0000          LDRB     r0,[sp,#0]
000d18  2856              CMP      r0,#0x56
000d1a  d17d              BNE      |L1.3608|
000d1c  e0b2              B        |L1.3716|
000d1e  0000              DCW      0x0000
                  |L1.3360|
000d20  53797374          DCB      "System overload",0
000d24  656d206f
000d28  7665726c
000d2c  6f616400
                  |L1.3376|
                          DCD      uOutAvar
                  |L1.3380|
                          DCD      0x40024000
                  |L1.3384|
                          DCD      uInAvar
                  |L1.3388|
000d3c  7005              STRB     r5,[r0,#0]            ;1028
000d3e  4620              MOV      r0,r4                 ;1030
000d40  f7fffffe          BL       lc640_read_int
000d44  f1000001          ADD      r0,r0,#1              ;1031
000d48  fa1ffb80          UXTH     r11,r0                ;1031
000d4c  f1bb0f3f          CMP      r11,#0x3f             ;1032
000d50  d901              BLS      |L1.3414|
000d52  f04f0b00          MOV      r11,#0                ;1032
                  |L1.3414|
000d56  fa0ff18b          SXTH     r1,r11                ;1033
000d5a  4620              MOV      r0,r4                 ;1033
000d5c  f7fffffe          BL       lc640_write_int
000d60  f6406002          MOV      r0,#0xe02             ;1035
000d64  f7fffffe          BL       lc640_read_int
000d68  b280              UXTH     r0,r0                 ;1035
000d6a  283f              CMP      r0,#0x3f              ;1036
000d6c  d000              BEQ      |L1.3440|
000d6e  4658              MOV      r0,r11                ;1036
                  |L1.3440|
000d70  b201              SXTH     r1,r0                 ;1037
000d72  f6406002          MOV      r0,#0xe02             ;1037
000d76  f7fffffe          BL       lc640_write_int
000d7a  4620              MOV      r0,r4                 ;1039
000d7c  f7fffffe          BL       lc640_read_int
000d80  eb0a1040          ADD      r0,r10,r0,LSL #5      ;1039
000d84  b284              UXTH     r4,r0                 ;1039
000d86  f04f0056          MOV      r0,#0x56              ;1041
000d8a  f88d0000          STRB     r0,[sp,#0]            ;1041
000d8e  f04f0049          MOV      r0,#0x49              ;1042
000d92  f88d0001          STRB     r0,[sp,#1]            ;1042
000d96  f04f004e          MOV      r0,#0x4e              ;1043
000d9a  f88d0002          STRB     r0,[sp,#2]            ;1043
000d9e  f88d9003          STRB     r9,[sp,#3]            ;1044
000da2  4669              MOV      r1,sp                 ;1045
000da4  4620              MOV      r0,r4                 ;1045
000da6  f7fffffe          BL       lc640_write_long_ptr
000daa  f88d6000          STRB     r6,[sp,#0]            ;1047
000dae  f88d7001          STRB     r7,[sp,#1]            ;1048
000db2  f88d5002          STRB     r5,[sp,#2]            ;1049
000db6  f88d9003          STRB     r9,[sp,#3]            ;1050
000dba  4669              MOV      r1,sp                 ;1051
000dbc  1d20              ADDS     r0,r4,#4              ;1051
000dbe  f7fffffe          BL       lc640_write_long_ptr
000dc2  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1053
000dc6  f88d0000          STRB     r0,[sp,#0]            ;1053
000dca  f8980038          LDRB     r0,[r8,#0x38]         ;1054
000dce  e000              B        |L1.3538|
                  |L1.3536|
000dd0  e057              B        |L1.3714|
                  |L1.3538|
000dd2  f88d0001          STRB     r0,[sp,#1]            ;1054
000dd6  f898002c          LDRB     r0,[r8,#0x2c]         ;1055
000dda  f88d0002          STRB     r0,[sp,#2]            ;1055
000dde  f88d9003          STRB     r9,[sp,#3]            ;1056
000de2  4669              MOV      r1,sp                 ;1057
000de4  f1040008          ADD      r0,r4,#8              ;1057
000de8  f7fffffe          BL       lc640_write_long_ptr
000dec  f8980028          LDRB     r0,[r8,#0x28]         ;1059
000df0  f88d0000          STRB     r0,[sp,#0]            ;1059
000df4  f8980024          LDRB     r0,[r8,#0x24]         ;1060
000df8  f88d0001          STRB     r0,[sp,#1]            ;1060
000dfc  f8980020          LDRB     r0,[r8,#0x20]         ;1061
000e00  f88d0002          STRB     r0,[sp,#2]            ;1061
000e04  f88d9003          STRB     r9,[sp,#3]            ;1062
000e08  4669              MOV      r1,sp                 ;1063
000e0a  f104000c          ADD      r0,r4,#0xc            ;1063
000e0e  f7fffffe          BL       lc640_write_long_ptr
000e12  f04f0541          MOV      r5,#0x41              ;1065
000e16  e000              B        |L1.3610|
                  |L1.3608|
000e18  e03f              B        |L1.3738|
                  |L1.3610|
000e1a  f88d5000          STRB     r5,[sp,#0]            ;1065
000e1e  f88d5001          STRB     r5,[sp,#1]            ;1066
000e22  f88d5002          STRB     r5,[sp,#2]            ;1067
000e26  f88d5003          STRB     r5,[sp,#3]            ;1068
000e2a  4669              MOV      r1,sp                 ;1069
000e2c  f1040010          ADD      r0,r4,#0x10           ;1069
000e30  f7fffffe          BL       lc640_write_long_ptr
000e34  f88d5000          STRB     r5,[sp,#0]            ;1071
000e38  f88d5001          STRB     r5,[sp,#1]            ;1072
000e3c  f88d5002          STRB     r5,[sp,#2]            ;1073
000e40  f88d5003          STRB     r5,[sp,#3]            ;1074
000e44  4669              MOV      r1,sp                 ;1075
000e46  f1040014          ADD      r0,r4,#0x14           ;1075
000e4a  f7fffffe          BL       lc640_write_long_ptr
000e4e  f88d5000          STRB     r5,[sp,#0]            ;1077
000e52  f88d5001          STRB     r5,[sp,#1]            ;1078
000e56  f88d5002          STRB     r5,[sp,#2]            ;1079
000e5a  f88d5003          STRB     r5,[sp,#3]            ;1080
000e5e  4669              MOV      r1,sp                 ;1081
000e60  f1040018          ADD      r0,r4,#0x18           ;1081
000e64  f7fffffe          BL       lc640_write_long_ptr
000e68  f88d5000          STRB     r5,[sp,#0]            ;1083
000e6c  f88d5001          STRB     r5,[sp,#1]            ;1084
000e70  f88d5002          STRB     r5,[sp,#2]            ;1085
000e74  f88d5003          STRB     r5,[sp,#3]            ;1086
000e78  4669              MOV      r1,sp                 ;1087
000e7a  f104001c          ADD      r0,r4,#0x1c           ;1087
000e7e  f7fffffe          BL       lc640_write_long_ptr
                  |L1.3714|
;;;1110        	{        
;;;1111        	if(event_ptr_find)event_ptr_find--;
;;;1112        	else event_ptr_find=63;
;;;1113        	if(event_ptr_find==event_ptr)return;
;;;1114        	else goto avar_u_in_hndl_lbl1;
;;;1115        	}
;;;1116        else 
;;;1117        	{
;;;1118        	lc640_read_long_ptr(lc640_adr+16,data);
;;;1119        	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;1120        		{        
;;;1121        		if(event_ptr_find)event_ptr_find--;
;;;1122            	else event_ptr_find=63;
;;;1123            	if(event_ptr_find==event_ptr)return;
;;;1124        		else goto avar_u_in_hndl_lbl1;
;;;1125        		}
;;;1126   
;;;1127        	}
;;;1128        		
;;;1129   	data[0]=LPC_RTC->YEAR;
;;;1130   	data[1]=LPC_RTC->MONTH;
;;;1131   	data[2]=LPC_RTC->DOM;
;;;1132   	data[3]=0;
;;;1133   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1134   
;;;1135   	data[0]=LPC_RTC->HOUR;
;;;1136   	data[1]=LPC_RTC->MIN;
;;;1137   	data[2]=LPC_RTC->SEC;
;;;1138   	data[3]=0;
;;;1139   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1140   	
;;;1141   	data[0]=*((char*)&volt);
;;;1142   	data[1]=*(((char*)&volt)+1);
;;;1143   	data[2]='B';
;;;1144   	data[3]='B';
;;;1145   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1146   	
;;;1147   	data[0]='B';
;;;1148   	data[1]='B';
;;;1149   	data[2]='B';
;;;1150   	data[3]='B';
;;;1151   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1152   	}
;;;1153   	
;;;1154   }
000e82  e6a3              B        |L1.3020|
                  |L1.3716|
000e84  f89d0001          LDRB     r0,[sp,#1]            ;1109
000e88  2849              CMP      r0,#0x49              ;1109
000e8a  d106              BNE      |L1.3738|
000e8c  f89d0002          LDRB     r0,[sp,#2]            ;1109
000e90  284e              CMP      r0,#0x4e              ;1109
000e92  d102              BNE      |L1.3738|
000e94  f89d0003          LDRB     r0,[sp,#3]            ;1109
000e98  b150              CBZ      r0,|L1.3760|
                  |L1.3738|
000e9a  b11c              CBZ      r4,|L1.3748|
000e9c  f1a40401          SUB      r4,r4,#1              ;1111
000ea0  b2a4              UXTH     r4,r4                 ;1111
000ea2  e001              B        |L1.3752|
                  |L1.3748|
000ea4  f04f043f          MOV      r4,#0x3f              ;1112
                  |L1.3752|
000ea8  455c              CMP      r4,r11                ;1113
                  |L1.3754|
000eaa  f47faf2c          BNE      |L1.3334|
000eae  e68d              B        |L1.3020|
                  |L1.3760|
000eb0  4669              MOV      r1,sp                 ;1118
000eb2  f1050010          ADD      r0,r5,#0x10           ;1118
000eb6  f7fffffe          BL       lc640_read_long_ptr
000eba  f89d0000          LDRB     r0,[sp,#0]            ;1119
000ebe  2841              CMP      r0,#0x41              ;1119
000ec0  d10b              BNE      |L1.3802|
000ec2  f89d0001          LDRB     r0,[sp,#1]            ;1119
000ec6  2841              CMP      r0,#0x41              ;1119
000ec8  d107              BNE      |L1.3802|
000eca  f89d0002          LDRB     r0,[sp,#2]            ;1119
000ece  2841              CMP      r0,#0x41              ;1119
000ed0  d103              BNE      |L1.3802|
000ed2  f89d0003          LDRB     r0,[sp,#3]            ;1119
000ed6  2841              CMP      r0,#0x41              ;1119
000ed8  d009              BEQ      |L1.3822|
                  |L1.3802|
000eda  b11c              CBZ      r4,|L1.3812|
000edc  f1a40401          SUB      r4,r4,#1              ;1121
000ee0  b2a4              UXTH     r4,r4                 ;1121
000ee2  e001              B        |L1.3816|
                  |L1.3812|
000ee4  f04f043f          MOV      r4,#0x3f              ;1122
                  |L1.3816|
000ee8  455c              CMP      r4,r11                ;1123
000eea  d1de              BNE      |L1.3754|
000eec  e66e              B        |L1.3020|
                  |L1.3822|
000eee  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1129
000ef2  f88d0000          STRB     r0,[sp,#0]            ;1129
000ef6  f8980038          LDRB     r0,[r8,#0x38]         ;1130
000efa  f88d0001          STRB     r0,[sp,#1]            ;1130
000efe  f898002c          LDRB     r0,[r8,#0x2c]         ;1131
000f02  f88d0002          STRB     r0,[sp,#2]            ;1131
000f06  f88d9003          STRB     r9,[sp,#3]            ;1132
000f0a  4669              MOV      r1,sp                 ;1133
000f0c  f1050010          ADD      r0,r5,#0x10           ;1133
000f10  f7fffffe          BL       lc640_write_long_ptr
000f14  f8980028          LDRB     r0,[r8,#0x28]         ;1135
000f18  f88d0000          STRB     r0,[sp,#0]            ;1135
000f1c  f8980024          LDRB     r0,[r8,#0x24]         ;1136
000f20  f88d0001          STRB     r0,[sp,#1]            ;1136
000f24  f8980020          LDRB     r0,[r8,#0x20]         ;1137
000f28  f88d0002          STRB     r0,[sp,#2]            ;1137
000f2c  f88d9003          STRB     r9,[sp,#3]            ;1138
000f30  4669              MOV      r1,sp                 ;1139
000f32  f1050014          ADD      r0,r5,#0x14           ;1139
000f36  f7fffffe          BL       lc640_write_long_ptr
000f3a  f88d6000          STRB     r6,[sp,#0]            ;1141
000f3e  f88d7001          STRB     r7,[sp,#1]            ;1142
000f42  f04f0442          MOV      r4,#0x42              ;1143
000f46  f88d4002          STRB     r4,[sp,#2]            ;1143
000f4a  f88d4003          STRB     r4,[sp,#3]            ;1144
000f4e  4669              MOV      r1,sp                 ;1145
000f50  f1050018          ADD      r0,r5,#0x18           ;1145
000f54  f7fffffe          BL       lc640_write_long_ptr
000f58  f88d4000          STRB     r4,[sp,#0]            ;1147
000f5c  f88d4001          STRB     r4,[sp,#1]            ;1148
000f60  f88d4002          STRB     r4,[sp,#2]            ;1149
000f64  f88d4003          STRB     r4,[sp,#3]            ;1150
000f68  4669              MOV      r1,sp                 ;1151
000f6a  f105001c          ADD      r0,r5,#0x1c           ;1151
000f6e  f7fffffe          BL       lc640_write_long_ptr
000f72  e62b              B        |L1.3020|
;;;1155   
                          ENDP

                  avar_sys_t_hndl PROC
;;;1157   //-----------------------------------------------
;;;1158   void avar_sys_t_hndl(char in,short temper)
000f74  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;1159   {
000f78  b081              SUB      sp,sp,#4
;;;1160   
;;;1161   char data[4];
;;;1162   unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;1163   if(sysTAvar==in)return;
000f7a  49a0              LDR      r1,|L1.4604|
000f7c  780a              LDRB     r2,[r1,#0]  ; sysTAvar
000f7e  4282              CMP      r2,r0
000f80  d07e              BEQ      |L1.4224|
;;;1164   if(in==1)
;;;1165   	{
;;;1166   	sysTAvar=in;
;;;1167   
;;;1168   	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;1169   	event_ptr++;	
;;;1170   	if(event_ptr>63)event_ptr=0;	
;;;1171   	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;1172   	
;;;1173       event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;1174   	if(event_cnt!=63)event_cnt=event_ptr;
;;;1175   	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;1176   	
;;;1177   	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;1178   	
;;;1179   	data[0]='T';
;;;1180   	data[1]='S';
;;;1181   	data[2]='Y';
;;;1182   	data[3]='S';
;;;1183   	lc640_write_long_ptr(lc640_adr,data);
;;;1184   
;;;1185   	data[0]=*((char*)&temper);
000f82  f89d7008          LDRB     r7,[sp,#8]
;;;1186   	data[1]=*(((char*)&temper)+1);
000f86  f89d8009          LDRB     r8,[sp,#9]
;;;1187   	data[2]=0;
;;;1188   	data[3]=0;
;;;1189   	lc640_write_long_ptr(lc640_adr+4,data);
;;;1190   
;;;1191   	data[0]=LPC_RTC->YEAR;
000f8a  f8df9274          LDR      r9,|L1.4608|
000f8e  f44f6560          MOV      r5,#0xe00             ;1168
000f92  f04f0a00          MOV      r10,#0                ;1170
000f96  f44f6b80          MOV      r11,#0x400            ;1177
000f9a  2801              CMP      r0,#1                 ;1164
000f9c  d014              BEQ      |L1.4040|
;;;1192   	data[1]=LPC_RTC->MONTH;
;;;1193   	data[2]=LPC_RTC->DOM;
;;;1194   	data[3]=0;
;;;1195   	lc640_write_long_ptr(lc640_adr+8,data);
;;;1196   
;;;1197   	data[0]=LPC_RTC->HOUR;
;;;1198   	data[1]=LPC_RTC->MIN;
;;;1199   	data[2]=LPC_RTC->SEC;
;;;1200   	data[3]=0;
;;;1201   	lc640_write_long_ptr(lc640_adr+12,data);
;;;1202   	
;;;1203   	data[0]='A';
;;;1204   	data[1]='A';
;;;1205   	data[2]='A';
;;;1206   	data[3]='A';
;;;1207   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1208   	
;;;1209   	data[0]='A';
;;;1210   	data[1]='A';
;;;1211   	data[2]='A';
;;;1212   	data[3]='A';
;;;1213   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1214   	
;;;1215   	data[0]='A';
;;;1216   	data[1]='A';
;;;1217   	data[2]='A';
;;;1218   	data[3]='A';
;;;1219   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1220   	
;;;1221   	data[0]='A';
;;;1222   	data[1]='A';
;;;1223   	data[2]='A';
;;;1224   	data[3]='A';
;;;1225   	lc640_write_long_ptr(lc640_adr+28,data);				
;;;1226   
;;;1227   	//snmp_trap_send("System overload",5,1,2);
;;;1228   
;;;1229   	
;;;1230   	}
;;;1231   
;;;1232   else if(in==0)
000f9e  2800              CMP      r0,#0
000fa0  d16e              BNE      |L1.4224|
;;;1233   	{
;;;1234   	
;;;1235   
;;;1236   	sysTAvar=0;
000fa2  f881a000          STRB     r10,[r1,#0]
;;;1237   
;;;1238       event_ptr=lc640_read_int(PTR_EVENT_LOG);
000fa6  4628              MOV      r0,r5
000fa8  f7fffffe          BL       lc640_read_int
000fac  b286              UXTH     r6,r0
;;;1239   	event_ptr_find=event_ptr;
000fae  4634              MOV      r4,r6
                  |L1.4016|
;;;1240   	
;;;1241   avar_sys_t_hndl_lbl1: 
;;;1242   
;;;1243   	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000fb0  eb0b1044          ADD      r0,r11,r4,LSL #5
000fb4  b285              UXTH     r5,r0
;;;1244   
;;;1245   	lc640_read_long_ptr(lc640_adr,data);
000fb6  4669              MOV      r1,sp
000fb8  4628              MOV      r0,r5
000fba  f7fffffe          BL       lc640_read_long_ptr
;;;1246        
;;;1247       if(!((data[0]=='T')&&(data[1]=='S')&&(data[2]=='Y')&&(data[3]=='S')))
000fbe  f89d0000          LDRB     r0,[sp,#0]
000fc2  2854              CMP      r0,#0x54
000fc4  d17e              BNE      |L1.4292|
000fc6  e0a0              B        |L1.4362|
                  |L1.4040|
000fc8  7008              STRB     r0,[r1,#0]            ;1166
000fca  4628              MOV      r0,r5                 ;1168
000fcc  f7fffffe          BL       lc640_read_int
000fd0  f1000001          ADD      r0,r0,#1              ;1169
000fd4  b284              UXTH     r4,r0                 ;1169
000fd6  2c3f              CMP      r4,#0x3f              ;1170
000fd8  d901              BLS      |L1.4062|
000fda  f04f0400          MOV      r4,#0                 ;1170
                  |L1.4062|
000fde  b221              SXTH     r1,r4                 ;1171
000fe0  4628              MOV      r0,r5                 ;1171
000fe2  f7fffffe          BL       lc640_write_int
000fe6  f6406602          MOV      r6,#0xe02             ;1173
000fea  4630              MOV      r0,r6                 ;1173
000fec  f7fffffe          BL       lc640_read_int
000ff0  b280              UXTH     r0,r0                 ;1173
000ff2  283f              CMP      r0,#0x3f              ;1174
000ff4  d000              BEQ      |L1.4088|
000ff6  4620              MOV      r0,r4                 ;1174
                  |L1.4088|
000ff8  b201              SXTH     r1,r0                 ;1175
000ffa  4630              MOV      r0,r6                 ;1175
000ffc  f7fffffe          BL       lc640_write_int
001000  4628              MOV      r0,r5                 ;1177
001002  f7fffffe          BL       lc640_read_int
001006  eb0b1040          ADD      r0,r11,r0,LSL #5      ;1177
00100a  b284              UXTH     r4,r0                 ;1177
00100c  f04f0054          MOV      r0,#0x54              ;1179
001010  f88d0000          STRB     r0,[sp,#0]            ;1179
001014  f04f0053          MOV      r0,#0x53              ;1180
001018  f88d0001          STRB     r0,[sp,#1]            ;1180
00101c  f04f0159          MOV      r1,#0x59              ;1181
001020  f88d1002          STRB     r1,[sp,#2]            ;1181
001024  f88d0003          STRB     r0,[sp,#3]            ;1182
001028  4669              MOV      r1,sp                 ;1183
00102a  4620              MOV      r0,r4                 ;1183
00102c  f7fffffe          BL       lc640_write_long_ptr
001030  f88d7000          STRB     r7,[sp,#0]            ;1185
001034  f88d8001          STRB     r8,[sp,#1]            ;1186
001038  f88da002          STRB     r10,[sp,#2]           ;1187
00103c  f88da003          STRB     r10,[sp,#3]           ;1188
001040  4669              MOV      r1,sp                 ;1189
001042  1d20              ADDS     r0,r4,#4              ;1189
001044  f7fffffe          BL       lc640_write_long_ptr
001048  f8b9003c          LDRH     r0,[r9,#0x3c]         ;1191
00104c  f88d0000          STRB     r0,[sp,#0]            ;1191
001050  f8990038          LDRB     r0,[r9,#0x38]         ;1192
001054  f88d0001          STRB     r0,[sp,#1]            ;1192
001058  f899002c          LDRB     r0,[r9,#0x2c]         ;1193
00105c  f88d0002          STRB     r0,[sp,#2]            ;1193
001060  f88da003          STRB     r10,[sp,#3]           ;1194
001064  4669              MOV      r1,sp                 ;1195
001066  f1040008          ADD      r0,r4,#8              ;1195
00106a  f7fffffe          BL       lc640_write_long_ptr
00106e  f8990028          LDRB     r0,[r9,#0x28]         ;1197
001072  f88d0000          STRB     r0,[sp,#0]            ;1197
001076  f8990024          LDRB     r0,[r9,#0x24]         ;1198
00107a  f88d0001          STRB     r0,[sp,#1]            ;1198
00107e  e000              B        |L1.4226|
                  |L1.4224|
001080  e042              B        |L1.4360|
                  |L1.4226|
001082  f8990020          LDRB     r0,[r9,#0x20]         ;1199
001086  f88d0002          STRB     r0,[sp,#2]            ;1199
00108a  f88da003          STRB     r10,[sp,#3]           ;1200
00108e  4669              MOV      r1,sp                 ;1201
001090  f104000c          ADD      r0,r4,#0xc            ;1201
001094  f7fffffe          BL       lc640_write_long_ptr
001098  f04f0541          MOV      r5,#0x41              ;1203
00109c  f88d5000          STRB     r5,[sp,#0]            ;1203
0010a0  f88d5001          STRB     r5,[sp,#1]            ;1204
0010a4  f88d5002          STRB     r5,[sp,#2]            ;1205
0010a8  f88d5003          STRB     r5,[sp,#3]            ;1206
0010ac  4669              MOV      r1,sp                 ;1207
0010ae  f1040010          ADD      r0,r4,#0x10           ;1207
0010b2  f7fffffe          BL       lc640_write_long_ptr
0010b6  f88d5000          STRB     r5,[sp,#0]            ;1209
0010ba  f88d5001          STRB     r5,[sp,#1]            ;1210
0010be  f88d5002          STRB     r5,[sp,#2]            ;1211
0010c2  e000              B        |L1.4294|
                  |L1.4292|
0010c4  e02d              B        |L1.4386|
                  |L1.4294|
0010c6  f88d5003          STRB     r5,[sp,#3]            ;1212
0010ca  4669              MOV      r1,sp                 ;1213
0010cc  f1040014          ADD      r0,r4,#0x14           ;1213
0010d0  f7fffffe          BL       lc640_write_long_ptr
0010d4  f88d5000          STRB     r5,[sp,#0]            ;1215
0010d8  f88d5001          STRB     r5,[sp,#1]            ;1216
0010dc  f88d5002          STRB     r5,[sp,#2]            ;1217
0010e0  f88d5003          STRB     r5,[sp,#3]            ;1218
0010e4  4669              MOV      r1,sp                 ;1219
0010e6  f1040018          ADD      r0,r4,#0x18           ;1219
0010ea  f7fffffe          BL       lc640_write_long_ptr
0010ee  f88d5000          STRB     r5,[sp,#0]            ;1221
0010f2  f88d5001          STRB     r5,[sp,#1]            ;1222
0010f6  f88d5002          STRB     r5,[sp,#2]            ;1223
0010fa  f88d5003          STRB     r5,[sp,#3]            ;1224
0010fe  4669              MOV      r1,sp                 ;1225
001100  f104001c          ADD      r0,r4,#0x1c           ;1225
001104  f7fffffe          BL       lc640_write_long_ptr
                  |L1.4360|
;;;1248        	{        
;;;1249        	if(event_ptr_find)event_ptr_find--;
;;;1250        	else event_ptr_find=63;
;;;1251        	if(event_ptr_find==event_ptr)return;
;;;1252        	else goto avar_sys_t_hndl_lbl1;
;;;1253        	}
;;;1254        else 
;;;1255        	{
;;;1256        	lc640_read_long_ptr(lc640_adr+16,data);
;;;1257        	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;1258        		{        
;;;1259        		if(event_ptr_find)event_ptr_find--;
;;;1260            	else event_ptr_find=63;
;;;1261            	if(event_ptr_find==event_ptr)return;
;;;1262        		else goto avar_sys_t_hndl_lbl1;
;;;1263        		}
;;;1264   
;;;1265        	}
;;;1266        		
;;;1267   	data[0]=LPC_RTC->YEAR;
;;;1268   	data[1]=LPC_RTC->MONTH;
;;;1269   	data[2]=LPC_RTC->DOM;
;;;1270   	data[3]=0;
;;;1271   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1272   
;;;1273   	data[0]=LPC_RTC->HOUR;
;;;1274   	data[1]=LPC_RTC->MIN;
;;;1275   	data[2]=LPC_RTC->SEC;
;;;1276   	data[3]=0;
;;;1277   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1278   	
;;;1279   	data[0]=*((char*)&temper);
;;;1280   	data[1]=*(((char*)&temper)+1);
;;;1281   	data[2]='B';
;;;1282   	data[3]='B';
;;;1283   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1284   	
;;;1285   	data[0]='B';
;;;1286   	data[1]='B';
;;;1287   	data[2]='B';
;;;1288   	data[3]='B';
;;;1289   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1290   	}
;;;1291   	
;;;1292   }
001108  e560              B        |L1.3020|
                  |L1.4362|
00110a  f89d0001          LDRB     r0,[sp,#1]            ;1247
00110e  2853              CMP      r0,#0x53              ;1247
001110  d107              BNE      |L1.4386|
001112  f89d0002          LDRB     r0,[sp,#2]            ;1247
001116  2859              CMP      r0,#0x59              ;1247
001118  d103              BNE      |L1.4386|
00111a  f89d0003          LDRB     r0,[sp,#3]            ;1247
00111e  2853              CMP      r0,#0x53              ;1247
001120  d00a              BEQ      |L1.4408|
                  |L1.4386|
001122  b11c              CBZ      r4,|L1.4396|
001124  f1a40401          SUB      r4,r4,#1              ;1249
001128  b2a4              UXTH     r4,r4                 ;1249
00112a  e001              B        |L1.4400|
                  |L1.4396|
00112c  f04f043f          MOV      r4,#0x3f              ;1250
                  |L1.4400|
001130  42b4              CMP      r4,r6                 ;1251
                  |L1.4402|
001132  f47faf3d          BNE      |L1.4016|
001136  e549              B        |L1.3020|
                  |L1.4408|
001138  4669              MOV      r1,sp                 ;1256
00113a  f1050010          ADD      r0,r5,#0x10           ;1256
00113e  f7fffffe          BL       lc640_read_long_ptr
001142  f89d0000          LDRB     r0,[sp,#0]            ;1257
001146  2841              CMP      r0,#0x41              ;1257
001148  d10b              BNE      |L1.4450|
00114a  f89d0001          LDRB     r0,[sp,#1]            ;1257
00114e  2841              CMP      r0,#0x41              ;1257
001150  d107              BNE      |L1.4450|
001152  f89d0002          LDRB     r0,[sp,#2]            ;1257
001156  2841              CMP      r0,#0x41              ;1257
001158  d103              BNE      |L1.4450|
00115a  f89d0003          LDRB     r0,[sp,#3]            ;1257
00115e  2841              CMP      r0,#0x41              ;1257
001160  d009              BEQ      |L1.4470|
                  |L1.4450|
001162  b11c              CBZ      r4,|L1.4460|
001164  f1a40401          SUB      r4,r4,#1              ;1259
001168  b2a4              UXTH     r4,r4                 ;1259
00116a  e001              B        |L1.4464|
                  |L1.4460|
00116c  f04f043f          MOV      r4,#0x3f              ;1260
                  |L1.4464|
001170  42b4              CMP      r4,r6                 ;1261
001172  d1de              BNE      |L1.4402|
001174  e52a              B        |L1.3020|
                  |L1.4470|
001176  f8b9003c          LDRH     r0,[r9,#0x3c]         ;1267
00117a  f88d0000          STRB     r0,[sp,#0]            ;1267
00117e  f8990038          LDRB     r0,[r9,#0x38]         ;1268
001182  f88d0001          STRB     r0,[sp,#1]            ;1268
001186  f899002c          LDRB     r0,[r9,#0x2c]         ;1269
00118a  f88d0002          STRB     r0,[sp,#2]            ;1269
00118e  f88da003          STRB     r10,[sp,#3]           ;1270
001192  4669              MOV      r1,sp                 ;1271
001194  f1050010          ADD      r0,r5,#0x10           ;1271
001198  f7fffffe          BL       lc640_write_long_ptr
00119c  f8990028          LDRB     r0,[r9,#0x28]         ;1273
0011a0  f88d0000          STRB     r0,[sp,#0]            ;1273
0011a4  f8990024          LDRB     r0,[r9,#0x24]         ;1274
0011a8  f88d0001          STRB     r0,[sp,#1]            ;1274
0011ac  f8990020          LDRB     r0,[r9,#0x20]         ;1275
0011b0  f88d0002          STRB     r0,[sp,#2]            ;1275
0011b4  f88da003          STRB     r10,[sp,#3]           ;1276
0011b8  4669              MOV      r1,sp                 ;1277
0011ba  f1050014          ADD      r0,r5,#0x14           ;1277
0011be  f7fffffe          BL       lc640_write_long_ptr
0011c2  f88d7000          STRB     r7,[sp,#0]            ;1279
0011c6  f88d8001          STRB     r8,[sp,#1]            ;1280
0011ca  f04f0442          MOV      r4,#0x42              ;1281
0011ce  f88d4002          STRB     r4,[sp,#2]            ;1281
0011d2  f88d4003          STRB     r4,[sp,#3]            ;1282
0011d6  4669              MOV      r1,sp                 ;1283
0011d8  f1050018          ADD      r0,r5,#0x18           ;1283
0011dc  f7fffffe          BL       lc640_write_long_ptr
0011e0  f88d4000          STRB     r4,[sp,#0]            ;1285
0011e4  f88d4001          STRB     r4,[sp,#1]            ;1286
0011e8  f88d4002          STRB     r4,[sp,#2]            ;1287
0011ec  f88d4003          STRB     r4,[sp,#3]            ;1288
0011f0  4669              MOV      r1,sp                 ;1289
0011f2  f105001c          ADD      r0,r5,#0x1c           ;1289
0011f6  f7fffffe          BL       lc640_write_long_ptr
0011fa  e4e7              B        |L1.3020|
;;;1293   
                          ENDP

                  |L1.4604|
                          DCD      sysTAvar
                  |L1.4608|
                          DCD      0x40024000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  wrk_mem_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000004  4606              MOV      r6,r0
000006  eb060046          ADD      r0,r6,r6,LSL #1
00000a  eb001106          ADD      r1,r0,r6,LSL #4
00000e  4845              LDR      r0,|L2.292|
000010  eb000481          ADD      r4,r0,r1,LSL #2
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  8be0              LDRH     r0,[r4,#0x1e]
000016  2805              CMP      r0,#5
000018  d37e              BCC      |L2.280|
;;;66     
;;;67     for(i=0;i<29;i++)
00001a  4843              LDR      r0,|L2.296|
00001c  8800              LDRH     r0,[r0,#0]  ; bat_u_old_cnt
;;;68     	{
;;;69     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00001e  f1000006          ADD      r0,r0,#6
000022  f0000007          AND      r0,r0,#7
000026  eb040040          ADD      r0,r4,r0,LSL #1
00002a  8c00              LDRH     r0,[r0,#0x20]
00002c  9000              STR      r0,[sp,#0]
00002e  f44f6760          MOV      r7,#0xe00
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       lc640_read_int
000038  f1000001          ADD      r0,r0,#1
00003c  b285              UXTH     r5,r0
00003e  2d3f              CMP      r5,#0x3f
000040  d901              BLS      |L2.70|
000042  f04f0500          MOV      r5,#0
                  |L2.70|
000046  b229              SXTH     r1,r5
000048  4638              MOV      r0,r7
;;;70     	else	   			SET_REG(avar_stat,0,3+i,1);
00004a  f7fffffe          BL       lc640_write_int
00004e  f6406802          MOV      r8,#0xe02
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       lc640_read_int
000058  b280              UXTH     r0,r0
00005a  283f              CMP      r0,#0x3f              ;67
00005c  d000              BEQ      |L2.96|
00005e  4628              MOV      r0,r5                 ;67
                  |L2.96|
000060  b201              SXTH     r1,r0                 ;67
000062  4640              MOV      r0,r8                 ;67
;;;71     	}
;;;72     for(i=29;i<32;i++)
000064  f7fffffe          BL       lc640_write_int
;;;73     	{
;;;74     	if(bps[i]._av&0xef)	SET_REG(avar_stat1,1,i-29,1);
000068  4638              MOV      r0,r7
00006a  f7fffffe          BL       lc640_read_int
00006e  f44f6180          MOV      r1,#0x400
000072  eb011040          ADD      r0,r1,r0,LSL #5
000076  b285              UXTH     r5,r0
000078  f04f0042          MOV      r0,#0x42
00007c  f88d0004          STRB     r0,[sp,#4]
000080  f88d6005          STRB     r6,[sp,#5]
000084  f04f0057          MOV      r0,#0x57
000088  f88d0006          STRB     r0,[sp,#6]
00008c  f04f0600          MOV      r6,#0
;;;75     	else	   			SET_REG(avar_stat1,0,i-29,1);
000090  f88d6007          STRB     r6,[sp,#7]
000094  a901              ADD      r1,sp,#4
000096  4628              MOV      r0,r5
000098  f7fffffe          BL       lc640_write_long_ptr
00009c  7fa0              LDRB     r0,[r4,#0x1e]
00009e  f88d0004          STRB     r0,[sp,#4]            ;72
0000a2  7fe0              LDRB     r0,[r4,#0x1f]         ;72
0000a4  f88d0005          STRB     r0,[sp,#5]            ;72
;;;76     	}
;;;77     
;;;78     
;;;79     if(uout_av)			SET_REG(avar_stat,1,1,1);
0000a8  f89d0000          LDRB     r0,[sp,#0]
0000ac  f88d0006          STRB     r0,[sp,#6]
0000b0  f89d0001          LDRB     r0,[sp,#1]
0000b4  f88d0007          STRB     r0,[sp,#7]
;;;80     else	   			SET_REG(avar_stat,0,1,1);
0000b8  a901              ADD      r1,sp,#4
0000ba  1d28              ADDS     r0,r5,#4
0000bc  f7fffffe          BL       lc640_write_long_ptr
;;;81     
;;;82     
;;;83     avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
0000c0  f1040134          ADD      r1,r4,#0x34
0000c4  f1050008          ADD      r0,r5,#8
0000c8  f7fffffe          BL       lc640_write_long_ptr
;;;84     
;;;85     avar_ind_stat|=avar_stat_new;
0000cc  f1040138          ADD      r1,r4,#0x38
0000d0  f105000c          ADD      r0,r5,#0xc
;;;86     
;;;87     avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
0000d4  f7fffffe          BL       lc640_write_long_ptr
0000d8  4c14              LDR      r4,|L2.300|
0000da  8ba0              LDRH     r0,[r4,#0x1c]
0000dc  f88d0004          STRB     r0,[sp,#4]
;;;88     
;;;89     if(!AV_OFF_AVT)avar_stat_offed|=0x00000006;
0000e0  7e20              LDRB     r0,[r4,#0x18]
0000e2  f88d0005          STRB     r0,[sp,#5]
0000e6  7b20              LDRB     r0,[r4,#0xc]
0000e8  f88d0006          STRB     r0,[sp,#6]
0000ec  f88d6007          STRB     r6,[sp,#7]
;;;90     
;;;91     avar_ind_stat&=avar_stat_offed; 
0000f0  a901              ADD      r1,sp,#4
0000f2  f1050010          ADD      r0,r5,#0x10
;;;92     
;;;93     avar_stat_old=avar_stat;
0000f6  f7fffffe          BL       lc640_write_long_ptr
;;;94     
;;;95     
;;;96     avar_stat1_new=(avar_stat1^avar_stat1_old)&avar_stat1;
0000fa  7a20              LDRB     r0,[r4,#8]
0000fc  f88d0004          STRB     r0,[sp,#4]
000100  7920              LDRB     r0,[r4,#4]
000102  f88d0005          STRB     r0,[sp,#5]
;;;97     
;;;98     avar_ind_stat1|=avar_stat1_new;
000106  7820              LDRB     r0,[r4,#0]
000108  f88d0006          STRB     r0,[sp,#6]
;;;99     
;;;100    avar_stat1_offed=~((avar_stat1^avar_stat1_old)&avar_stat1_old);
00010c  f88d6007          STRB     r6,[sp,#7]
000110  a901              ADD      r1,sp,#4
000112  f1050014          ADD      r0,r5,#0x14
;;;101    
;;;102    if(!AV_OFF_AVT)avar_stat1_offed|=0x00000000;
;;;103    
;;;104    avar_ind_stat1&=avar_stat1_offed; 
000116  e000              B        |L2.282|
                  |L2.280|
000118  e001              B        |L2.286|
                  |L2.282|
00011a  f7fffffe          BL       lc640_write_long_ptr
                  |L2.286|
;;;105    
;;;106    avar_stat1_old=avar_stat1;
;;;107    }
00011e  bf00              NOP      
000120  e8bd81fc          POP      {r2-r8,pc}
;;;108    
                          ENDP

                  |L2.292|
                          DCD      bat
                  |L2.296|
                          DCD      bat_u_old_cnt
                  |L2.300|
                          DCD      0x40024020

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  avar_bat_ips_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000004  4602              MOV      r2,r0
000006  48a0              LDR      r0,|L3.648|
000008  4ca0              LDR      r4,|L3.652|
00000a  4ba1              LDR      r3,|L3.656|
00000c  f8df8284          LDR      r8,|L3.660|
000010  f890103d          LDRB     r1,[r0,#0x3d]
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  f04f0742          MOV      r7,#0x42
000018  f44f6560          MOV      r5,#0xe00
;;;66     
;;;67     for(i=0;i<29;i++)
00001c  f04f0900          MOV      r9,#0
;;;68     	{
;;;69     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
000020  f44f6a80          MOV      r10,#0x400
000024  2a01              CMP      r2,#1
000026  d002              BEQ      |L3.46|
000028  2a00              CMP      r2,#0
00002a  d07e              BEQ      |L3.298|
00002c  e129              B        |L3.642|
                  |L3.46|
00002e  f0410101          ORR      r1,r1,#1
000032  f880103d          STRB     r1,[r0,#0x3d]
000036  f04f0001          MOV      r0,#1
00003a  7020              STRB     r0,[r4,#0]
00003c  7018              STRB     r0,[r3,#0]
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       lc640_read_int
000044  f1000001          ADD      r0,r0,#1
000048  b284              UXTH     r4,r0
;;;70     	else	   			SET_REG(avar_stat,0,3+i,1);
00004a  2c3f              CMP      r4,#0x3f
00004c  d901              BLS      |L3.82|
00004e  f04f0400          MOV      r4,#0
                  |L3.82|
000052  b221              SXTH     r1,r4
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       lc640_write_int
00005a  f6406602          MOV      r6,#0xe02             ;67
00005e  4630              MOV      r0,r6                 ;67
000060  f7fffffe          BL       lc640_read_int
;;;71     	}
;;;72     for(i=29;i<32;i++)
000064  b281              UXTH     r1,r0
000066  293f              CMP      r1,#0x3f
;;;73     	{
;;;74     	if(bps[i]._av&0xef)	SET_REG(avar_stat1,1,i-29,1);
000068  d000              BEQ      |L3.108|
00006a  4621              MOV      r1,r4
                  |L3.108|
00006c  b209              SXTH     r1,r1
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       lc640_write_int
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       lc640_read_int
00007a  eb0a1040          ADD      r0,r10,r0,LSL #5
00007e  b284              UXTH     r4,r0
000080  f88d7000          STRB     r7,[sp,#0]
000084  f88d9001          STRB     r9,[sp,#1]
000088  f04f0043          MOV      r0,#0x43
00008c  f88d0002          STRB     r0,[sp,#2]
;;;75     	else	   			SET_REG(avar_stat1,0,i-29,1);
000090  f88d9003          STRB     r9,[sp,#3]
000094  4669              MOV      r1,sp
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       lc640_write_long_ptr
00009c  f8cd9000          STR      r9,[sp,#0]
0000a0  4669              MOV      r1,sp                 ;72
0000a2  1d20              ADDS     r0,r4,#4              ;72
0000a4  f7fffffe          BL       lc640_write_long_ptr
;;;76     	}
;;;77     
;;;78     
;;;79     if(uout_av)			SET_REG(avar_stat,1,1,1);
0000a8  f8b8003c          LDRH     r0,[r8,#0x3c]
0000ac  f88d0000          STRB     r0,[sp,#0]
0000b0  f8980038          LDRB     r0,[r8,#0x38]
0000b4  f88d0001          STRB     r0,[sp,#1]
;;;80     else	   			SET_REG(avar_stat,0,1,1);
0000b8  f898002c          LDRB     r0,[r8,#0x2c]
0000bc  f88d0002          STRB     r0,[sp,#2]
;;;81     
;;;82     
;;;83     avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
0000c0  f88d9003          STRB     r9,[sp,#3]
0000c4  4669              MOV      r1,sp
0000c6  f1040008          ADD      r0,r4,#8
0000ca  f7fffffe          BL       lc640_write_long_ptr
;;;84     
;;;85     avar_ind_stat|=avar_stat_new;
0000ce  f8980028          LDRB     r0,[r8,#0x28]
0000d2  f88d0000          STRB     r0,[sp,#0]
;;;86     
;;;87     avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
0000d6  f8980024          LDRB     r0,[r8,#0x24]
0000da  f88d0001          STRB     r0,[sp,#1]
;;;88     
;;;89     if(!AV_OFF_AVT)avar_stat_offed|=0x00000006;
0000de  f8980020          LDRB     r0,[r8,#0x20]
0000e2  f88d0002          STRB     r0,[sp,#2]
0000e6  f88d9003          STRB     r9,[sp,#3]
0000ea  4669              MOV      r1,sp
0000ec  f104000c          ADD      r0,r4,#0xc
;;;90     
;;;91     avar_ind_stat&=avar_stat_offed; 
0000f0  f7fffffe          BL       lc640_write_long_ptr
0000f4  f04f0541          MOV      r5,#0x41
;;;92     
;;;93     avar_stat_old=avar_stat;
;;;94     
;;;95     
;;;96     avar_stat1_new=(avar_stat1^avar_stat1_old)&avar_stat1;
0000f8  f88d5000          STRB     r5,[sp,#0]
0000fc  f88d5001          STRB     r5,[sp,#1]
000100  f88d5002          STRB     r5,[sp,#2]
;;;97     
;;;98     avar_ind_stat1|=avar_stat1_new;
000104  f88d5003          STRB     r5,[sp,#3]
000108  4669              MOV      r1,sp
00010a  f1040010          ADD      r0,r4,#0x10
;;;99     
;;;100    avar_stat1_offed=~((avar_stat1^avar_stat1_old)&avar_stat1_old);
00010e  f7fffffe          BL       lc640_write_long_ptr
000112  f88d5000          STRB     r5,[sp,#0]
;;;101    
;;;102    if(!AV_OFF_AVT)avar_stat1_offed|=0x00000000;
;;;103    
;;;104    avar_ind_stat1&=avar_stat1_offed; 
000116  f88d5001          STRB     r5,[sp,#1]
00011a  f88d5002          STRB     r5,[sp,#2]
;;;105    
;;;106    avar_stat1_old=avar_stat1;
;;;107    }
00011e  f88d5003          STRB     r5,[sp,#3]
000122  4669              MOV      r1,sp
000124  f1040014          ADD      r0,r4,#0x14
000128  e000              B        |L3.300|
                  |L3.298|
00012a  e022              B        |L3.370|
                  |L3.300|
00012c  f7fffffe          BL       lc640_write_long_ptr
000130  f88d5000          STRB     r5,[sp,#0]
000134  f88d5001          STRB     r5,[sp,#1]
000138  f88d5002          STRB     r5,[sp,#2]
00013c  f88d5003          STRB     r5,[sp,#3]
000140  4669              MOV      r1,sp
000142  f1040018          ADD      r0,r4,#0x18
000146  f7fffffe          BL       lc640_write_long_ptr
00014a  f88d5000          STRB     r5,[sp,#0]
00014e  f88d5001          STRB     r5,[sp,#1]
000152  f88d5002          STRB     r5,[sp,#2]
000156  f88d5003          STRB     r5,[sp,#3]
00015a  4669              MOV      r1,sp
00015c  f104001c          ADD      r0,r4,#0x1c
000160  f7fffffe          BL       lc640_write_long_ptr
000164  2301              MOVS     r3,#1
000166  461a              MOV      r2,r3
000168  2105              MOVS     r1,#5
00016a  a04b              ADR      r0,|L3.664|
00016c  f7fffffe          BL       snmp_trap_send
000170  e087              B        |L3.642|
                  |L3.370|
000172  f0210101          BIC      r1,r1,#1
000176  f880103d          STRB     r1,[r0,#0x3d]
00017a  f8849000          STRB     r9,[r4,#0]
00017e  f8839000          STRB     r9,[r3,#0]
000182  4628              MOV      r0,r5
000184  f7fffffe          BL       lc640_read_int
000188  b286              UXTH     r6,r0
00018a  4634              MOV      r4,r6
                  |L3.396|
00018c  eb0a1044          ADD      r0,r10,r4,LSL #5
000190  b285              UXTH     r5,r0
000192  4669              MOV      r1,sp
000194  4628              MOV      r0,r5
000196  f7fffffe          BL       lc640_read_long_ptr
00019a  f89d0000          LDRB     r0,[sp,#0]
00019e  2842              CMP      r0,#0x42
0001a0  d106              BNE      |L3.432|
0001a2  f89d0001          LDRB     r0,[sp,#1]
0001a6  b918              CBNZ     r0,|L3.432|
0001a8  f89d0002          LDRB     r0,[sp,#2]
0001ac  2843              CMP      r0,#0x43
0001ae  d009              BEQ      |L3.452|
                  |L3.432|
0001b0  b11c              CBZ      r4,|L3.442|
0001b2  f1a40401          SUB      r4,r4,#1
0001b6  b2a4              UXTH     r4,r4
0001b8  e001              B        |L3.446|
                  |L3.442|
0001ba  f04f043f          MOV      r4,#0x3f
                  |L3.446|
0001be  42b4              CMP      r4,r6
0001c0  d1e4              BNE      |L3.396|
0001c2  e05e              B        |L3.642|
                  |L3.452|
0001c4  4669              MOV      r1,sp
0001c6  f1050010          ADD      r0,r5,#0x10
0001ca  f7fffffe          BL       lc640_read_long_ptr
0001ce  f89d0000          LDRB     r0,[sp,#0]
0001d2  2841              CMP      r0,#0x41
0001d4  d10b              BNE      |L3.494|
0001d6  f89d0001          LDRB     r0,[sp,#1]
0001da  2841              CMP      r0,#0x41
0001dc  d107              BNE      |L3.494|
0001de  f89d0002          LDRB     r0,[sp,#2]
0001e2  2841              CMP      r0,#0x41
0001e4  d103              BNE      |L3.494|
0001e6  f89d0003          LDRB     r0,[sp,#3]
0001ea  2841              CMP      r0,#0x41
0001ec  d009              BEQ      |L3.514|
                  |L3.494|
0001ee  b11c              CBZ      r4,|L3.504|
0001f0  f1a40401          SUB      r4,r4,#1
0001f4  b2a4              UXTH     r4,r4
0001f6  e001              B        |L3.508|
                  |L3.504|
0001f8  f04f043f          MOV      r4,#0x3f
                  |L3.508|
0001fc  42b4              CMP      r4,r6
0001fe  d1c5              BNE      |L3.396|
000200  e03f              B        |L3.642|
                  |L3.514|
000202  f8b8003c          LDRH     r0,[r8,#0x3c]
000206  f88d0000          STRB     r0,[sp,#0]
00020a  f8980038          LDRB     r0,[r8,#0x38]
00020e  f88d0001          STRB     r0,[sp,#1]
000212  f898002c          LDRB     r0,[r8,#0x2c]
000216  f88d0002          STRB     r0,[sp,#2]
00021a  f88d9003          STRB     r9,[sp,#3]
00021e  4669              MOV      r1,sp
000220  f1050010          ADD      r0,r5,#0x10
000224  f7fffffe          BL       lc640_write_long_ptr
000228  f8980028          LDRB     r0,[r8,#0x28]
00022c  f88d0000          STRB     r0,[sp,#0]
000230  f8980024          LDRB     r0,[r8,#0x24]
000234  f88d0001          STRB     r0,[sp,#1]
000238  f8980020          LDRB     r0,[r8,#0x20]
00023c  f88d0002          STRB     r0,[sp,#2]
000240  f88d9003          STRB     r9,[sp,#3]
000244  4669              MOV      r1,sp
000246  f1050014          ADD      r0,r5,#0x14
00024a  f7fffffe          BL       lc640_write_long_ptr
00024e  f88d7000          STRB     r7,[sp,#0]
000252  f88d7001          STRB     r7,[sp,#1]
000256  f88d7002          STRB     r7,[sp,#2]
00025a  f88d7003          STRB     r7,[sp,#3]
00025e  4669              MOV      r1,sp
000260  f1050018          ADD      r0,r5,#0x18
000264  f7fffffe          BL       lc640_write_long_ptr
000268  f88d7000          STRB     r7,[sp,#0]
00026c  f88d7001          STRB     r7,[sp,#1]
000270  f88d7002          STRB     r7,[sp,#2]
000274  f88d7003          STRB     r7,[sp,#3]
000278  4669              MOV      r1,sp
00027a  f105001c          ADD      r0,r5,#0x1c
00027e  f7fffffe          BL       lc640_write_long_ptr
                  |L3.642|
000282  bf00              NOP      
000284  e8bd8ff8          POP      {r3-r11,pc}
;;;108    
                          ENDP

                  |L3.648|
                          DCD      bat_ips
                  |L3.652|
                          DCD      ips_bat_av_stat
                  |L3.656|
                          DCD      ips_bat_av_vzvod
                  |L3.660|
                          DCD      0x40024000
                  |L3.664|
000298  42415420          DCB      "BAT ",185,"1 Alarm, lost",0
00029c  b9312041
0002a0  6c61726d
0002a4  2c206c6f
0002a8  737400  
0002ab  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  avar_stat
                          DCD      0x00000000
                  avar_stat1
                          DCD      0x00000000
                  avar_ind_stat
                          DCD      0x00000000
                  avar_ind_stat1
                          DCD      0x00000000
                  avar_stat_old
                          DCD      0x00000000
                  avar_stat1_old
                          DCD      0x00000000
                  avar_stat_new
                          DCD      0x00000000
                  avar_stat_offed
                          DCD      0x00000000
                  avar_stat1_new
                          DCD      0x00000000
                  avar_stat1_offed
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  av_inv
                          DCDU     0x00000000
000004  0000              DCB      0x00,0x00
