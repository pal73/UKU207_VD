; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\avar_hndl.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\avar_hndl.d --feedback=.\EXE\UKU_VD_WG12232L3.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_VD -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DWG12232L3 --omf_browse=.\EXE\avar_hndl.crf avar_hndl.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  avar_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  b530              PUSH     {r4,r5,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000002  48ff              LDR      r0,|L1.1024|
000004  4aff              LDR      r2,|L1.1028|
000006  7801              LDRB     r1,[r0,#0]  ; net_av
000008  6810              LDR      r0,[r2,#0]
00000a  b119              CBZ      r1,|L1.20|
00000c  f0400001          ORR      r0,r0,#1
000010  6010              STR      r0,[r2,#0]  ; avar_stat
000012  e002              B        |L1.26|
                  |L1.20|
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  f0200001          BIC      r0,r0,#1
000018  6010              STR      r0,[r2,#0]  ; avar_stat
                  |L1.26|
;;;66     
;;;67     for(i=0;i<29;i++)
00001a  f04f0000          MOV      r0,#0
;;;68     	{
;;;69     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00001e  4cfa              LDR      r4,|L1.1032|
000020  f04f0301          MOV      r3,#1
                  |L1.36|
000024  eb000180          ADD      r1,r0,r0,LSL #2
000028  eb0101c0          ADD      r1,r1,r0,LSL #3
00002c  eb0401c1          ADD      r1,r4,r1,LSL #3
000030  7849              LDRB     r1,[r1,#1]
000032  f0110fef          TST      r1,#0xef
000036  d00a              BEQ      |L1.78|
000038  f1000503          ADD      r5,r0,#3
00003c  fa03f105          LSL      r1,r3,r5
000040  6815              LDR      r5,[r2,#0]  ; avar_stat
000042  ea250501          BIC      r5,r5,r1
000046  ea450501          ORR      r5,r5,r1
00004a  6015              STR      r5,[r2,#0]  ; avar_stat
00004c  e007              B        |L1.94|
                  |L1.78|
;;;70     	else	   			SET_REG(avar_stat,0,3+i,1);
00004e  f1000103          ADD      r1,r0,#3
000052  fa03f501          LSL      r5,r3,r1
000056  6811              LDR      r1,[r2,#0]  ; avar_stat
000058  ea210105          BIC      r1,r1,r5
00005c  6011              STR      r1,[r2,#0]  ; avar_stat
                  |L1.94|
00005e  f1000001          ADD      r0,r0,#1              ;67
000062  b2c0              UXTB     r0,r0                 ;67
000064  281d              CMP      r0,#0x1d              ;67
000066  d3dd              BCC      |L1.36|
;;;71     	}
;;;72     for(i=29;i<32;i++)
000068  f04f001d          MOV      r0,#0x1d
                  |L1.108|
;;;73     	{
;;;74     	if(bps[i]._av&0xef)	SET_REG(avar_stat1,1,i-29,1);
00006c  eb000180          ADD      r1,r0,r0,LSL #2
000070  eb0101c0          ADD      r1,r1,r0,LSL #3
000074  eb0401c1          ADD      r1,r4,r1,LSL #3
000078  7849              LDRB     r1,[r1,#1]
00007a  f0110fef          TST      r1,#0xef
00007e  d00a              BEQ      |L1.150|
000080  f1a0051d          SUB      r5,r0,#0x1d
000084  fa03f105          LSL      r1,r3,r5
000088  6855              LDR      r5,[r2,#4]  ; avar_stat1
00008a  ea250501          BIC      r5,r5,r1
00008e  ea450501          ORR      r5,r5,r1
000092  6055              STR      r5,[r2,#4]  ; avar_stat1
000094  e007              B        |L1.166|
                  |L1.150|
;;;75     	else	   			SET_REG(avar_stat1,0,i-29,1);
000096  f1a0011d          SUB      r1,r0,#0x1d
00009a  fa03f501          LSL      r5,r3,r1
00009e  6851              LDR      r1,[r2,#4]  ; avar_stat1
0000a0  ea210105          BIC      r1,r1,r5
0000a4  6051              STR      r1,[r2,#4]  ; avar_stat1
                  |L1.166|
0000a6  f1000001          ADD      r0,r0,#1              ;72
0000aa  b2c0              UXTB     r0,r0                 ;72
0000ac  2820              CMP      r0,#0x20              ;72
0000ae  d3dd              BCC      |L1.108|
;;;76     	}
;;;77     
;;;78     
;;;79     if(uout_av)			SET_REG(avar_stat,1,1,1);
0000b0  48d6              LDR      r0,|L1.1036|
0000b2  7800              LDRB     r0,[r0,#0]  ; uout_av
0000b4  b120              CBZ      r0,|L1.192|
0000b6  6810              LDR      r0,[r2,#0]  ; avar_stat
0000b8  f0400002          ORR      r0,r0,#2
0000bc  6010              STR      r0,[r2,#0]  ; avar_stat
0000be  e003              B        |L1.200|
                  |L1.192|
;;;80     else	   			SET_REG(avar_stat,0,1,1);
0000c0  6810              LDR      r0,[r2,#0]  ; avar_stat
0000c2  f0200002          BIC      r0,r0,#2
0000c6  6010              STR      r0,[r2,#0]  ; avar_stat
                  |L1.200|
;;;81     
;;;82     
;;;83     avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
0000c8  6810              LDR      r0,[r2,#0]  ; avar_stat
0000ca  6913              LDR      r3,[r2,#0x10]  ; avar_stat_old
0000cc  4604              MOV      r4,r0
0000ce  ea200003          BIC      r0,r0,r3
0000d2  6190              STR      r0,[r2,#0x18]  ; avar_stat_new
;;;84     
;;;85     avar_ind_stat|=avar_stat_new;
0000d4  6891              LDR      r1,[r2,#8]  ; avar_ind_stat
0000d6  ea410100          ORR      r1,r1,r0
0000da  6091              STR      r1,[r2,#8]  ; avar_ind_stat
;;;86     
;;;87     avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
0000dc  ea230304          BIC      r3,r3,r4
0000e0  ea6f0003          MVN      r0,r3
0000e4  61d0              STR      r0,[r2,#0x1c]  ; avar_stat_offed
;;;88     
;;;89     if(!AV_OFF_AVT)avar_stat_offed|=0x00000006;
0000e6  4bca              LDR      r3,|L1.1040|
0000e8  f9b33000          LDRSH    r3,[r3,#0]  ; AV_OFF_AVT
0000ec  2b00              CMP      r3,#0
0000ee  d102              BNE      |L1.246|
0000f0  f0400006          ORR      r0,r0,#6
0000f4  61d0              STR      r0,[r2,#0x1c]  ; avar_stat_offed
                  |L1.246|
;;;90     
;;;91     avar_ind_stat&=avar_stat_offed; 
0000f6  69d0              LDR      r0,[r2,#0x1c]  ; avar_stat_offed
0000f8  ea010100          AND      r1,r1,r0
0000fc  6091              STR      r1,[r2,#8]  ; avar_ind_stat
;;;92     
;;;93     avar_stat_old=avar_stat;
0000fe  6114              STR      r4,[r2,#0x10]  ; avar_stat_old
;;;94     
;;;95     
;;;96     avar_stat1_new=(avar_stat1^avar_stat1_old)&avar_stat1;
000100  6850              LDR      r0,[r2,#4]  ; avar_stat1
000102  6953              LDR      r3,[r2,#0x14]  ; avar_stat1_old
000104  4604              MOV      r4,r0
000106  ea200003          BIC      r0,r0,r3
00010a  6210              STR      r0,[r2,#0x20]  ; avar_stat1_new
;;;97     
;;;98     avar_ind_stat1|=avar_stat1_new;
00010c  68d1              LDR      r1,[r2,#0xc]  ; avar_ind_stat1
00010e  ea410100          ORR      r1,r1,r0
000112  60d1              STR      r1,[r2,#0xc]  ; avar_ind_stat1
;;;99     
;;;100    avar_stat1_offed=~((avar_stat1^avar_stat1_old)&avar_stat1_old);
000114  ea230304          BIC      r3,r3,r4
000118  ea6f0003          MVN      r0,r3
00011c  6250              STR      r0,[r2,#0x24]  ; avar_stat1_offed
;;;101    
;;;102    if(!AV_OFF_AVT)avar_stat1_offed|=0x00000000;
;;;103    
;;;104    avar_ind_stat1&=avar_stat1_offed; 
00011e  ea010100          AND      r1,r1,r0
000122  60d1              STR      r1,[r2,#0xc]  ; avar_ind_stat1
;;;105    
;;;106    avar_stat1_old=avar_stat1;
000124  6154              STR      r4,[r2,#0x14]  ; avar_stat1_old
;;;107    }
000126  bd30              POP      {r4,r5,pc}
;;;108    
                          ENDP

                  reload_hndl PROC
;;;109    //-----------------------------------------------
;;;110    void reload_hndl(void)
000128  b5f8              PUSH     {r3-r7,lr}
;;;111    {
;;;112    char data[4];
;;;113    unsigned int event_ptr,lc640_adr/*,event_ptr_find*/,event_cnt;
;;;114    
;;;115    event_ptr=lc640_read_int(PTR_EVENT_LOG);
00012a  f44f6560          MOV      r5,#0xe00
00012e  4628              MOV      r0,r5
000130  f7fffffe          BL       lc640_read_int
;;;116    event_ptr++;	
000134  f1000001          ADD      r0,r0,#1
000138  4604              MOV      r4,r0
;;;117    if(event_ptr>63)event_ptr=0;	
00013a  2c3f              CMP      r4,#0x3f
00013c  d901              BLS      |L1.322|
00013e  f04f0400          MOV      r4,#0
                  |L1.322|
;;;118    lc640_write_int(PTR_EVENT_LOG,event_ptr);	
000142  b221              SXTH     r1,r4
000144  4628              MOV      r0,r5
000146  f7fffffe          BL       lc640_write_int
;;;119    	
;;;120    event_cnt=lc640_read_int(CNT_EVENT_LOG);
00014a  f6406602          MOV      r6,#0xe02
00014e  4630              MOV      r0,r6
000150  f7fffffe          BL       lc640_read_int
;;;121    if(event_cnt!=63)event_cnt=event_ptr;
000154  283f              CMP      r0,#0x3f
000156  d000              BEQ      |L1.346|
000158  4620              MOV      r0,r4
                  |L1.346|
;;;122    lc640_write_int(CNT_EVENT_LOG,event_cnt); 
00015a  b201              SXTH     r1,r0
00015c  4630              MOV      r0,r6
00015e  f7fffffe          BL       lc640_write_int
;;;123    	
;;;124    lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
000162  4628              MOV      r0,r5
000164  f7fffffe          BL       lc640_read_int
000168  f44f6180          MOV      r1,#0x400
00016c  eb011440          ADD      r4,r1,r0,LSL #5
;;;125    	
;;;126    data[0]='U';
000170  f04f0055          MOV      r0,#0x55
000174  f88d0000          STRB     r0,[sp,#0]
;;;127    data[1]=0;
000178  f04f0600          MOV      r6,#0
00017c  f88d6001          STRB     r6,[sp,#1]
;;;128    data[2]='R';
000180  f04f0052          MOV      r0,#0x52
000184  f88d0002          STRB     r0,[sp,#2]
;;;129    data[3]=0;
000188  f88d6003          STRB     r6,[sp,#3]
;;;130    lc640_write_long_ptr(lc640_adr,data);
00018c  4669              MOV      r1,sp
00018e  4620              MOV      r0,r4
000190  f7fffffe          BL       lc640_write_long_ptr
;;;131    
;;;132    data[0]=0;
;;;133    data[1]=0;
;;;134    data[2]=0;
;;;135    data[3]=0;
000194  9600              STR      r6,[sp,#0]
;;;136    lc640_write_long_ptr(lc640_adr+4,data);
000196  4669              MOV      r1,sp
000198  1d20              ADDS     r0,r4,#4
00019a  f7fffffe          BL       lc640_write_long_ptr
;;;137    
;;;138    data[0]=LPC_RTC->YEAR;
00019e  4d9d              LDR      r5,|L1.1044|
0001a0  8ba8              LDRH     r0,[r5,#0x1c]
0001a2  f88d0000          STRB     r0,[sp,#0]
;;;139    data[1]=LPC_RTC->MONTH;
0001a6  7e28              LDRB     r0,[r5,#0x18]
0001a8  f88d0001          STRB     r0,[sp,#1]
;;;140    data[2]=LPC_RTC->DOM;
0001ac  7b28              LDRB     r0,[r5,#0xc]
0001ae  f88d0002          STRB     r0,[sp,#2]
;;;141    data[3]=0;
0001b2  f88d6003          STRB     r6,[sp,#3]
;;;142    lc640_write_long_ptr(lc640_adr+8,data);
0001b6  4669              MOV      r1,sp
0001b8  f1040008          ADD      r0,r4,#8
0001bc  f7fffffe          BL       lc640_write_long_ptr
;;;143    
;;;144    data[0]=LPC_RTC->HOUR;
0001c0  7a28              LDRB     r0,[r5,#8]
0001c2  f88d0000          STRB     r0,[sp,#0]
;;;145    data[1]=LPC_RTC->MIN;
0001c6  7928              LDRB     r0,[r5,#4]
0001c8  f88d0001          STRB     r0,[sp,#1]
;;;146    data[2]=LPC_RTC->SEC;
0001cc  7828              LDRB     r0,[r5,#0]
0001ce  f88d0002          STRB     r0,[sp,#2]
;;;147    data[3]=LPC_SC->RSID;
0001d2  4891              LDR      r0,|L1.1048|
0001d4  f8d00180          LDR      r0,[r0,#0x180]
0001d8  f88d0003          STRB     r0,[sp,#3]
;;;148    
;;;149    lc640_write_long_ptr(lc640_adr+12,data);
0001dc  4669              MOV      r1,sp
0001de  f104000c          ADD      r0,r4,#0xc
0001e2  f7fffffe          BL       lc640_write_long_ptr
;;;150    	
;;;151    data[0]='A';
0001e6  f04f0541          MOV      r5,#0x41
0001ea  f88d5000          STRB     r5,[sp,#0]
;;;152    data[1]='A';
0001ee  f88d5001          STRB     r5,[sp,#1]
;;;153    data[2]='A';
0001f2  f88d5002          STRB     r5,[sp,#2]
;;;154    data[3]='A';
0001f6  f88d5003          STRB     r5,[sp,#3]
;;;155    lc640_write_long_ptr(lc640_adr+16,data);
0001fa  4669              MOV      r1,sp
0001fc  f1040010          ADD      r0,r4,#0x10
000200  f7fffffe          BL       lc640_write_long_ptr
;;;156    	
;;;157    data[0]='A';
000204  f88d5000          STRB     r5,[sp,#0]
;;;158    data[1]='A';
000208  f88d5001          STRB     r5,[sp,#1]
;;;159    data[2]='A';
00020c  f88d5002          STRB     r5,[sp,#2]
;;;160    data[3]='A';
000210  f88d5003          STRB     r5,[sp,#3]
;;;161    lc640_write_long_ptr(lc640_adr+20,data);
000214  4669              MOV      r1,sp
000216  f1040014          ADD      r0,r4,#0x14
00021a  f7fffffe          BL       lc640_write_long_ptr
;;;162    	
;;;163    data[0]='A';
00021e  f88d5000          STRB     r5,[sp,#0]
;;;164    data[1]='A';
000222  f88d5001          STRB     r5,[sp,#1]
;;;165    data[2]='A';
000226  f88d5002          STRB     r5,[sp,#2]
;;;166    data[3]='A';
00022a  f88d5003          STRB     r5,[sp,#3]
;;;167    lc640_write_long_ptr(lc640_adr+24,data);
00022e  4669              MOV      r1,sp
000230  f1040018          ADD      r0,r4,#0x18
000234  f7fffffe          BL       lc640_write_long_ptr
;;;168    	
;;;169    data[0]='A';
000238  f88d5000          STRB     r5,[sp,#0]
;;;170    data[1]='A';
00023c  f88d5001          STRB     r5,[sp,#1]
;;;171    data[2]='A';
000240  f88d5002          STRB     r5,[sp,#2]
;;;172    data[3]='A';
000244  f88d5003          STRB     r5,[sp,#3]
;;;173    lc640_write_long_ptr(lc640_adr+28,data);				
000248  4669              MOV      r1,sp
00024a  f104001c          ADD      r0,r4,#0x1c
00024e  f7fffffe          BL       lc640_write_long_ptr
;;;174    	
;;;175    	
;;;176    }
000252  bdf8              POP      {r3-r7,pc}
;;;177    
                          ENDP

                  avar_bps_hndl PROC
;;;326    //-----------------------------------------------
;;;327    void avar_bps_hndl(char dev, char v, char in)
000254  e92d4ff8          PUSH     {r3-r11,lr}
;;;328    {
000258  4606              MOV      r6,r0
00025a  460c              MOV      r4,r1
;;;329    char data[4];
;;;330    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;331    char avar_simbol;
;;;332    
;;;333    avar_simbol='T';
00025c  f04f0754          MOV      r7,#0x54
;;;334    if(v==0)avar_simbol='T';
000260  b174              CBZ      r4,|L1.640|
;;;335    else if(v==1)avar_simbol='U';
000262  2c01              CMP      r4,#1
000264  d004              BEQ      |L1.624|
;;;336    else if(v==2)avar_simbol='u';
000266  2c02              CMP      r4,#2
000268  d005              BEQ      |L1.630|
;;;337    else if(v==3)avar_simbol='L';
00026a  2c03              CMP      r4,#3
00026c  d006              BEQ      |L1.636|
00026e  e007              B        |L1.640|
                  |L1.624|
000270  f04f0755          MOV      r7,#0x55              ;335
000274  e004              B        |L1.640|
                  |L1.630|
000276  f04f0775          MOV      r7,#0x75              ;336
00027a  e001              B        |L1.640|
                  |L1.636|
00027c  f04f074c          MOV      r7,#0x4c
                  |L1.640|
;;;338    
;;;339    if(in==1)
;;;340    	{
;;;341    	//av_src[bps]=1;
;;;342    
;;;343    //	SET_REG(avar_ind_stat,1,3+dev,1);
;;;344    //	SET_REG(avar_stat,1,3+dev,1);
;;;345    	
;;;346    	if(v==0)bps[dev]._av|=(1<<0);
;;;347    	else if(v==1) bps[dev]._av|=(1<<1);
;;;348    	else if(v==2) bps[dev]._av|=(1<<2);
;;;349    	else if(v==3) bps[dev]._av|=(1<<3);
;;;350    
;;;351    	bps[dev]._last_avar=v;
;;;352    
;;;353    	//beep_init(0x33333333,'A');
;;;354    
;;;355    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;356    	event_ptr++;	
;;;357    	if(event_ptr>63)event_ptr=0;	
;;;358    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;359    	
;;;360         event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;361    	if(event_cnt!=63)event_cnt=event_ptr;
;;;362    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;363    	
;;;364    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;365    	
;;;366    	data[0]='S';
;;;367    	data[1]=dev; 
;;;368    	data[2]=avar_simbol;
;;;369    	data[3]=0;
;;;370    	lc640_write_long_ptr(lc640_adr,data);
;;;371    
;;;372    	data[0]=0;
;;;373    	data[1]=0;
;;;374    	data[2]=0;
;;;375    	data[3]=0;
;;;376    	lc640_write_long_ptr(lc640_adr+4,data);
;;;377    
;;;378    	data[0]=LPC_RTC->YEAR;
000280  f8df8190          LDR      r8,|L1.1044|
000284  4860              LDR      r0,|L1.1032|
000286  eb060186          ADD      r1,r6,r6,LSL #2       ;346
00028a  eb0101c6          ADD      r1,r1,r6,LSL #3       ;346
00028e  f04f0900          MOV      r9,#0                 ;328
000292  f1a80820          SUB      r8,r8,#0x20
000296  f44f6a60          MOV      r10,#0xe00            ;355
00029a  f44f6580          MOV      r5,#0x400             ;364
00029e  eb0000c1          ADD      r0,r0,r1,LSL #3       ;346
0002a2  2a01              CMP      r2,#1                 ;339
0002a4  d002              BEQ      |L1.684|
;;;379    	data[1]=LPC_RTC->MONTH;
;;;380    	data[2]=LPC_RTC->DOM;
;;;381    	data[3]=0;
;;;382    	lc640_write_long_ptr(lc640_adr+8,data);
;;;383    
;;;384    	data[0]=LPC_RTC->HOUR;
;;;385    	data[1]=LPC_RTC->MIN;
;;;386    	data[2]=LPC_RTC->SEC;
;;;387    	data[3]=0;
;;;388    	lc640_write_long_ptr(lc640_adr+12,data);
;;;389    	
;;;390    	data[0]='A';
;;;391    	data[1]='A';
;;;392    	data[2]='A';
;;;393    	data[3]='A';
;;;394    	lc640_write_long_ptr(lc640_adr+16,data);
;;;395    	
;;;396    	data[0]='A';
;;;397    	data[1]='A';
;;;398    	data[2]='A';
;;;399    	data[3]='A';
;;;400    	lc640_write_long_ptr(lc640_adr+20,data);
;;;401    	
;;;402    	data[0]='A';
;;;403    	data[1]='A';
;;;404    	data[2]='A';
;;;405    	data[3]='A';
;;;406    	lc640_write_long_ptr(lc640_adr+24,data);
;;;407    	
;;;408    	data[0]='A';
;;;409    	data[1]='A';
;;;410    	data[2]='A';
;;;411    	data[3]='A';
;;;412    	lc640_write_long_ptr(lc640_adr+28,data);		
;;;413    
;;;414    
;;;415    	if(dev==0)
;;;416    		{
;;;417    		if(v==0)
;;;418    		snmp_trap_send("BPS #1 Alarm, overheat",4,1,0);
;;;419    		else if(v==1)
;;;420    		snmp_trap_send("BPS #1 Alarm, voltage is up",4,1,1);
;;;421    		else if(v==2)
;;;422    		snmp_trap_send("BPS #1 Alarm, voltage is down",4,1,2);
;;;423    		else if(v==3)
;;;424    		snmp_trap_send("BPS #1 Alarm, connect is lost",4,1,3);
;;;425    		}
;;;426    	else if(dev==1)
;;;427    		{
;;;428    		if(v==0)
;;;429    		snmp_trap_send("BPS #2 Alarm, overheat",4,2,0);
;;;430    		else if(v==1)
;;;431    		snmp_trap_send("BPS #2 Alarm, voltage is up",4,2,1);
;;;432    		else if(v==2)
;;;433    		snmp_trap_send("BPS #2 Alarm, voltage is down",4,2,2);
;;;434    		else if(v==3)
;;;435    		snmp_trap_send("BPS #2 Alarm, connect is lost",4,2,3);
;;;436    		} 
;;;437    	else if(dev==2)
;;;438    		{
;;;439    		if(v==0)
;;;440    		snmp_trap_send("BPS #3 Alarm, overheat",4,3,0);
;;;441    		else if(v==1)
;;;442    		snmp_trap_send("BPS #3 Alarm, voltage is up",4,3,1);
;;;443    		else if(v==2)
;;;444    		snmp_trap_send("BPS #3 Alarm, voltage is down",4,3,2);
;;;445    		else if(v==3)
;;;446    		snmp_trap_send("BPS #3 Alarm, connect is lost",4,3,3);
;;;447    		} 	
;;;448    			
;;;449    	}
;;;450    
;;;451    else if(in==0)
0002a6  2a00              CMP      r2,#0
0002a8  d07e              BEQ      |L1.936|
0002aa  e1d4              B        |L1.1622|
                  |L1.684|
0002ac  b134              CBZ      r4,|L1.700|
0002ae  2c01              CMP      r4,#1                 ;347
0002b0  d009              BEQ      |L1.710|
0002b2  2c02              CMP      r4,#2                 ;348
0002b4  d00c              BEQ      |L1.720|
0002b6  2c03              CMP      r4,#3                 ;349
0002b8  d00f              BEQ      |L1.730|
0002ba  e012              B        |L1.738|
                  |L1.700|
0002bc  7841              LDRB     r1,[r0,#1]            ;346
0002be  f0410101          ORR      r1,r1,#1              ;346
0002c2  7041              STRB     r1,[r0,#1]            ;346
0002c4  e00d              B        |L1.738|
                  |L1.710|
0002c6  7841              LDRB     r1,[r0,#1]            ;347
0002c8  f0410102          ORR      r1,r1,#2              ;347
0002cc  7041              STRB     r1,[r0,#1]            ;347
0002ce  e008              B        |L1.738|
                  |L1.720|
0002d0  7841              LDRB     r1,[r0,#1]            ;348
0002d2  f0410104          ORR      r1,r1,#4              ;348
0002d6  7041              STRB     r1,[r0,#1]            ;348
0002d8  e003              B        |L1.738|
                  |L1.730|
0002da  7841              LDRB     r1,[r0,#1]            ;349
0002dc  f0410108          ORR      r1,r1,#8              ;349
0002e0  7041              STRB     r1,[r0,#1]            ;349
                  |L1.738|
0002e2  f8804057          STRB     r4,[r0,#0x57]         ;351
0002e6  4650              MOV      r0,r10                ;355
0002e8  f7fffffe          BL       lc640_read_int
0002ec  f1000001          ADD      r0,r0,#1              ;356
0002f0  fa1ffb80          UXTH     r11,r0                ;356
0002f4  f1bb0f3f          CMP      r11,#0x3f             ;357
0002f8  d901              BLS      |L1.766|
0002fa  f04f0b00          MOV      r11,#0                ;357
                  |L1.766|
0002fe  fa0ff18b          SXTH     r1,r11                ;358
000302  4650              MOV      r0,r10                ;358
000304  f7fffffe          BL       lc640_write_int
000308  f6406002          MOV      r0,#0xe02             ;360
00030c  f7fffffe          BL       lc640_read_int
000310  b280              UXTH     r0,r0                 ;360
000312  283f              CMP      r0,#0x3f              ;361
000314  d000              BEQ      |L1.792|
000316  4658              MOV      r0,r11                ;361
                  |L1.792|
000318  b201              SXTH     r1,r0                 ;362
00031a  f6406002          MOV      r0,#0xe02             ;362
00031e  f7fffffe          BL       lc640_write_int
000322  4650              MOV      r0,r10                ;364
000324  f7fffffe          BL       lc640_read_int
000328  eb051040          ADD      r0,r5,r0,LSL #5       ;364
00032c  b285              UXTH     r5,r0                 ;364
00032e  f04f0053          MOV      r0,#0x53              ;366
000332  f88d0000          STRB     r0,[sp,#0]            ;366
000336  f88d6001          STRB     r6,[sp,#1]            ;367
00033a  f88d7002          STRB     r7,[sp,#2]            ;368
00033e  f88d9003          STRB     r9,[sp,#3]            ;369
000342  4669              MOV      r1,sp                 ;370
000344  4628              MOV      r0,r5                 ;370
000346  f7fffffe          BL       lc640_write_long_ptr
00034a  f8cd9000          STR      r9,[sp,#0]            ;375
00034e  4669              MOV      r1,sp                 ;376
000350  1d28              ADDS     r0,r5,#4              ;376
000352  f7fffffe          BL       lc640_write_long_ptr
000356  f8b8003c          LDRH     r0,[r8,#0x3c]         ;378
00035a  f88d0000          STRB     r0,[sp,#0]            ;378
00035e  f8980038          LDRB     r0,[r8,#0x38]         ;379
000362  f88d0001          STRB     r0,[sp,#1]            ;379
000366  f898002c          LDRB     r0,[r8,#0x2c]         ;380
00036a  f88d0002          STRB     r0,[sp,#2]            ;380
00036e  f88d9003          STRB     r9,[sp,#3]            ;381
000372  4669              MOV      r1,sp                 ;382
000374  f1050008          ADD      r0,r5,#8              ;382
000378  f7fffffe          BL       lc640_write_long_ptr
00037c  f8980028          LDRB     r0,[r8,#0x28]         ;384
000380  f88d0000          STRB     r0,[sp,#0]            ;384
000384  f8980024          LDRB     r0,[r8,#0x24]         ;385
000388  f88d0001          STRB     r0,[sp,#1]            ;385
00038c  f8980020          LDRB     r0,[r8,#0x20]         ;386
000390  f88d0002          STRB     r0,[sp,#2]            ;386
000394  f88d9003          STRB     r9,[sp,#3]            ;387
000398  4669              MOV      r1,sp                 ;388
00039a  f105000c          ADD      r0,r5,#0xc            ;388
00039e  f7fffffe          BL       lc640_write_long_ptr
0003a2  f04f0741          MOV      r7,#0x41              ;390
0003a6  e000              B        |L1.938|
                  |L1.936|
0003a8  e0b5              B        |L1.1302|
                  |L1.938|
0003aa  f88d7000          STRB     r7,[sp,#0]            ;390
0003ae  f88d7001          STRB     r7,[sp,#1]            ;391
0003b2  f88d7002          STRB     r7,[sp,#2]            ;392
0003b6  f88d7003          STRB     r7,[sp,#3]            ;393
0003ba  4669              MOV      r1,sp                 ;394
0003bc  f1050010          ADD      r0,r5,#0x10           ;394
0003c0  f7fffffe          BL       lc640_write_long_ptr
0003c4  f88d7000          STRB     r7,[sp,#0]            ;396
0003c8  f88d7001          STRB     r7,[sp,#1]            ;397
0003cc  f88d7002          STRB     r7,[sp,#2]            ;398
0003d0  f88d7003          STRB     r7,[sp,#3]            ;399
0003d4  4669              MOV      r1,sp                 ;400
0003d6  f1050014          ADD      r0,r5,#0x14           ;400
0003da  f7fffffe          BL       lc640_write_long_ptr
0003de  f88d7000          STRB     r7,[sp,#0]            ;402
0003e2  f88d7001          STRB     r7,[sp,#1]            ;403
0003e6  f88d7002          STRB     r7,[sp,#2]            ;404
0003ea  f88d7003          STRB     r7,[sp,#3]            ;405
0003ee  4669              MOV      r1,sp                 ;406
0003f0  f1050018          ADD      r0,r5,#0x18           ;406
0003f4  f7fffffe          BL       lc640_write_long_ptr
0003f8  f88d7000          STRB     r7,[sp,#0]            ;408
0003fc  e00e              B        |L1.1052|
0003fe  0000              DCW      0x0000
                  |L1.1024|
                          DCD      net_av
                  |L1.1028|
                          DCD      ||.data||
                  |L1.1032|
                          DCD      bps
                  |L1.1036|
                          DCD      uout_av
                  |L1.1040|
                          DCD      AV_OFF_AVT
                  |L1.1044|
                          DCD      0x40024020
                  |L1.1048|
                          DCD      0x400fc000
                  |L1.1052|
00041c  f88d7001          STRB     r7,[sp,#1]            ;409
000420  f88d7002          STRB     r7,[sp,#2]            ;410
000424  f88d7003          STRB     r7,[sp,#3]            ;411
000428  4669              MOV      r1,sp                 ;412
00042a  f105001c          ADD      r0,r5,#0x1c           ;412
00042e  f7fffffe          BL       lc640_write_long_ptr
000432  b126              CBZ      r6,|L1.1086|
000434  2e01              CMP      r6,#1                 ;426
000436  d026              BEQ      |L1.1158|
000438  2e02              CMP      r6,#2                 ;437
00043a  d048              BEQ      |L1.1230|
00043c  e10b              B        |L1.1622|
                  |L1.1086|
00043e  b134              CBZ      r4,|L1.1102|
000440  2c01              CMP      r4,#1                 ;419
000442  d00b              BEQ      |L1.1116|
000444  2c02              CMP      r4,#2                 ;421
000446  d010              BEQ      |L1.1130|
000448  2c03              CMP      r4,#3                 ;423
00044a  d015              BEQ      |L1.1144|
00044c  e103              B        |L1.1622|
                  |L1.1102|
00044e  2300              MOVS     r3,#0                 ;418
000450  2201              MOVS     r2,#1                 ;418
000452  2104              MOVS     r1,#4                 ;418
000454  a0de              ADR      r0,|L1.2000|
000456  f7fffffe          BL       snmp_trap_send
00045a  e0fc              B        |L1.1622|
                  |L1.1116|
00045c  2301              MOVS     r3,#1                 ;420
00045e  461a              MOV      r2,r3                 ;420
000460  2104              MOVS     r1,#4                 ;420
000462  a0e1              ADR      r0,|L1.2024|
000464  f7fffffe          BL       snmp_trap_send
000468  e0f5              B        |L1.1622|
                  |L1.1130|
00046a  2302              MOVS     r3,#2                 ;422
00046c  2201              MOVS     r2,#1                 ;422
00046e  2104              MOVS     r1,#4                 ;422
000470  a0e4              ADR      r0,|L1.2052|
000472  f7fffffe          BL       snmp_trap_send
000476  e0ee              B        |L1.1622|
                  |L1.1144|
000478  2303              MOVS     r3,#3                 ;424
00047a  2201              MOVS     r2,#1                 ;424
00047c  2104              MOVS     r1,#4                 ;424
00047e  a0e9              ADR      r0,|L1.2084|
000480  f7fffffe          BL       snmp_trap_send
000484  e0e7              B        |L1.1622|
                  |L1.1158|
000486  b134              CBZ      r4,|L1.1174|
000488  2c01              CMP      r4,#1                 ;430
00048a  d00b              BEQ      |L1.1188|
00048c  2c02              CMP      r4,#2                 ;432
00048e  d010              BEQ      |L1.1202|
000490  2c03              CMP      r4,#3                 ;434
000492  d015              BEQ      |L1.1216|
000494  e0df              B        |L1.1622|
                  |L1.1174|
000496  2300              MOVS     r3,#0                 ;429
000498  2202              MOVS     r2,#2                 ;429
00049a  2104              MOVS     r1,#4                 ;429
00049c  a0e9              ADR      r0,|L1.2116|
00049e  f7fffffe          BL       snmp_trap_send
0004a2  e0d8              B        |L1.1622|
                  |L1.1188|
0004a4  2301              MOVS     r3,#1                 ;431
0004a6  2202              MOVS     r2,#2                 ;431
0004a8  2104              MOVS     r1,#4                 ;431
0004aa  a0ec              ADR      r0,|L1.2140|
0004ac  f7fffffe          BL       snmp_trap_send
0004b0  e0d1              B        |L1.1622|
                  |L1.1202|
0004b2  2302              MOVS     r3,#2                 ;433
0004b4  461a              MOV      r2,r3                 ;433
0004b6  2104              MOVS     r1,#4                 ;433
0004b8  a0ef              ADR      r0,|L1.2168|
0004ba  f7fffffe          BL       snmp_trap_send
0004be  e0ca              B        |L1.1622|
                  |L1.1216|
0004c0  2303              MOVS     r3,#3                 ;435
0004c2  2202              MOVS     r2,#2                 ;435
0004c4  2104              MOVS     r1,#4                 ;435
0004c6  a0f4              ADR      r0,|L1.2200|
0004c8  f7fffffe          BL       snmp_trap_send
0004cc  e0c3              B        |L1.1622|
                  |L1.1230|
0004ce  b134              CBZ      r4,|L1.1246|
0004d0  2c01              CMP      r4,#1                 ;441
0004d2  d00b              BEQ      |L1.1260|
0004d4  2c02              CMP      r4,#2                 ;443
0004d6  d010              BEQ      |L1.1274|
0004d8  2c03              CMP      r4,#3                 ;445
0004da  d015              BEQ      |L1.1288|
0004dc  e0bb              B        |L1.1622|
                  |L1.1246|
0004de  2300              MOVS     r3,#0                 ;440
0004e0  2203              MOVS     r2,#3                 ;440
0004e2  2104              MOVS     r1,#4                 ;440
0004e4  a0f4              ADR      r0,|L1.2232|
0004e6  f7fffffe          BL       snmp_trap_send
0004ea  e0b4              B        |L1.1622|
                  |L1.1260|
0004ec  2301              MOVS     r3,#1                 ;442
0004ee  2203              MOVS     r2,#3                 ;442
0004f0  2104              MOVS     r1,#4                 ;442
0004f2  a0f7              ADR      r0,|L1.2256|
0004f4  f7fffffe          BL       snmp_trap_send
0004f8  e0ad              B        |L1.1622|
                  |L1.1274|
0004fa  2302              MOVS     r3,#2                 ;444
0004fc  2203              MOVS     r2,#3                 ;444
0004fe  2104              MOVS     r1,#4                 ;444
000500  a0fa              ADR      r0,|L1.2284|
000502  f7fffffe          BL       snmp_trap_send
000506  e0a6              B        |L1.1622|
                  |L1.1288|
000508  2303              MOVS     r3,#3                 ;446
00050a  461a              MOV      r2,r3                 ;446
00050c  2104              MOVS     r1,#4                 ;446
00050e  a0ff              ADR      r0,|L1.2316|
000510  f7fffffe          BL       snmp_trap_send
000514  e09f              B        |L1.1622|
                  |L1.1302|
;;;452    	{      
;;;453    //	av_bps[bps]=0;
;;;454    
;;;455    	//SET_REG(avar_stat,0,3+bps,1);
;;;456    	//if(AV_OFF_AVT) SET_REG(avar_ind_stat,0,3+bps,1);
;;;457    
;;;458         if(v==0) bps[dev]._av&=(~(1<<0));
000516  b134              CBZ      r4,|L1.1318|
;;;459         else if(v==1) bps[dev]._av&=(~(1<<1));
000518  2c01              CMP      r4,#1
00051a  d009              BEQ      |L1.1328|
;;;460    	else if(v==2) bps[dev]._av&=(~(1<<2));
00051c  2c02              CMP      r4,#2
00051e  d00c              BEQ      |L1.1338|
;;;461    	else if(v==3) bps[dev]._av&=(~(1<<3));
000520  2c03              CMP      r4,#3
000522  d00f              BEQ      |L1.1348|
000524  e012              B        |L1.1356|
                  |L1.1318|
000526  7841              LDRB     r1,[r0,#1]            ;458
000528  f0210101          BIC      r1,r1,#1              ;458
00052c  7041              STRB     r1,[r0,#1]            ;458
00052e  e00d              B        |L1.1356|
                  |L1.1328|
000530  7841              LDRB     r1,[r0,#1]            ;459
000532  f0210102          BIC      r1,r1,#2              ;459
000536  7041              STRB     r1,[r0,#1]            ;459
000538  e008              B        |L1.1356|
                  |L1.1338|
00053a  7841              LDRB     r1,[r0,#1]            ;460
00053c  f0210104          BIC      r1,r1,#4              ;460
000540  7041              STRB     r1,[r0,#1]            ;460
000542  e003              B        |L1.1356|
                  |L1.1348|
000544  7841              LDRB     r1,[r0,#1]
000546  f0210108          BIC      r1,r1,#8
00054a  7041              STRB     r1,[r0,#1]
                  |L1.1356|
;;;462         
;;;463    //	if((bps[dev]._av&0x0f==0))
;;;464    //	     {
;;;465    		//SET_REG(avar_stat,0,3+bps,1);
;;;466    		//if(AV_OFF_AVT) SET_REG(avar_ind_stat,0,3+bps,1);
;;;467    //	     }
;;;468     
;;;469    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
00054c  4650              MOV      r0,r10
00054e  f7fffffe          BL       lc640_read_int
000552  fa1ffb80          UXTH     r11,r0
;;;470    	event_ptr_find=event_ptr;
000556  465c              MOV      r4,r11
                  |L1.1368|
;;;471    	
;;;472    avar_src_hndl_lbl1: 
;;;473    
;;;474    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000558  eb051044          ADD      r0,r5,r4,LSL #5
00055c  fa1ffa80          UXTH     r10,r0
;;;475    
;;;476         lc640_read_long_ptr(lc640_adr,data);
000560  4669              MOV      r1,sp
000562  4650              MOV      r0,r10
000564  f7fffffe          BL       lc640_read_long_ptr
;;;477         
;;;478         if(!((data[0]=='S')&&(data[1]==dev)&&(data[2]==avar_simbol)))
000568  f89d0000          LDRB     r0,[sp,#0]
00056c  2853              CMP      r0,#0x53
00056e  d107              BNE      |L1.1408|
000570  f89d0001          LDRB     r0,[sp,#1]
000574  42b0              CMP      r0,r6
000576  d103              BNE      |L1.1408|
000578  f89d0002          LDRB     r0,[sp,#2]
00057c  42b8              CMP      r0,r7
00057e  d009              BEQ      |L1.1428|
                  |L1.1408|
;;;479         	{        
;;;480         	if(event_ptr_find)event_ptr_find--;
000580  b11c              CBZ      r4,|L1.1418|
000582  f1a40401          SUB      r4,r4,#1
000586  b2a4              UXTH     r4,r4
000588  e001              B        |L1.1422|
                  |L1.1418|
;;;481         	else event_ptr_find=63;
00058a  f04f043f          MOV      r4,#0x3f
                  |L1.1422|
;;;482         	if(event_ptr_find==event_ptr)goto avar_src_hndl_end;
00058e  455c              CMP      r4,r11
000590  d1e2              BNE      |L1.1368|
000592  e060              B        |L1.1622|
                  |L1.1428|
;;;483         	else goto avar_src_hndl_lbl1;
;;;484         	}
;;;485         else 
;;;486         	{
;;;487         	lc640_read_long_ptr(lc640_adr+16,data);
000594  4669              MOV      r1,sp
000596  f10a0010          ADD      r0,r10,#0x10
00059a  f7fffffe          BL       lc640_read_long_ptr
;;;488         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
00059e  f89d0000          LDRB     r0,[sp,#0]
0005a2  2841              CMP      r0,#0x41
0005a4  d10b              BNE      |L1.1470|
0005a6  f89d0001          LDRB     r0,[sp,#1]
0005aa  2841              CMP      r0,#0x41
0005ac  d107              BNE      |L1.1470|
0005ae  f89d0002          LDRB     r0,[sp,#2]
0005b2  2841              CMP      r0,#0x41
0005b4  d103              BNE      |L1.1470|
0005b6  f89d0003          LDRB     r0,[sp,#3]
0005ba  2841              CMP      r0,#0x41
0005bc  d009              BEQ      |L1.1490|
                  |L1.1470|
;;;489         		{        
;;;490         		if(event_ptr_find)event_ptr_find--;
0005be  b11c              CBZ      r4,|L1.1480|
0005c0  f1a40401          SUB      r4,r4,#1
0005c4  b2a4              UXTH     r4,r4
0005c6  e001              B        |L1.1484|
                  |L1.1480|
;;;491             		else event_ptr_find=63;
0005c8  f04f043f          MOV      r4,#0x3f
                  |L1.1484|
;;;492             		if(event_ptr_find==event_ptr)goto avar_src_hndl_end;
0005cc  455c              CMP      r4,r11
0005ce  d1c3              BNE      |L1.1368|
0005d0  e041              B        |L1.1622|
                  |L1.1490|
;;;493         		else goto avar_src_hndl_lbl1;
;;;494         		}
;;;495    
;;;496         	}	
;;;497    
;;;498    
;;;499    	
;;;500    	data[0]=LPC_RTC->YEAR;
0005d2  f8b8003c          LDRH     r0,[r8,#0x3c]
0005d6  f88d0000          STRB     r0,[sp,#0]
;;;501    	data[1]=LPC_RTC->MONTH;
0005da  f8980038          LDRB     r0,[r8,#0x38]
0005de  f88d0001          STRB     r0,[sp,#1]
;;;502    	data[2]=LPC_RTC->DOM;
0005e2  f898002c          LDRB     r0,[r8,#0x2c]
0005e6  f88d0002          STRB     r0,[sp,#2]
;;;503    	data[3]=0;
0005ea  f88d9003          STRB     r9,[sp,#3]
;;;504    	lc640_write_long_ptr(lc640_adr+16,data);
0005ee  4669              MOV      r1,sp
0005f0  f10a0010          ADD      r0,r10,#0x10
0005f4  f7fffffe          BL       lc640_write_long_ptr
;;;505    
;;;506    	data[0]=LPC_RTC->HOUR;
0005f8  f8980028          LDRB     r0,[r8,#0x28]
0005fc  f88d0000          STRB     r0,[sp,#0]
;;;507    	data[1]=LPC_RTC->MIN;
000600  f8980024          LDRB     r0,[r8,#0x24]
000604  f88d0001          STRB     r0,[sp,#1]
;;;508    	data[2]=LPC_RTC->SEC;
000608  f8980020          LDRB     r0,[r8,#0x20]
00060c  f88d0002          STRB     r0,[sp,#2]
;;;509    	data[3]=0;
000610  f88d9003          STRB     r9,[sp,#3]
;;;510    	lc640_write_long_ptr(lc640_adr+20,data);
000614  4669              MOV      r1,sp
000616  f10a0014          ADD      r0,r10,#0x14
00061a  f7fffffe          BL       lc640_write_long_ptr
;;;511    	
;;;512    	data[0]='B';
00061e  f04f0442          MOV      r4,#0x42
000622  f88d4000          STRB     r4,[sp,#0]
;;;513    	data[1]='B';
000626  f88d4001          STRB     r4,[sp,#1]
;;;514    	data[2]='B';
00062a  f88d4002          STRB     r4,[sp,#2]
;;;515    	data[3]='B';
00062e  f88d4003          STRB     r4,[sp,#3]
;;;516    	lc640_write_long_ptr(lc640_adr+24,data);
000632  4669              MOV      r1,sp
000634  f10a0018          ADD      r0,r10,#0x18
000638  f7fffffe          BL       lc640_write_long_ptr
;;;517    	
;;;518    	data[0]='B';
00063c  f88d4000          STRB     r4,[sp,#0]
;;;519    	data[1]='B';
000640  f88d4001          STRB     r4,[sp,#1]
;;;520    	data[2]='B';
000644  f88d4002          STRB     r4,[sp,#2]
;;;521    	data[3]='B';
000648  f88d4003          STRB     r4,[sp,#3]
;;;522    	lc640_write_long_ptr(lc640_adr+28,data);
00064c  4669              MOV      r1,sp
00064e  f10a001c          ADD      r0,r10,#0x1c
000652  f7fffffe          BL       lc640_write_long_ptr
                  |L1.1622|
;;;523    	
;;;524    	}
;;;525    	
;;;526    avar_src_hndl_end:
;;;527    __nop();		
000656  bf00              NOP      
;;;528    }
000658  e8bd8ff8          POP      {r3-r11,pc}
;;;529    
                          ENDP

                  avar_overload_hndl PROC
;;;736    //-----------------------------------------------
;;;737    void avar_overload_hndl(char in)
00065c  e92d43f8          PUSH     {r3-r9,lr}
;;;738    {
;;;739    
;;;740    char data[4];
;;;741    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;742    
;;;743    if(in==1)
;;;744    	{
;;;745    	if(overloadAvar==1)return;
000660  4ab3              LDR      r2,|L1.2352|
;;;746        
;;;747    	overloadAvar=1;
;;;748    
;;;749    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;750    	event_ptr++;	
;;;751    	if(event_ptr>63)event_ptr=0;	
;;;752    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;753    	
;;;754        event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;755    	if(event_cnt!=63)event_cnt=event_ptr;
;;;756    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;757    	
;;;758    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;759    	
;;;760    	data[0]='O';
;;;761    	data[1]='V';
;;;762    	data[2]='L';
;;;763    	data[3]=0;
;;;764    	lc640_write_long_ptr(lc640_adr,data);
;;;765    
;;;766    	data[0]=0;
;;;767    	data[1]=0;
;;;768    	data[2]=0;
;;;769    	data[3]=0;
;;;770    	lc640_write_long_ptr(lc640_adr+4,data);
;;;771    
;;;772    	data[0]=LPC_RTC->YEAR;
000662  4fb2              LDR      r7,|L1.2348|
000664  f44f6560          MOV      r5,#0xe00             ;749
000668  7811              LDRB     r1,[r2,#0]            ;745
00066a  f04f0800          MOV      r8,#0                 ;751
00066e  f44f6980          MOV      r9,#0x400             ;758
000672  2801              CMP      r0,#1                 ;743
000674  d016              BEQ      |L1.1700|
;;;773    	data[1]=LPC_RTC->MONTH;
;;;774    	data[2]=LPC_RTC->DOM;
;;;775    	data[3]=0;
;;;776    	lc640_write_long_ptr(lc640_adr+8,data);
;;;777    
;;;778    	data[0]=LPC_RTC->HOUR;
;;;779    	data[1]=LPC_RTC->MIN;
;;;780    	data[2]=LPC_RTC->SEC;
;;;781    	data[3]=0;
;;;782    	lc640_write_long_ptr(lc640_adr+12,data);
;;;783    	
;;;784    	data[0]='A';
;;;785    	data[1]='A';
;;;786    	data[2]='A';
;;;787    	data[3]='A';
;;;788    	lc640_write_long_ptr(lc640_adr+16,data);
;;;789    	
;;;790    	data[0]='A';
;;;791    	data[1]='A';
;;;792    	data[2]='A';
;;;793    	data[3]='A';
;;;794    	lc640_write_long_ptr(lc640_adr+20,data);
;;;795    	
;;;796    	data[0]='A';
;;;797    	data[1]='A';
;;;798    	data[2]='A';
;;;799    	data[3]='A';
;;;800    	lc640_write_long_ptr(lc640_adr+24,data);
;;;801    	
;;;802    	data[0]='A';
;;;803    	data[1]='A';
;;;804    	data[2]='A';
;;;805    	data[3]='A';
;;;806    	lc640_write_long_ptr(lc640_adr+28,data);				
;;;807    
;;;808    	snmp_trap_send("System overload",5,1,2);
;;;809    
;;;810    	
;;;811    	}
;;;812    
;;;813    else if(in==0)
000676  2800              CMP      r0,#0
000678  d17d              BNE      |L1.1910|
;;;814    	{
;;;815    	if(overloadAvar==0)return;
00067a  2900              CMP      r1,#0
00067c  d07b              BEQ      |L1.1910|
;;;816    
;;;817    	overloadAvar=0;
00067e  f8828000          STRB     r8,[r2,#0]
;;;818    
;;;819        event_ptr=lc640_read_int(PTR_EVENT_LOG);
000682  4628              MOV      r0,r5
000684  f7fffffe          BL       lc640_read_int
000688  b286              UXTH     r6,r0
;;;820    	event_ptr_find=event_ptr;
00068a  4634              MOV      r4,r6
                  |L1.1676|
;;;821    	
;;;822    avar_overload_hndl_lbl1: 
;;;823    
;;;824    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
00068c  eb091044          ADD      r0,r9,r4,LSL #5
000690  b285              UXTH     r5,r0
;;;825    
;;;826    	lc640_read_long_ptr(lc640_adr,data);
000692  4669              MOV      r1,sp
000694  4628              MOV      r0,r5
000696  f7fffffe          BL       lc640_read_long_ptr
;;;827         
;;;828        if(!((data[0]=='O')&&(data[1]=='V')&&(data[2]=='L')))
00069a  f89d0000          LDRB     r0,[sp,#0]
00069e  284f              CMP      r0,#0x4f
0006a0  d16a              BNE      |L1.1912|
0006a2  e153              B        |L1.2380|
                  |L1.1700|
0006a4  2901              CMP      r1,#1                 ;745
0006a6  d066              BEQ      |L1.1910|
0006a8  f04f0001          MOV      r0,#1                 ;747
0006ac  7010              STRB     r0,[r2,#0]            ;747
0006ae  4628              MOV      r0,r5                 ;749
0006b0  f7fffffe          BL       lc640_read_int
0006b4  f1000001          ADD      r0,r0,#1              ;750
0006b8  b284              UXTH     r4,r0                 ;750
0006ba  2c3f              CMP      r4,#0x3f              ;751
0006bc  d901              BLS      |L1.1730|
0006be  f04f0400          MOV      r4,#0                 ;751
                  |L1.1730|
0006c2  b221              SXTH     r1,r4                 ;752
0006c4  4628              MOV      r0,r5                 ;752
0006c6  f7fffffe          BL       lc640_write_int
0006ca  f6406602          MOV      r6,#0xe02             ;754
0006ce  4630              MOV      r0,r6                 ;754
0006d0  f7fffffe          BL       lc640_read_int
0006d4  b281              UXTH     r1,r0                 ;754
0006d6  293f              CMP      r1,#0x3f              ;755
0006d8  d000              BEQ      |L1.1756|
0006da  4621              MOV      r1,r4                 ;755
                  |L1.1756|
0006dc  b209              SXTH     r1,r1                 ;756
0006de  4630              MOV      r0,r6                 ;756
0006e0  f7fffffe          BL       lc640_write_int
0006e4  4628              MOV      r0,r5                 ;758
0006e6  f7fffffe          BL       lc640_read_int
0006ea  eb091040          ADD      r0,r9,r0,LSL #5       ;758
0006ee  b284              UXTH     r4,r0                 ;758
0006f0  f04f004f          MOV      r0,#0x4f              ;760
0006f4  f88d0000          STRB     r0,[sp,#0]            ;760
0006f8  f04f0056          MOV      r0,#0x56              ;761
0006fc  f88d0001          STRB     r0,[sp,#1]            ;761
000700  f04f004c          MOV      r0,#0x4c              ;762
000704  f88d0002          STRB     r0,[sp,#2]            ;762
000708  f88d8003          STRB     r8,[sp,#3]            ;763
00070c  4669              MOV      r1,sp                 ;764
00070e  4620              MOV      r0,r4                 ;764
000710  f7fffffe          BL       lc640_write_long_ptr
000714  f8cd8000          STR      r8,[sp,#0]            ;769
000718  4669              MOV      r1,sp                 ;770
00071a  1d20              ADDS     r0,r4,#4              ;770
00071c  f7fffffe          BL       lc640_write_long_ptr
000720  f1070720          ADD      r7,r7,#0x20           ;772
000724  8bb8              LDRH     r0,[r7,#0x1c]         ;772
000726  f88d0000          STRB     r0,[sp,#0]            ;772
00072a  7e38              LDRB     r0,[r7,#0x18]         ;773
00072c  f88d0001          STRB     r0,[sp,#1]            ;773
000730  7b38              LDRB     r0,[r7,#0xc]          ;774
000732  f88d0002          STRB     r0,[sp,#2]            ;774
000736  f88d8003          STRB     r8,[sp,#3]            ;775
00073a  4669              MOV      r1,sp                 ;776
00073c  f1040008          ADD      r0,r4,#8              ;776
000740  f7fffffe          BL       lc640_write_long_ptr
000744  7a38              LDRB     r0,[r7,#8]            ;778
000746  f88d0000          STRB     r0,[sp,#0]            ;778
00074a  7938              LDRB     r0,[r7,#4]            ;779
00074c  f88d0001          STRB     r0,[sp,#1]            ;779
000750  7838              LDRB     r0,[r7,#0]            ;780
000752  f88d0002          STRB     r0,[sp,#2]            ;780
000756  f88d8003          STRB     r8,[sp,#3]            ;781
00075a  4669              MOV      r1,sp                 ;782
00075c  f104000c          ADD      r0,r4,#0xc            ;782
000760  f7fffffe          BL       lc640_write_long_ptr
000764  f04f0541          MOV      r5,#0x41              ;784
000768  f88d5000          STRB     r5,[sp,#0]            ;784
00076c  f88d5001          STRB     r5,[sp,#1]            ;785
000770  f88d5002          STRB     r5,[sp,#2]            ;786
000774  e001              B        |L1.1914|
                  |L1.1910|
000776  e0e7              B        |L1.2376|
                  |L1.1912|
000778  e0f0              B        |L1.2396|
                  |L1.1914|
00077a  f88d5003          STRB     r5,[sp,#3]            ;787
00077e  4669              MOV      r1,sp                 ;788
000780  f1040010          ADD      r0,r4,#0x10           ;788
000784  f7fffffe          BL       lc640_write_long_ptr
000788  f88d5000          STRB     r5,[sp,#0]            ;790
00078c  f88d5001          STRB     r5,[sp,#1]            ;791
000790  f88d5002          STRB     r5,[sp,#2]            ;792
000794  f88d5003          STRB     r5,[sp,#3]            ;793
000798  4669              MOV      r1,sp                 ;794
00079a  f1040014          ADD      r0,r4,#0x14           ;794
00079e  f7fffffe          BL       lc640_write_long_ptr
0007a2  f88d5000          STRB     r5,[sp,#0]            ;796
0007a6  f88d5001          STRB     r5,[sp,#1]            ;797
0007aa  f88d5002          STRB     r5,[sp,#2]            ;798
0007ae  f88d5003          STRB     r5,[sp,#3]            ;799
0007b2  4669              MOV      r1,sp                 ;800
0007b4  f1040018          ADD      r0,r4,#0x18           ;800
0007b8  f7fffffe          BL       lc640_write_long_ptr
0007bc  f88d5000          STRB     r5,[sp,#0]            ;802
0007c0  f88d5001          STRB     r5,[sp,#1]            ;803
0007c4  f88d5002          STRB     r5,[sp,#2]            ;804
0007c8  f88d5003          STRB     r5,[sp,#3]            ;805
0007cc  4669              MOV      r1,sp                 ;806
0007ce  e0b1              B        |L1.2356|
                  |L1.2000|
0007d0  42505320          DCB      "BPS #1 Alarm, overheat",0
0007d4  23312041
0007d8  6c61726d
0007dc  2c206f76
0007e0  65726865
0007e4  617400  
0007e7  00                DCB      0
                  |L1.2024|
0007e8  42505320          DCB      "BPS #1 Alarm, voltage is up",0
0007ec  23312041
0007f0  6c61726d
0007f4  2c20766f
0007f8  6c746167
0007fc  65206973
000800  20757000
                  |L1.2052|
000804  42505320          DCB      "BPS #1 Alarm, voltage is down",0
000808  23312041
00080c  6c61726d
000810  2c20766f
000814  6c746167
000818  65206973
00081c  20646f77
000820  6e00    
000822  00                DCB      0
000823  00                DCB      0
                  |L1.2084|
000824  42505320          DCB      "BPS #1 Alarm, connect is lost",0
000828  23312041
00082c  6c61726d
000830  2c20636f
000834  6e6e6563
000838  74206973
00083c  206c6f73
000840  7400    
000842  00                DCB      0
000843  00                DCB      0
                  |L1.2116|
000844  42505320          DCB      "BPS #2 Alarm, overheat",0
000848  23322041
00084c  6c61726d
000850  2c206f76
000854  65726865
000858  617400  
00085b  00                DCB      0
                  |L1.2140|
00085c  42505320          DCB      "BPS #2 Alarm, voltage is up",0
000860  23322041
000864  6c61726d
000868  2c20766f
00086c  6c746167
000870  65206973
000874  20757000
                  |L1.2168|
000878  42505320          DCB      "BPS #2 Alarm, voltage is down",0
00087c  23322041
000880  6c61726d
000884  2c20766f
000888  6c746167
00088c  65206973
000890  20646f77
000894  6e00    
000896  00                DCB      0
000897  00                DCB      0
                  |L1.2200|
000898  42505320          DCB      "BPS #2 Alarm, connect is lost",0
00089c  23322041
0008a0  6c61726d
0008a4  2c20636f
0008a8  6e6e6563
0008ac  74206973
0008b0  206c6f73
0008b4  7400    
0008b6  00                DCB      0
0008b7  00                DCB      0
                  |L1.2232|
0008b8  42505320          DCB      "BPS #3 Alarm, overheat",0
0008bc  23332041
0008c0  6c61726d
0008c4  2c206f76
0008c8  65726865
0008cc  617400  
0008cf  00                DCB      0
                  |L1.2256|
0008d0  42505320          DCB      "BPS #3 Alarm, voltage is up",0
0008d4  23332041
0008d8  6c61726d
0008dc  2c20766f
0008e0  6c746167
0008e4  65206973
0008e8  20757000
                  |L1.2284|
0008ec  42505320          DCB      "BPS #3 Alarm, voltage is down",0
0008f0  23332041
0008f4  6c61726d
0008f8  2c20766f
0008fc  6c746167
000900  65206973
000904  20646f77
000908  6e00    
00090a  00                DCB      0
00090b  00                DCB      0
                  |L1.2316|
00090c  42505320          DCB      "BPS #3 Alarm, connect is lost",0
000910  23332041
000914  6c61726d
000918  2c20636f
00091c  6e6e6563
000920  74206973
000924  206c6f73
000928  7400    
00092a  00                DCB      0
00092b  00                DCB      0
                  |L1.2348|
                          DCD      0x40024000
                  |L1.2352|
                          DCD      overloadAvar
                  |L1.2356|
000934  f104001c          ADD      r0,r4,#0x1c           ;806
000938  f7fffffe          BL       lc640_write_long_ptr
00093c  2302              MOVS     r3,#2                 ;808
00093e  2201              MOVS     r2,#1                 ;808
000940  2105              MOVS     r1,#5                 ;808
000942  a0fa              ADR      r0,|L1.3372|
000944  f7fffffe          BL       snmp_trap_send
                  |L1.2376|
;;;829         	{        
;;;830         	if(event_ptr_find)event_ptr_find--;
;;;831         	else event_ptr_find=63;
;;;832         	if(event_ptr_find==event_ptr)return;
;;;833         	else goto avar_overload_hndl_lbl1;
;;;834         	}
;;;835         else 
;;;836         	{
;;;837         	lc640_read_long_ptr(lc640_adr+16,data);
;;;838         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;839         		{        
;;;840         		if(event_ptr_find)event_ptr_find--;
;;;841             	else event_ptr_find=63;
;;;842             	if(event_ptr_find==event_ptr)return;
;;;843         		else goto avar_overload_hndl_lbl1;
;;;844         		}
;;;845    
;;;846         	}
;;;847         		
;;;848    	data[0]=LPC_RTC->YEAR;
;;;849    	data[1]=LPC_RTC->MONTH;
;;;850    	data[2]=LPC_RTC->DOM;
;;;851    	data[3]=0;
;;;852    	lc640_write_long_ptr(lc640_adr+16,data);
;;;853    
;;;854    	data[0]=LPC_RTC->HOUR;
;;;855    	data[1]=LPC_RTC->MIN;
;;;856    	data[2]=LPC_RTC->SEC;
;;;857    	data[3]=0;
;;;858    	lc640_write_long_ptr(lc640_adr+20,data);
;;;859    	
;;;860    	data[0]='B';
;;;861    	data[1]='B';
;;;862    	data[2]='B';
;;;863    	data[3]='B';
;;;864    	lc640_write_long_ptr(lc640_adr+24,data);
;;;865    	
;;;866    	data[0]='B';
;;;867    	data[1]='B';
;;;868    	data[2]='B';
;;;869    	data[3]='B';
;;;870    	lc640_write_long_ptr(lc640_adr+28,data);
;;;871    	
;;;872    
;;;873    	
;;;874    	}
;;;875    	
;;;876    }
000948  e8bd83f8          POP      {r3-r9,pc}
                  |L1.2380|
00094c  f89d0001          LDRB     r0,[sp,#1]            ;828
000950  2856              CMP      r0,#0x56              ;828
000952  d103              BNE      |L1.2396|
000954  f89d0002          LDRB     r0,[sp,#2]            ;828
000958  284c              CMP      r0,#0x4c              ;828
00095a  d00a              BEQ      |L1.2418|
                  |L1.2396|
00095c  b11c              CBZ      r4,|L1.2406|
00095e  f1a40401          SUB      r4,r4,#1              ;830
000962  b2a4              UXTH     r4,r4                 ;830
000964  e001              B        |L1.2410|
                  |L1.2406|
000966  f04f043f          MOV      r4,#0x3f              ;831
                  |L1.2410|
00096a  42b4              CMP      r4,r6                 ;832
                  |L1.2412|
00096c  f47fae8e          BNE      |L1.1676|
000970  e7ea              B        |L1.2376|
                  |L1.2418|
000972  4669              MOV      r1,sp                 ;837
000974  f1050010          ADD      r0,r5,#0x10           ;837
000978  f7fffffe          BL       lc640_read_long_ptr
00097c  f89d0000          LDRB     r0,[sp,#0]            ;838
000980  2841              CMP      r0,#0x41              ;838
000982  d10b              BNE      |L1.2460|
000984  f89d0001          LDRB     r0,[sp,#1]            ;838
000988  2841              CMP      r0,#0x41              ;838
00098a  d107              BNE      |L1.2460|
00098c  f89d0002          LDRB     r0,[sp,#2]            ;838
000990  2841              CMP      r0,#0x41              ;838
000992  d103              BNE      |L1.2460|
000994  f89d0003          LDRB     r0,[sp,#3]            ;838
000998  2841              CMP      r0,#0x41              ;838
00099a  d009              BEQ      |L1.2480|
                  |L1.2460|
00099c  b11c              CBZ      r4,|L1.2470|
00099e  f1a40401          SUB      r4,r4,#1              ;840
0009a2  b2a4              UXTH     r4,r4                 ;840
0009a4  e001              B        |L1.2474|
                  |L1.2470|
0009a6  f04f043f          MOV      r4,#0x3f              ;841
                  |L1.2474|
0009aa  42b4              CMP      r4,r6                 ;842
0009ac  d1de              BNE      |L1.2412|
0009ae  e7cb              B        |L1.2376|
                  |L1.2480|
0009b0  f1070720          ADD      r7,r7,#0x20           ;848
0009b4  8bb8              LDRH     r0,[r7,#0x1c]         ;848
0009b6  f88d0000          STRB     r0,[sp,#0]            ;848
0009ba  7e38              LDRB     r0,[r7,#0x18]         ;849
0009bc  f88d0001          STRB     r0,[sp,#1]            ;849
0009c0  7b38              LDRB     r0,[r7,#0xc]          ;850
0009c2  f88d0002          STRB     r0,[sp,#2]            ;850
0009c6  f88d8003          STRB     r8,[sp,#3]            ;851
0009ca  4669              MOV      r1,sp                 ;852
0009cc  f1050010          ADD      r0,r5,#0x10           ;852
0009d0  f7fffffe          BL       lc640_write_long_ptr
0009d4  7a38              LDRB     r0,[r7,#8]            ;854
0009d6  f88d0000          STRB     r0,[sp,#0]            ;854
0009da  7938              LDRB     r0,[r7,#4]            ;855
0009dc  f88d0001          STRB     r0,[sp,#1]            ;855
0009e0  7838              LDRB     r0,[r7,#0]            ;856
0009e2  f88d0002          STRB     r0,[sp,#2]            ;856
0009e6  f88d8003          STRB     r8,[sp,#3]            ;857
0009ea  4669              MOV      r1,sp                 ;858
0009ec  f1050014          ADD      r0,r5,#0x14           ;858
0009f0  f7fffffe          BL       lc640_write_long_ptr
0009f4  f04f0442          MOV      r4,#0x42              ;860
0009f8  f88d4000          STRB     r4,[sp,#0]            ;860
0009fc  f88d4001          STRB     r4,[sp,#1]            ;861
000a00  f88d4002          STRB     r4,[sp,#2]            ;862
000a04  f88d4003          STRB     r4,[sp,#3]            ;863
000a08  4669              MOV      r1,sp                 ;864
000a0a  f1050018          ADD      r0,r5,#0x18           ;864
000a0e  f7fffffe          BL       lc640_write_long_ptr
000a12  f88d4000          STRB     r4,[sp,#0]            ;866
000a16  f88d4001          STRB     r4,[sp,#1]            ;867
000a1a  f88d4002          STRB     r4,[sp,#2]            ;868
000a1e  f88d4003          STRB     r4,[sp,#3]            ;869
000a22  4669              MOV      r1,sp                 ;870
000a24  f105001c          ADD      r0,r5,#0x1c           ;870
000a28  f7fffffe          BL       lc640_write_long_ptr
000a2c  e78c              B        |L1.2376|
;;;877    
                          ENDP

                  avar_u_out_hndl PROC
;;;878    //-----------------------------------------------
;;;879    void avar_u_out_hndl(char in,short volt)
000a2e  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;880    {
000a32  b081              SUB      sp,sp,#4
000a34  4605              MOV      r5,r0
;;;881    
;;;882    char data[4];
;;;883    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;884    if(uOutAvar==in)return;
000a36  49c1              LDR      r1,|L1.3388|
000a38  7808              LDRB     r0,[r1,#0]  ; uOutAvar
000a3a  42a8              CMP      r0,r5
000a3c  d07e              BEQ      |L1.2876|
;;;885    if((in==1)||(in==2))
;;;886    	{
;;;887    	if(uOutAvar==in)return;
;;;888        
;;;889    	uOutAvar=in;
;;;890    
;;;891    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;892    	event_ptr++;	
;;;893    	if(event_ptr>63)event_ptr=0;	
;;;894    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;895    	
;;;896        event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;897    	if(event_cnt!=63)event_cnt=event_ptr;
;;;898    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;899    	
;;;900    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;901    	
;;;902    	data[0]='V';
;;;903    	data[1]='O';
;;;904    	data[2]='U';
;;;905    	data[3]='T';
;;;906    	lc640_write_long_ptr(lc640_adr,data);
;;;907    
;;;908    	data[0]=*((char*)&volt);
000a3e  f89d6008          LDRB     r6,[sp,#8]
;;;909    	data[1]=*(((char*)&volt)+1);
000a42  f89d7009          LDRB     r7,[sp,#9]
;;;910    	data[2]=in;
;;;911    	data[3]=0;
;;;912    	lc640_write_long_ptr(lc640_adr+4,data);
;;;913    
;;;914    	data[0]=LPC_RTC->YEAR;
000a46  f8df82f8          LDR      r8,|L1.3392|
000a4a  f44f6460          MOV      r4,#0xe00             ;891
000a4e  f04f0900          MOV      r9,#0                 ;893
000a52  f44f6a80          MOV      r10,#0x400            ;900
000a56  2d01              CMP      r5,#1                 ;885
000a58  d019              BEQ      |L1.2702|
000a5a  2d02              CMP      r5,#2                 ;885
000a5c  d017              BEQ      |L1.2702|
;;;915    	data[1]=LPC_RTC->MONTH;
;;;916    	data[2]=LPC_RTC->DOM;
;;;917    	data[3]=0;
;;;918    	lc640_write_long_ptr(lc640_adr+8,data);
;;;919    
;;;920    	data[0]=LPC_RTC->HOUR;
;;;921    	data[1]=LPC_RTC->MIN;
;;;922    	data[2]=LPC_RTC->SEC;
;;;923    	data[3]=0;
;;;924    	lc640_write_long_ptr(lc640_adr+12,data);
;;;925    	
;;;926    	data[0]='A';
;;;927    	data[1]='A';
;;;928    	data[2]='A';
;;;929    	data[3]='A';
;;;930    	lc640_write_long_ptr(lc640_adr+16,data);
;;;931    	
;;;932    	data[0]='A';
;;;933    	data[1]='A';
;;;934    	data[2]='A';
;;;935    	data[3]='A';
;;;936    	lc640_write_long_ptr(lc640_adr+20,data);
;;;937    	
;;;938    	data[0]='A';
;;;939    	data[1]='A';
;;;940    	data[2]='A';
;;;941    	data[3]='A';
;;;942    	lc640_write_long_ptr(lc640_adr+24,data);
;;;943    	
;;;944    	data[0]='A';
;;;945    	data[1]='A';
;;;946    	data[2]='A';
;;;947    	data[3]='A';
;;;948    	lc640_write_long_ptr(lc640_adr+28,data);				
;;;949    
;;;950    	//snmp_trap_send("System overload",5,1,2);
;;;951    
;;;952    	
;;;953    	}
;;;954    
;;;955    else if(in==0)
000a5e  2d00              CMP      r5,#0
000a60  d16c              BNE      |L1.2876|
;;;956    	{
;;;957    	if(uOutAvar==0)return;
000a62  2800              CMP      r0,#0
000a64  d06a              BEQ      |L1.2876|
;;;958    
;;;959    	uOutAvar=0;
000a66  f8819000          STRB     r9,[r1,#0]
;;;960    
;;;961        event_ptr=lc640_read_int(PTR_EVENT_LOG);
000a6a  4620              MOV      r0,r4
000a6c  f7fffffe          BL       lc640_read_int
000a70  fa1ffb80          UXTH     r11,r0
;;;962    	event_ptr_find=event_ptr;
000a74  465c              MOV      r4,r11
                  |L1.2678|
;;;963    	
;;;964    avar_u_out_hndl_lbl1: 
;;;965    
;;;966    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000a76  eb0a1044          ADD      r0,r10,r4,LSL #5
000a7a  b285              UXTH     r5,r0
;;;967    
;;;968    	lc640_read_long_ptr(lc640_adr,data);
000a7c  4669              MOV      r1,sp
000a7e  4628              MOV      r0,r5
000a80  f7fffffe          BL       lc640_read_long_ptr
;;;969         
;;;970        if(!((data[0]=='V')&&(data[1]=='O')&&(data[2]=='U')&&(data[3]=='T')))
000a84  f89d0000          LDRB     r0,[sp,#0]
000a88  2856              CMP      r0,#0x56
000a8a  d17d              BNE      |L1.2952|
000a8c  e0a6              B        |L1.3036|
                  |L1.2702|
000a8e  700d              STRB     r5,[r1,#0]            ;889
000a90  4620              MOV      r0,r4                 ;891
000a92  f7fffffe          BL       lc640_read_int
000a96  f1000001          ADD      r0,r0,#1              ;892
000a9a  fa1ffb80          UXTH     r11,r0                ;892
000a9e  f1bb0f3f          CMP      r11,#0x3f             ;893
000aa2  d901              BLS      |L1.2728|
000aa4  f04f0b00          MOV      r11,#0                ;893
                  |L1.2728|
000aa8  fa0ff18b          SXTH     r1,r11                ;894
000aac  4620              MOV      r0,r4                 ;894
000aae  f7fffffe          BL       lc640_write_int
000ab2  f6406002          MOV      r0,#0xe02             ;896
000ab6  f7fffffe          BL       lc640_read_int
000aba  b280              UXTH     r0,r0                 ;896
000abc  283f              CMP      r0,#0x3f              ;897
000abe  d000              BEQ      |L1.2754|
000ac0  4658              MOV      r0,r11                ;897
                  |L1.2754|
000ac2  b201              SXTH     r1,r0                 ;898
000ac4  f6406002          MOV      r0,#0xe02             ;898
000ac8  f7fffffe          BL       lc640_write_int
000acc  4620              MOV      r0,r4                 ;900
000ace  f7fffffe          BL       lc640_read_int
000ad2  eb0a1040          ADD      r0,r10,r0,LSL #5      ;900
000ad6  b284              UXTH     r4,r0                 ;900
000ad8  f04f0056          MOV      r0,#0x56              ;902
000adc  f88d0000          STRB     r0,[sp,#0]            ;902
000ae0  f04f004f          MOV      r0,#0x4f              ;903
000ae4  f88d0001          STRB     r0,[sp,#1]            ;903
000ae8  f04f0055          MOV      r0,#0x55              ;904
000aec  f88d0002          STRB     r0,[sp,#2]            ;904
000af0  f04f0054          MOV      r0,#0x54              ;905
000af4  f88d0003          STRB     r0,[sp,#3]            ;905
000af8  4669              MOV      r1,sp                 ;906
000afa  4620              MOV      r0,r4                 ;906
000afc  f7fffffe          BL       lc640_write_long_ptr
000b00  f88d6000          STRB     r6,[sp,#0]            ;908
000b04  f88d7001          STRB     r7,[sp,#1]            ;909
000b08  f88d5002          STRB     r5,[sp,#2]            ;910
000b0c  f88d9003          STRB     r9,[sp,#3]            ;911
000b10  4669              MOV      r1,sp                 ;912
000b12  1d20              ADDS     r0,r4,#4              ;912
000b14  f7fffffe          BL       lc640_write_long_ptr
000b18  f8b8003c          LDRH     r0,[r8,#0x3c]         ;914
000b1c  f88d0000          STRB     r0,[sp,#0]            ;914
000b20  f8980038          LDRB     r0,[r8,#0x38]         ;915
000b24  f88d0001          STRB     r0,[sp,#1]            ;915
000b28  f898002c          LDRB     r0,[r8,#0x2c]         ;916
000b2c  f88d0002          STRB     r0,[sp,#2]            ;916
000b30  f88d9003          STRB     r9,[sp,#3]            ;917
000b34  4669              MOV      r1,sp                 ;918
000b36  f1040008          ADD      r0,r4,#8              ;918
000b3a  e000              B        |L1.2878|
                  |L1.2876|
000b3c  e04c              B        |L1.3032|
                  |L1.2878|
000b3e  f7fffffe          BL       lc640_write_long_ptr
000b42  f8980028          LDRB     r0,[r8,#0x28]         ;920
000b46  f88d0000          STRB     r0,[sp,#0]            ;920
000b4a  f8980024          LDRB     r0,[r8,#0x24]         ;921
000b4e  f88d0001          STRB     r0,[sp,#1]            ;921
000b52  f8980020          LDRB     r0,[r8,#0x20]         ;922
000b56  f88d0002          STRB     r0,[sp,#2]            ;922
000b5a  f88d9003          STRB     r9,[sp,#3]            ;923
000b5e  4669              MOV      r1,sp                 ;924
000b60  f104000c          ADD      r0,r4,#0xc            ;924
000b64  f7fffffe          BL       lc640_write_long_ptr
000b68  f04f0541          MOV      r5,#0x41              ;926
000b6c  f88d5000          STRB     r5,[sp,#0]            ;926
000b70  f88d5001          STRB     r5,[sp,#1]            ;927
000b74  f88d5002          STRB     r5,[sp,#2]            ;928
000b78  f88d5003          STRB     r5,[sp,#3]            ;929
000b7c  4669              MOV      r1,sp                 ;930
000b7e  f1040010          ADD      r0,r4,#0x10           ;930
000b82  f7fffffe          BL       lc640_write_long_ptr
000b86  e000              B        |L1.2954|
                  |L1.2952|
000b88  e034              B        |L1.3060|
                  |L1.2954|
000b8a  f88d5000          STRB     r5,[sp,#0]            ;932
000b8e  f88d5001          STRB     r5,[sp,#1]            ;933
000b92  f88d5002          STRB     r5,[sp,#2]            ;934
000b96  f88d5003          STRB     r5,[sp,#3]            ;935
000b9a  4669              MOV      r1,sp                 ;936
000b9c  f1040014          ADD      r0,r4,#0x14           ;936
000ba0  f7fffffe          BL       lc640_write_long_ptr
000ba4  f88d5000          STRB     r5,[sp,#0]            ;938
000ba8  f88d5001          STRB     r5,[sp,#1]            ;939
000bac  f88d5002          STRB     r5,[sp,#2]            ;940
000bb0  f88d5003          STRB     r5,[sp,#3]            ;941
000bb4  4669              MOV      r1,sp                 ;942
000bb6  f1040018          ADD      r0,r4,#0x18           ;942
000bba  f7fffffe          BL       lc640_write_long_ptr
000bbe  f88d5000          STRB     r5,[sp,#0]            ;944
000bc2  f88d5001          STRB     r5,[sp,#1]            ;945
000bc6  f88d5002          STRB     r5,[sp,#2]            ;946
000bca  f88d5003          STRB     r5,[sp,#3]            ;947
000bce  4669              MOV      r1,sp                 ;948
000bd0  f104001c          ADD      r0,r4,#0x1c           ;948
000bd4  f7fffffe          BL       lc640_write_long_ptr
                  |L1.3032|
;;;971         	{        
;;;972         	if(event_ptr_find)event_ptr_find--;
;;;973         	else event_ptr_find=63;
;;;974         	if(event_ptr_find==event_ptr)return;
;;;975         	else goto avar_u_out_hndl_lbl1;
;;;976         	}
;;;977         else 
;;;978         	{
;;;979         	lc640_read_long_ptr(lc640_adr+16,data);
;;;980         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;981         		{        
;;;982         		if(event_ptr_find)event_ptr_find--;
;;;983             	else event_ptr_find=63;
;;;984             	if(event_ptr_find==event_ptr)return;
;;;985         		else goto avar_u_out_hndl_lbl1;
;;;986         		}
;;;987    
;;;988         	}
;;;989         		
;;;990    	data[0]=LPC_RTC->YEAR;
;;;991    	data[1]=LPC_RTC->MONTH;
;;;992    	data[2]=LPC_RTC->DOM;
;;;993    	data[3]=0;
;;;994    	lc640_write_long_ptr(lc640_adr+16,data);
;;;995    
;;;996    	data[0]=LPC_RTC->HOUR;
;;;997    	data[1]=LPC_RTC->MIN;
;;;998    	data[2]=LPC_RTC->SEC;
;;;999    	data[3]=0;
;;;1000   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1001   	
;;;1002   	data[0]=*((char*)&volt);
;;;1003   	data[1]=*(((char*)&volt)+1);
;;;1004   	data[2]='B';
;;;1005   	data[3]='B';
;;;1006   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1007   	
;;;1008   	data[0]='B';
;;;1009   	data[1]='B';
;;;1010   	data[2]='B';
;;;1011   	data[3]='B';
;;;1012   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1013   	}
;;;1014   	
;;;1015   }
000bd8  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.3036|
000bdc  f89d0001          LDRB     r0,[sp,#1]            ;970
000be0  284f              CMP      r0,#0x4f              ;970
000be2  d107              BNE      |L1.3060|
000be4  f89d0002          LDRB     r0,[sp,#2]            ;970
000be8  2855              CMP      r0,#0x55              ;970
000bea  d103              BNE      |L1.3060|
000bec  f89d0003          LDRB     r0,[sp,#3]            ;970
000bf0  2854              CMP      r0,#0x54              ;970
000bf2  d00a              BEQ      |L1.3082|
                  |L1.3060|
000bf4  b11c              CBZ      r4,|L1.3070|
000bf6  f1a40401          SUB      r4,r4,#1              ;972
000bfa  b2a4              UXTH     r4,r4                 ;972
000bfc  e001              B        |L1.3074|
                  |L1.3070|
000bfe  f04f043f          MOV      r4,#0x3f              ;973
                  |L1.3074|
000c02  455c              CMP      r4,r11                ;974
                  |L1.3076|
000c04  f47faf37          BNE      |L1.2678|
000c08  e7e6              B        |L1.3032|
                  |L1.3082|
000c0a  4669              MOV      r1,sp                 ;979
000c0c  f1050010          ADD      r0,r5,#0x10           ;979
000c10  f7fffffe          BL       lc640_read_long_ptr
000c14  f89d0000          LDRB     r0,[sp,#0]            ;980
000c18  2841              CMP      r0,#0x41              ;980
000c1a  d10b              BNE      |L1.3124|
000c1c  f89d0001          LDRB     r0,[sp,#1]            ;980
000c20  2841              CMP      r0,#0x41              ;980
000c22  d107              BNE      |L1.3124|
000c24  f89d0002          LDRB     r0,[sp,#2]            ;980
000c28  2841              CMP      r0,#0x41              ;980
000c2a  d103              BNE      |L1.3124|
000c2c  f89d0003          LDRB     r0,[sp,#3]            ;980
000c30  2841              CMP      r0,#0x41              ;980
000c32  d009              BEQ      |L1.3144|
                  |L1.3124|
000c34  b11c              CBZ      r4,|L1.3134|
000c36  f1a40401          SUB      r4,r4,#1              ;982
000c3a  b2a4              UXTH     r4,r4                 ;982
000c3c  e001              B        |L1.3138|
                  |L1.3134|
000c3e  f04f043f          MOV      r4,#0x3f              ;983
                  |L1.3138|
000c42  455c              CMP      r4,r11                ;984
000c44  d1de              BNE      |L1.3076|
000c46  e7c7              B        |L1.3032|
                  |L1.3144|
000c48  f8b8003c          LDRH     r0,[r8,#0x3c]         ;990
000c4c  f88d0000          STRB     r0,[sp,#0]            ;990
000c50  f8980038          LDRB     r0,[r8,#0x38]         ;991
000c54  f88d0001          STRB     r0,[sp,#1]            ;991
000c58  f898002c          LDRB     r0,[r8,#0x2c]         ;992
000c5c  f88d0002          STRB     r0,[sp,#2]            ;992
000c60  f88d9003          STRB     r9,[sp,#3]            ;993
000c64  4669              MOV      r1,sp                 ;994
000c66  f1050010          ADD      r0,r5,#0x10           ;994
000c6a  f7fffffe          BL       lc640_write_long_ptr
000c6e  f8980028          LDRB     r0,[r8,#0x28]         ;996
000c72  f88d0000          STRB     r0,[sp,#0]            ;996
000c76  f8980024          LDRB     r0,[r8,#0x24]         ;997
000c7a  f88d0001          STRB     r0,[sp,#1]            ;997
000c7e  f8980020          LDRB     r0,[r8,#0x20]         ;998
000c82  f88d0002          STRB     r0,[sp,#2]            ;998
000c86  f88d9003          STRB     r9,[sp,#3]            ;999
000c8a  4669              MOV      r1,sp                 ;1000
000c8c  f1050014          ADD      r0,r5,#0x14           ;1000
000c90  f7fffffe          BL       lc640_write_long_ptr
000c94  f88d6000          STRB     r6,[sp,#0]            ;1002
000c98  f88d7001          STRB     r7,[sp,#1]            ;1003
000c9c  f04f0442          MOV      r4,#0x42              ;1004
000ca0  f88d4002          STRB     r4,[sp,#2]            ;1004
000ca4  f88d4003          STRB     r4,[sp,#3]            ;1005
000ca8  4669              MOV      r1,sp                 ;1006
000caa  f1050018          ADD      r0,r5,#0x18           ;1006
000cae  f7fffffe          BL       lc640_write_long_ptr
000cb2  f88d4000          STRB     r4,[sp,#0]            ;1008
000cb6  f88d4001          STRB     r4,[sp,#1]            ;1009
000cba  f88d4002          STRB     r4,[sp,#2]            ;1010
000cbe  f88d4003          STRB     r4,[sp,#3]            ;1011
000cc2  4669              MOV      r1,sp                 ;1012
000cc4  f105001c          ADD      r0,r5,#0x1c           ;1012
000cc8  f7fffffe          BL       lc640_write_long_ptr
000ccc  e784              B        |L1.3032|
;;;1016   
                          ENDP

                  avar_u_in_hndl PROC
;;;1017   //-----------------------------------------------
;;;1018   void avar_u_in_hndl(char in,short volt)
000cce  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;1019   {
000cd2  b081              SUB      sp,sp,#4
000cd4  4605              MOV      r5,r0
;;;1020   
;;;1021   char data[4];
;;;1022   unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;1023   if(uInAvar==in)return;
000cd6  481b              LDR      r0,|L1.3396|
000cd8  7801              LDRB     r1,[r0,#0]  ; uInAvar
000cda  42a9              CMP      r1,r5
000cdc  d07e              BEQ      |L1.3548|
;;;1024   if((in==1)||(in==2))
;;;1025   	{
;;;1026   	
;;;1027       
;;;1028   	uInAvar=in;
;;;1029   
;;;1030   	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;1031   	event_ptr++;	
;;;1032   	if(event_ptr>63)event_ptr=0;	
;;;1033   	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;1034   	
;;;1035       event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;1036   	if(event_cnt!=63)event_cnt=event_ptr;
;;;1037   	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;1038   	
;;;1039   	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;1040   	
;;;1041   	data[0]='V';
;;;1042   	data[1]='I';
;;;1043   	data[2]='N';
;;;1044   	data[3]=0;
;;;1045   	lc640_write_long_ptr(lc640_adr,data);
;;;1046   
;;;1047   	data[0]=*((char*)&volt);
000cde  f89d6008          LDRB     r6,[sp,#8]
;;;1048   	data[1]=*(((char*)&volt)+1);
000ce2  f89d7009          LDRB     r7,[sp,#9]
;;;1049   	data[2]=in;
;;;1050   	data[3]=0;
;;;1051   	lc640_write_long_ptr(lc640_adr+4,data);
;;;1052   
;;;1053   	data[0]=LPC_RTC->YEAR;
000ce6  f8df8058          LDR      r8,|L1.3392|
000cea  f44f6460          MOV      r4,#0xe00             ;1030
000cee  f04f0900          MOV      r9,#0                 ;1032
000cf2  f44f6a80          MOV      r10,#0x400            ;1039
000cf6  2d01              CMP      r5,#1                 ;1024
000cf8  d026              BEQ      |L1.3400|
000cfa  2d02              CMP      r5,#2                 ;1024
000cfc  d024              BEQ      |L1.3400|
;;;1054   	data[1]=LPC_RTC->MONTH;
;;;1055   	data[2]=LPC_RTC->DOM;
;;;1056   	data[3]=0;
;;;1057   	lc640_write_long_ptr(lc640_adr+8,data);
;;;1058   
;;;1059   	data[0]=LPC_RTC->HOUR;
;;;1060   	data[1]=LPC_RTC->MIN;
;;;1061   	data[2]=LPC_RTC->SEC;
;;;1062   	data[3]=0;
;;;1063   	lc640_write_long_ptr(lc640_adr+12,data);
;;;1064   	
;;;1065   	data[0]='A';
;;;1066   	data[1]='A';
;;;1067   	data[2]='A';
;;;1068   	data[3]='A';
;;;1069   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1070   	
;;;1071   	data[0]='A';
;;;1072   	data[1]='A';
;;;1073   	data[2]='A';
;;;1074   	data[3]='A';
;;;1075   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1076   	
;;;1077   	data[0]='A';
;;;1078   	data[1]='A';
;;;1079   	data[2]='A';
;;;1080   	data[3]='A';
;;;1081   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1082   	
;;;1083   	data[0]='A';
;;;1084   	data[1]='A';
;;;1085   	data[2]='A';
;;;1086   	data[3]='A';
;;;1087   	lc640_write_long_ptr(lc640_adr+28,data);				
;;;1088   
;;;1089   	//snmp_trap_send("System overload",5,1,2);
;;;1090   
;;;1091   	
;;;1092   	}
;;;1093   
;;;1094   else if(in==0)
000cfe  2d00              CMP      r5,#0
000d00  d16c              BNE      |L1.3548|
;;;1095   	{
;;;1096   	
;;;1097   
;;;1098   	uInAvar=0;
000d02  f8809000          STRB     r9,[r0,#0]
;;;1099   
;;;1100       event_ptr=lc640_read_int(PTR_EVENT_LOG);
000d06  4620              MOV      r0,r4
000d08  f7fffffe          BL       lc640_read_int
000d0c  b284              UXTH     r4,r0
000d0e  46a3              MOV      r11,r4
;;;1101   	event_ptr_find=event_ptr;
000d10  465c              MOV      r4,r11
                  |L1.3346|
;;;1102   	
;;;1103   avar_u_in_hndl_lbl1: 
;;;1104   
;;;1105   	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000d12  eb0a1044          ADD      r0,r10,r4,LSL #5
000d16  b285              UXTH     r5,r0
;;;1106   
;;;1107   	lc640_read_long_ptr(lc640_adr,data);
000d18  4669              MOV      r1,sp
000d1a  4628              MOV      r0,r5
000d1c  f7fffffe          BL       lc640_read_long_ptr
;;;1108        
;;;1109       if(!((data[0]=='V')&&(data[1]=='I')&&(data[2]=='N')&&(data[3]==0)))
000d20  f89d0000          LDRB     r0,[sp,#0]
000d24  2856              CMP      r0,#0x56
000d26  d17d              BNE      |L1.3620|
000d28  e0b2              B        |L1.3728|
000d2a  0000              DCW      0x0000
                  |L1.3372|
000d2c  53797374          DCB      "System overload",0
000d30  656d206f
000d34  7665726c
000d38  6f616400
                  |L1.3388|
                          DCD      uOutAvar
                  |L1.3392|
                          DCD      0x40024000
                  |L1.3396|
                          DCD      uInAvar
                  |L1.3400|
000d48  7005              STRB     r5,[r0,#0]            ;1028
000d4a  4620              MOV      r0,r4                 ;1030
000d4c  f7fffffe          BL       lc640_read_int
000d50  f1000001          ADD      r0,r0,#1              ;1031
000d54  fa1ffb80          UXTH     r11,r0                ;1031
000d58  f1bb0f3f          CMP      r11,#0x3f             ;1032
000d5c  d901              BLS      |L1.3426|
000d5e  f04f0b00          MOV      r11,#0                ;1032
                  |L1.3426|
000d62  fa0ff18b          SXTH     r1,r11                ;1033
000d66  4620              MOV      r0,r4                 ;1033
000d68  f7fffffe          BL       lc640_write_int
000d6c  f6406002          MOV      r0,#0xe02             ;1035
000d70  f7fffffe          BL       lc640_read_int
000d74  b280              UXTH     r0,r0                 ;1035
000d76  283f              CMP      r0,#0x3f              ;1036
000d78  d000              BEQ      |L1.3452|
000d7a  4658              MOV      r0,r11                ;1036
                  |L1.3452|
000d7c  b201              SXTH     r1,r0                 ;1037
000d7e  f6406002          MOV      r0,#0xe02             ;1037
000d82  f7fffffe          BL       lc640_write_int
000d86  4620              MOV      r0,r4                 ;1039
000d88  f7fffffe          BL       lc640_read_int
000d8c  eb0a1040          ADD      r0,r10,r0,LSL #5      ;1039
000d90  b284              UXTH     r4,r0                 ;1039
000d92  f04f0056          MOV      r0,#0x56              ;1041
000d96  f88d0000          STRB     r0,[sp,#0]            ;1041
000d9a  f04f0049          MOV      r0,#0x49              ;1042
000d9e  f88d0001          STRB     r0,[sp,#1]            ;1042
000da2  f04f004e          MOV      r0,#0x4e              ;1043
000da6  f88d0002          STRB     r0,[sp,#2]            ;1043
000daa  f88d9003          STRB     r9,[sp,#3]            ;1044
000dae  4669              MOV      r1,sp                 ;1045
000db0  4620              MOV      r0,r4                 ;1045
000db2  f7fffffe          BL       lc640_write_long_ptr
000db6  f88d6000          STRB     r6,[sp,#0]            ;1047
000dba  f88d7001          STRB     r7,[sp,#1]            ;1048
000dbe  f88d5002          STRB     r5,[sp,#2]            ;1049
000dc2  f88d9003          STRB     r9,[sp,#3]            ;1050
000dc6  4669              MOV      r1,sp                 ;1051
000dc8  1d20              ADDS     r0,r4,#4              ;1051
000dca  f7fffffe          BL       lc640_write_long_ptr
000dce  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1053
000dd2  f88d0000          STRB     r0,[sp,#0]            ;1053
000dd6  f8980038          LDRB     r0,[r8,#0x38]         ;1054
000dda  e000              B        |L1.3550|
                  |L1.3548|
000ddc  e057              B        |L1.3726|
                  |L1.3550|
000dde  f88d0001          STRB     r0,[sp,#1]            ;1054
000de2  f898002c          LDRB     r0,[r8,#0x2c]         ;1055
000de6  f88d0002          STRB     r0,[sp,#2]            ;1055
000dea  f88d9003          STRB     r9,[sp,#3]            ;1056
000dee  4669              MOV      r1,sp                 ;1057
000df0  f1040008          ADD      r0,r4,#8              ;1057
000df4  f7fffffe          BL       lc640_write_long_ptr
000df8  f8980028          LDRB     r0,[r8,#0x28]         ;1059
000dfc  f88d0000          STRB     r0,[sp,#0]            ;1059
000e00  f8980024          LDRB     r0,[r8,#0x24]         ;1060
000e04  f88d0001          STRB     r0,[sp,#1]            ;1060
000e08  f8980020          LDRB     r0,[r8,#0x20]         ;1061
000e0c  f88d0002          STRB     r0,[sp,#2]            ;1061
000e10  f88d9003          STRB     r9,[sp,#3]            ;1062
000e14  4669              MOV      r1,sp                 ;1063
000e16  f104000c          ADD      r0,r4,#0xc            ;1063
000e1a  f7fffffe          BL       lc640_write_long_ptr
000e1e  f04f0541          MOV      r5,#0x41              ;1065
000e22  e000              B        |L1.3622|
                  |L1.3620|
000e24  e03f              B        |L1.3750|
                  |L1.3622|
000e26  f88d5000          STRB     r5,[sp,#0]            ;1065
000e2a  f88d5001          STRB     r5,[sp,#1]            ;1066
000e2e  f88d5002          STRB     r5,[sp,#2]            ;1067
000e32  f88d5003          STRB     r5,[sp,#3]            ;1068
000e36  4669              MOV      r1,sp                 ;1069
000e38  f1040010          ADD      r0,r4,#0x10           ;1069
000e3c  f7fffffe          BL       lc640_write_long_ptr
000e40  f88d5000          STRB     r5,[sp,#0]            ;1071
000e44  f88d5001          STRB     r5,[sp,#1]            ;1072
000e48  f88d5002          STRB     r5,[sp,#2]            ;1073
000e4c  f88d5003          STRB     r5,[sp,#3]            ;1074
000e50  4669              MOV      r1,sp                 ;1075
000e52  f1040014          ADD      r0,r4,#0x14           ;1075
000e56  f7fffffe          BL       lc640_write_long_ptr
000e5a  f88d5000          STRB     r5,[sp,#0]            ;1077
000e5e  f88d5001          STRB     r5,[sp,#1]            ;1078
000e62  f88d5002          STRB     r5,[sp,#2]            ;1079
000e66  f88d5003          STRB     r5,[sp,#3]            ;1080
000e6a  4669              MOV      r1,sp                 ;1081
000e6c  f1040018          ADD      r0,r4,#0x18           ;1081
000e70  f7fffffe          BL       lc640_write_long_ptr
000e74  f88d5000          STRB     r5,[sp,#0]            ;1083
000e78  f88d5001          STRB     r5,[sp,#1]            ;1084
000e7c  f88d5002          STRB     r5,[sp,#2]            ;1085
000e80  f88d5003          STRB     r5,[sp,#3]            ;1086
000e84  4669              MOV      r1,sp                 ;1087
000e86  f104001c          ADD      r0,r4,#0x1c           ;1087
000e8a  f7fffffe          BL       lc640_write_long_ptr
                  |L1.3726|
;;;1110        	{        
;;;1111        	if(event_ptr_find)event_ptr_find--;
;;;1112        	else event_ptr_find=63;
;;;1113        	if(event_ptr_find==event_ptr)return;
;;;1114        	else goto avar_u_in_hndl_lbl1;
;;;1115        	}
;;;1116        else 
;;;1117        	{
;;;1118        	lc640_read_long_ptr(lc640_adr+16,data);
;;;1119        	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;1120        		{        
;;;1121        		if(event_ptr_find)event_ptr_find--;
;;;1122            	else event_ptr_find=63;
;;;1123            	if(event_ptr_find==event_ptr)return;
;;;1124        		else goto avar_u_in_hndl_lbl1;
;;;1125        		}
;;;1126   
;;;1127        	}
;;;1128        		
;;;1129   	data[0]=LPC_RTC->YEAR;
;;;1130   	data[1]=LPC_RTC->MONTH;
;;;1131   	data[2]=LPC_RTC->DOM;
;;;1132   	data[3]=0;
;;;1133   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1134   
;;;1135   	data[0]=LPC_RTC->HOUR;
;;;1136   	data[1]=LPC_RTC->MIN;
;;;1137   	data[2]=LPC_RTC->SEC;
;;;1138   	data[3]=0;
;;;1139   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1140   	
;;;1141   	data[0]=*((char*)&volt);
;;;1142   	data[1]=*(((char*)&volt)+1);
;;;1143   	data[2]='B';
;;;1144   	data[3]='B';
;;;1145   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1146   	
;;;1147   	data[0]='B';
;;;1148   	data[1]='B';
;;;1149   	data[2]='B';
;;;1150   	data[3]='B';
;;;1151   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1152   	}
;;;1153   	
;;;1154   }
000e8e  e6a3              B        |L1.3032|
                  |L1.3728|
000e90  f89d0001          LDRB     r0,[sp,#1]            ;1109
000e94  2849              CMP      r0,#0x49              ;1109
000e96  d106              BNE      |L1.3750|
000e98  f89d0002          LDRB     r0,[sp,#2]            ;1109
000e9c  284e              CMP      r0,#0x4e              ;1109
000e9e  d102              BNE      |L1.3750|
000ea0  f89d0003          LDRB     r0,[sp,#3]            ;1109
000ea4  b150              CBZ      r0,|L1.3772|
                  |L1.3750|
000ea6  b11c              CBZ      r4,|L1.3760|
000ea8  f1a40401          SUB      r4,r4,#1              ;1111
000eac  b2a4              UXTH     r4,r4                 ;1111
000eae  e001              B        |L1.3764|
                  |L1.3760|
000eb0  f04f043f          MOV      r4,#0x3f              ;1112
                  |L1.3764|
000eb4  455c              CMP      r4,r11                ;1113
                  |L1.3766|
000eb6  f47faf2c          BNE      |L1.3346|
000eba  e68d              B        |L1.3032|
                  |L1.3772|
000ebc  4669              MOV      r1,sp                 ;1118
000ebe  f1050010          ADD      r0,r5,#0x10           ;1118
000ec2  f7fffffe          BL       lc640_read_long_ptr
000ec6  f89d0000          LDRB     r0,[sp,#0]            ;1119
000eca  2841              CMP      r0,#0x41              ;1119
000ecc  d10b              BNE      |L1.3814|
000ece  f89d0001          LDRB     r0,[sp,#1]            ;1119
000ed2  2841              CMP      r0,#0x41              ;1119
000ed4  d107              BNE      |L1.3814|
000ed6  f89d0002          LDRB     r0,[sp,#2]            ;1119
000eda  2841              CMP      r0,#0x41              ;1119
000edc  d103              BNE      |L1.3814|
000ede  f89d0003          LDRB     r0,[sp,#3]            ;1119
000ee2  2841              CMP      r0,#0x41              ;1119
000ee4  d009              BEQ      |L1.3834|
                  |L1.3814|
000ee6  b11c              CBZ      r4,|L1.3824|
000ee8  f1a40401          SUB      r4,r4,#1              ;1121
000eec  b2a4              UXTH     r4,r4                 ;1121
000eee  e001              B        |L1.3828|
                  |L1.3824|
000ef0  f04f043f          MOV      r4,#0x3f              ;1122
                  |L1.3828|
000ef4  455c              CMP      r4,r11                ;1123
000ef6  d1de              BNE      |L1.3766|
000ef8  e66e              B        |L1.3032|
                  |L1.3834|
000efa  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1129
000efe  f88d0000          STRB     r0,[sp,#0]            ;1129
000f02  f8980038          LDRB     r0,[r8,#0x38]         ;1130
000f06  f88d0001          STRB     r0,[sp,#1]            ;1130
000f0a  f898002c          LDRB     r0,[r8,#0x2c]         ;1131
000f0e  f88d0002          STRB     r0,[sp,#2]            ;1131
000f12  f88d9003          STRB     r9,[sp,#3]            ;1132
000f16  4669              MOV      r1,sp                 ;1133
000f18  f1050010          ADD      r0,r5,#0x10           ;1133
000f1c  f7fffffe          BL       lc640_write_long_ptr
000f20  f8980028          LDRB     r0,[r8,#0x28]         ;1135
000f24  f88d0000          STRB     r0,[sp,#0]            ;1135
000f28  f8980024          LDRB     r0,[r8,#0x24]         ;1136
000f2c  f88d0001          STRB     r0,[sp,#1]            ;1136
000f30  f8980020          LDRB     r0,[r8,#0x20]         ;1137
000f34  f88d0002          STRB     r0,[sp,#2]            ;1137
000f38  f88d9003          STRB     r9,[sp,#3]            ;1138
000f3c  4669              MOV      r1,sp                 ;1139
000f3e  f1050014          ADD      r0,r5,#0x14           ;1139
000f42  f7fffffe          BL       lc640_write_long_ptr
000f46  f88d6000          STRB     r6,[sp,#0]            ;1141
000f4a  f88d7001          STRB     r7,[sp,#1]            ;1142
000f4e  f04f0442          MOV      r4,#0x42              ;1143
000f52  f88d4002          STRB     r4,[sp,#2]            ;1143
000f56  f88d4003          STRB     r4,[sp,#3]            ;1144
000f5a  4669              MOV      r1,sp                 ;1145
000f5c  f1050018          ADD      r0,r5,#0x18           ;1145
000f60  f7fffffe          BL       lc640_write_long_ptr
000f64  f88d4000          STRB     r4,[sp,#0]            ;1147
000f68  f88d4001          STRB     r4,[sp,#1]            ;1148
000f6c  f88d4002          STRB     r4,[sp,#2]            ;1149
000f70  f88d4003          STRB     r4,[sp,#3]            ;1150
000f74  4669              MOV      r1,sp                 ;1151
000f76  f105001c          ADD      r0,r5,#0x1c           ;1151
000f7a  f7fffffe          BL       lc640_write_long_ptr
000f7e  e62b              B        |L1.3032|
;;;1155   
                          ENDP

                  avar_sys_t_hndl PROC
;;;1157   //-----------------------------------------------
;;;1158   void avar_sys_t_hndl(char in,short temper)
000f80  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;1159   {
000f84  b081              SUB      sp,sp,#4
;;;1160   
;;;1161   char data[4];
;;;1162   unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;1163   if(sysTAvar==in)return;
000f86  49a0              LDR      r1,|L1.4616|
000f88  780a              LDRB     r2,[r1,#0]  ; sysTAvar
000f8a  4282              CMP      r2,r0
000f8c  d07e              BEQ      |L1.4236|
;;;1164   if(in==1)
;;;1165   	{
;;;1166   	sysTAvar=in;
;;;1167   
;;;1168   	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;1169   	event_ptr++;	
;;;1170   	if(event_ptr>63)event_ptr=0;	
;;;1171   	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;1172   	
;;;1173       event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;1174   	if(event_cnt!=63)event_cnt=event_ptr;
;;;1175   	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;1176   	
;;;1177   	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;1178   	
;;;1179   	data[0]='T';
;;;1180   	data[1]='S';
;;;1181   	data[2]='Y';
;;;1182   	data[3]='S';
;;;1183   	lc640_write_long_ptr(lc640_adr,data);
;;;1184   
;;;1185   	data[0]=*((char*)&temper);
000f8e  f89d7008          LDRB     r7,[sp,#8]
;;;1186   	data[1]=*(((char*)&temper)+1);
000f92  f89d8009          LDRB     r8,[sp,#9]
;;;1187   	data[2]=0;
;;;1188   	data[3]=0;
;;;1189   	lc640_write_long_ptr(lc640_adr+4,data);
;;;1190   
;;;1191   	data[0]=LPC_RTC->YEAR;
000f96  f8df9274          LDR      r9,|L1.4620|
000f9a  f44f6560          MOV      r5,#0xe00             ;1168
000f9e  f04f0a00          MOV      r10,#0                ;1170
000fa2  f44f6b80          MOV      r11,#0x400            ;1177
000fa6  2801              CMP      r0,#1                 ;1164
000fa8  d014              BEQ      |L1.4052|
;;;1192   	data[1]=LPC_RTC->MONTH;
;;;1193   	data[2]=LPC_RTC->DOM;
;;;1194   	data[3]=0;
;;;1195   	lc640_write_long_ptr(lc640_adr+8,data);
;;;1196   
;;;1197   	data[0]=LPC_RTC->HOUR;
;;;1198   	data[1]=LPC_RTC->MIN;
;;;1199   	data[2]=LPC_RTC->SEC;
;;;1200   	data[3]=0;
;;;1201   	lc640_write_long_ptr(lc640_adr+12,data);
;;;1202   	
;;;1203   	data[0]='A';
;;;1204   	data[1]='A';
;;;1205   	data[2]='A';
;;;1206   	data[3]='A';
;;;1207   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1208   	
;;;1209   	data[0]='A';
;;;1210   	data[1]='A';
;;;1211   	data[2]='A';
;;;1212   	data[3]='A';
;;;1213   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1214   	
;;;1215   	data[0]='A';
;;;1216   	data[1]='A';
;;;1217   	data[2]='A';
;;;1218   	data[3]='A';
;;;1219   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1220   	
;;;1221   	data[0]='A';
;;;1222   	data[1]='A';
;;;1223   	data[2]='A';
;;;1224   	data[3]='A';
;;;1225   	lc640_write_long_ptr(lc640_adr+28,data);				
;;;1226   
;;;1227   	//snmp_trap_send("System overload",5,1,2);
;;;1228   
;;;1229   	
;;;1230   	}
;;;1231   
;;;1232   else if(in==0)
000faa  2800              CMP      r0,#0
000fac  d16e              BNE      |L1.4236|
;;;1233   	{
;;;1234   	
;;;1235   
;;;1236   	sysTAvar=0;
000fae  f881a000          STRB     r10,[r1,#0]
;;;1237   
;;;1238       event_ptr=lc640_read_int(PTR_EVENT_LOG);
000fb2  4628              MOV      r0,r5
000fb4  f7fffffe          BL       lc640_read_int
000fb8  b286              UXTH     r6,r0
;;;1239   	event_ptr_find=event_ptr;
000fba  4634              MOV      r4,r6
                  |L1.4028|
;;;1240   	
;;;1241   avar_sys_t_hndl_lbl1: 
;;;1242   
;;;1243   	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000fbc  eb0b1044          ADD      r0,r11,r4,LSL #5
000fc0  b285              UXTH     r5,r0
;;;1244   
;;;1245   	lc640_read_long_ptr(lc640_adr,data);
000fc2  4669              MOV      r1,sp
000fc4  4628              MOV      r0,r5
000fc6  f7fffffe          BL       lc640_read_long_ptr
;;;1246        
;;;1247       if(!((data[0]=='T')&&(data[1]=='S')&&(data[2]=='Y')&&(data[3]=='S')))
000fca  f89d0000          LDRB     r0,[sp,#0]
000fce  2854              CMP      r0,#0x54
000fd0  d17e              BNE      |L1.4304|
000fd2  e0a0              B        |L1.4374|
                  |L1.4052|
000fd4  7008              STRB     r0,[r1,#0]            ;1166
000fd6  4628              MOV      r0,r5                 ;1168
000fd8  f7fffffe          BL       lc640_read_int
000fdc  f1000001          ADD      r0,r0,#1              ;1169
000fe0  b284              UXTH     r4,r0                 ;1169
000fe2  2c3f              CMP      r4,#0x3f              ;1170
000fe4  d901              BLS      |L1.4074|
000fe6  f04f0400          MOV      r4,#0                 ;1170
                  |L1.4074|
000fea  b221              SXTH     r1,r4                 ;1171
000fec  4628              MOV      r0,r5                 ;1171
000fee  f7fffffe          BL       lc640_write_int
000ff2  f6406602          MOV      r6,#0xe02             ;1173
000ff6  4630              MOV      r0,r6                 ;1173
000ff8  f7fffffe          BL       lc640_read_int
000ffc  b280              UXTH     r0,r0                 ;1173
000ffe  283f              CMP      r0,#0x3f              ;1174
001000  d000              BEQ      |L1.4100|
001002  4620              MOV      r0,r4                 ;1174
                  |L1.4100|
001004  b201              SXTH     r1,r0                 ;1175
001006  4630              MOV      r0,r6                 ;1175
001008  f7fffffe          BL       lc640_write_int
00100c  4628              MOV      r0,r5                 ;1177
00100e  f7fffffe          BL       lc640_read_int
001012  eb0b1040          ADD      r0,r11,r0,LSL #5      ;1177
001016  b284              UXTH     r4,r0                 ;1177
001018  f04f0054          MOV      r0,#0x54              ;1179
00101c  f88d0000          STRB     r0,[sp,#0]            ;1179
001020  f04f0053          MOV      r0,#0x53              ;1180
001024  f88d0001          STRB     r0,[sp,#1]            ;1180
001028  f04f0159          MOV      r1,#0x59              ;1181
00102c  f88d1002          STRB     r1,[sp,#2]            ;1181
001030  f88d0003          STRB     r0,[sp,#3]            ;1182
001034  4669              MOV      r1,sp                 ;1183
001036  4620              MOV      r0,r4                 ;1183
001038  f7fffffe          BL       lc640_write_long_ptr
00103c  f88d7000          STRB     r7,[sp,#0]            ;1185
001040  f88d8001          STRB     r8,[sp,#1]            ;1186
001044  f88da002          STRB     r10,[sp,#2]           ;1187
001048  f88da003          STRB     r10,[sp,#3]           ;1188
00104c  4669              MOV      r1,sp                 ;1189
00104e  1d20              ADDS     r0,r4,#4              ;1189
001050  f7fffffe          BL       lc640_write_long_ptr
001054  f8b9003c          LDRH     r0,[r9,#0x3c]         ;1191
001058  f88d0000          STRB     r0,[sp,#0]            ;1191
00105c  f8990038          LDRB     r0,[r9,#0x38]         ;1192
001060  f88d0001          STRB     r0,[sp,#1]            ;1192
001064  f899002c          LDRB     r0,[r9,#0x2c]         ;1193
001068  f88d0002          STRB     r0,[sp,#2]            ;1193
00106c  f88da003          STRB     r10,[sp,#3]           ;1194
001070  4669              MOV      r1,sp                 ;1195
001072  f1040008          ADD      r0,r4,#8              ;1195
001076  f7fffffe          BL       lc640_write_long_ptr
00107a  f8990028          LDRB     r0,[r9,#0x28]         ;1197
00107e  f88d0000          STRB     r0,[sp,#0]            ;1197
001082  f8990024          LDRB     r0,[r9,#0x24]         ;1198
001086  f88d0001          STRB     r0,[sp,#1]            ;1198
00108a  e000              B        |L1.4238|
                  |L1.4236|
00108c  e042              B        |L1.4372|
                  |L1.4238|
00108e  f8990020          LDRB     r0,[r9,#0x20]         ;1199
001092  f88d0002          STRB     r0,[sp,#2]            ;1199
001096  f88da003          STRB     r10,[sp,#3]           ;1200
00109a  4669              MOV      r1,sp                 ;1201
00109c  f104000c          ADD      r0,r4,#0xc            ;1201
0010a0  f7fffffe          BL       lc640_write_long_ptr
0010a4  f04f0541          MOV      r5,#0x41              ;1203
0010a8  f88d5000          STRB     r5,[sp,#0]            ;1203
0010ac  f88d5001          STRB     r5,[sp,#1]            ;1204
0010b0  f88d5002          STRB     r5,[sp,#2]            ;1205
0010b4  f88d5003          STRB     r5,[sp,#3]            ;1206
0010b8  4669              MOV      r1,sp                 ;1207
0010ba  f1040010          ADD      r0,r4,#0x10           ;1207
0010be  f7fffffe          BL       lc640_write_long_ptr
0010c2  f88d5000          STRB     r5,[sp,#0]            ;1209
0010c6  f88d5001          STRB     r5,[sp,#1]            ;1210
0010ca  f88d5002          STRB     r5,[sp,#2]            ;1211
0010ce  e000              B        |L1.4306|
                  |L1.4304|
0010d0  e02d              B        |L1.4398|
                  |L1.4306|
0010d2  f88d5003          STRB     r5,[sp,#3]            ;1212
0010d6  4669              MOV      r1,sp                 ;1213
0010d8  f1040014          ADD      r0,r4,#0x14           ;1213
0010dc  f7fffffe          BL       lc640_write_long_ptr
0010e0  f88d5000          STRB     r5,[sp,#0]            ;1215
0010e4  f88d5001          STRB     r5,[sp,#1]            ;1216
0010e8  f88d5002          STRB     r5,[sp,#2]            ;1217
0010ec  f88d5003          STRB     r5,[sp,#3]            ;1218
0010f0  4669              MOV      r1,sp                 ;1219
0010f2  f1040018          ADD      r0,r4,#0x18           ;1219
0010f6  f7fffffe          BL       lc640_write_long_ptr
0010fa  f88d5000          STRB     r5,[sp,#0]            ;1221
0010fe  f88d5001          STRB     r5,[sp,#1]            ;1222
001102  f88d5002          STRB     r5,[sp,#2]            ;1223
001106  f88d5003          STRB     r5,[sp,#3]            ;1224
00110a  4669              MOV      r1,sp                 ;1225
00110c  f104001c          ADD      r0,r4,#0x1c           ;1225
001110  f7fffffe          BL       lc640_write_long_ptr
                  |L1.4372|
;;;1248        	{        
;;;1249        	if(event_ptr_find)event_ptr_find--;
;;;1250        	else event_ptr_find=63;
;;;1251        	if(event_ptr_find==event_ptr)return;
;;;1252        	else goto avar_sys_t_hndl_lbl1;
;;;1253        	}
;;;1254        else 
;;;1255        	{
;;;1256        	lc640_read_long_ptr(lc640_adr+16,data);
;;;1257        	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;1258        		{        
;;;1259        		if(event_ptr_find)event_ptr_find--;
;;;1260            	else event_ptr_find=63;
;;;1261            	if(event_ptr_find==event_ptr)return;
;;;1262        		else goto avar_sys_t_hndl_lbl1;
;;;1263        		}
;;;1264   
;;;1265        	}
;;;1266        		
;;;1267   	data[0]=LPC_RTC->YEAR;
;;;1268   	data[1]=LPC_RTC->MONTH;
;;;1269   	data[2]=LPC_RTC->DOM;
;;;1270   	data[3]=0;
;;;1271   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1272   
;;;1273   	data[0]=LPC_RTC->HOUR;
;;;1274   	data[1]=LPC_RTC->MIN;
;;;1275   	data[2]=LPC_RTC->SEC;
;;;1276   	data[3]=0;
;;;1277   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1278   	
;;;1279   	data[0]=*((char*)&temper);
;;;1280   	data[1]=*(((char*)&temper)+1);
;;;1281   	data[2]='B';
;;;1282   	data[3]='B';
;;;1283   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1284   	
;;;1285   	data[0]='B';
;;;1286   	data[1]='B';
;;;1287   	data[2]='B';
;;;1288   	data[3]='B';
;;;1289   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1290   	}
;;;1291   	
;;;1292   }
001114  e560              B        |L1.3032|
                  |L1.4374|
001116  f89d0001          LDRB     r0,[sp,#1]            ;1247
00111a  2853              CMP      r0,#0x53              ;1247
00111c  d107              BNE      |L1.4398|
00111e  f89d0002          LDRB     r0,[sp,#2]            ;1247
001122  2859              CMP      r0,#0x59              ;1247
001124  d103              BNE      |L1.4398|
001126  f89d0003          LDRB     r0,[sp,#3]            ;1247
00112a  2853              CMP      r0,#0x53              ;1247
00112c  d00a              BEQ      |L1.4420|
                  |L1.4398|
00112e  b11c              CBZ      r4,|L1.4408|
001130  f1a40401          SUB      r4,r4,#1              ;1249
001134  b2a4              UXTH     r4,r4                 ;1249
001136  e001              B        |L1.4412|
                  |L1.4408|
001138  f04f043f          MOV      r4,#0x3f              ;1250
                  |L1.4412|
00113c  42b4              CMP      r4,r6                 ;1251
                  |L1.4414|
00113e  f47faf3d          BNE      |L1.4028|
001142  e549              B        |L1.3032|
                  |L1.4420|
001144  4669              MOV      r1,sp                 ;1256
001146  f1050010          ADD      r0,r5,#0x10           ;1256
00114a  f7fffffe          BL       lc640_read_long_ptr
00114e  f89d0000          LDRB     r0,[sp,#0]            ;1257
001152  2841              CMP      r0,#0x41              ;1257
001154  d10b              BNE      |L1.4462|
001156  f89d0001          LDRB     r0,[sp,#1]            ;1257
00115a  2841              CMP      r0,#0x41              ;1257
00115c  d107              BNE      |L1.4462|
00115e  f89d0002          LDRB     r0,[sp,#2]            ;1257
001162  2841              CMP      r0,#0x41              ;1257
001164  d103              BNE      |L1.4462|
001166  f89d0003          LDRB     r0,[sp,#3]            ;1257
00116a  2841              CMP      r0,#0x41              ;1257
00116c  d009              BEQ      |L1.4482|
                  |L1.4462|
00116e  b11c              CBZ      r4,|L1.4472|
001170  f1a40401          SUB      r4,r4,#1              ;1259
001174  b2a4              UXTH     r4,r4                 ;1259
001176  e001              B        |L1.4476|
                  |L1.4472|
001178  f04f043f          MOV      r4,#0x3f              ;1260
                  |L1.4476|
00117c  42b4              CMP      r4,r6                 ;1261
00117e  d1de              BNE      |L1.4414|
001180  e52a              B        |L1.3032|
                  |L1.4482|
001182  f8b9003c          LDRH     r0,[r9,#0x3c]         ;1267
001186  f88d0000          STRB     r0,[sp,#0]            ;1267
00118a  f8990038          LDRB     r0,[r9,#0x38]         ;1268
00118e  f88d0001          STRB     r0,[sp,#1]            ;1268
001192  f899002c          LDRB     r0,[r9,#0x2c]         ;1269
001196  f88d0002          STRB     r0,[sp,#2]            ;1269
00119a  f88da003          STRB     r10,[sp,#3]           ;1270
00119e  4669              MOV      r1,sp                 ;1271
0011a0  f1050010          ADD      r0,r5,#0x10           ;1271
0011a4  f7fffffe          BL       lc640_write_long_ptr
0011a8  f8990028          LDRB     r0,[r9,#0x28]         ;1273
0011ac  f88d0000          STRB     r0,[sp,#0]            ;1273
0011b0  f8990024          LDRB     r0,[r9,#0x24]         ;1274
0011b4  f88d0001          STRB     r0,[sp,#1]            ;1274
0011b8  f8990020          LDRB     r0,[r9,#0x20]         ;1275
0011bc  f88d0002          STRB     r0,[sp,#2]            ;1275
0011c0  f88da003          STRB     r10,[sp,#3]           ;1276
0011c4  4669              MOV      r1,sp                 ;1277
0011c6  f1050014          ADD      r0,r5,#0x14           ;1277
0011ca  f7fffffe          BL       lc640_write_long_ptr
0011ce  f88d7000          STRB     r7,[sp,#0]            ;1279
0011d2  f88d8001          STRB     r8,[sp,#1]            ;1280
0011d6  f04f0442          MOV      r4,#0x42              ;1281
0011da  f88d4002          STRB     r4,[sp,#2]            ;1281
0011de  f88d4003          STRB     r4,[sp,#3]            ;1282
0011e2  4669              MOV      r1,sp                 ;1283
0011e4  f1050018          ADD      r0,r5,#0x18           ;1283
0011e8  f7fffffe          BL       lc640_write_long_ptr
0011ec  f88d4000          STRB     r4,[sp,#0]            ;1285
0011f0  f88d4001          STRB     r4,[sp,#1]            ;1286
0011f4  f88d4002          STRB     r4,[sp,#2]            ;1287
0011f8  f88d4003          STRB     r4,[sp,#3]            ;1288
0011fc  4669              MOV      r1,sp                 ;1289
0011fe  f105001c          ADD      r0,r5,#0x1c           ;1289
001202  f7fffffe          BL       lc640_write_long_ptr
001206  e4e7              B        |L1.3032|
;;;1293   
                          ENDP

                  |L1.4616|
                          DCD      sysTAvar
                  |L1.4620|
                          DCD      0x40024000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  wrk_mem_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000004  4606              MOV      r6,r0
000006  eb060046          ADD      r0,r6,r6,LSL #1
00000a  eb001106          ADD      r1,r0,r6,LSL #4
00000e  4845              LDR      r0,|L2.292|
000010  eb000481          ADD      r4,r0,r1,LSL #2
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  8be0              LDRH     r0,[r4,#0x1e]
000016  2805              CMP      r0,#5
000018  d37e              BCC      |L2.280|
;;;66     
;;;67     for(i=0;i<29;i++)
00001a  4843              LDR      r0,|L2.296|
00001c  8800              LDRH     r0,[r0,#0]  ; bat_u_old_cnt
;;;68     	{
;;;69     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00001e  f1000006          ADD      r0,r0,#6
000022  f0000007          AND      r0,r0,#7
000026  eb040040          ADD      r0,r4,r0,LSL #1
00002a  8c00              LDRH     r0,[r0,#0x20]
00002c  9000              STR      r0,[sp,#0]
00002e  f44f6760          MOV      r7,#0xe00
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       lc640_read_int
000038  f1000001          ADD      r0,r0,#1
00003c  b285              UXTH     r5,r0
00003e  2d3f              CMP      r5,#0x3f
000040  d901              BLS      |L2.70|
000042  f04f0500          MOV      r5,#0
                  |L2.70|
000046  b229              SXTH     r1,r5
000048  4638              MOV      r0,r7
00004a  f7fffffe          BL       lc640_write_int
;;;70     	else	   			SET_REG(avar_stat,0,3+i,1);
00004e  f6406802          MOV      r8,#0xe02
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       lc640_read_int
000058  b280              UXTH     r0,r0
00005a  283f              CMP      r0,#0x3f
00005c  d000              BEQ      |L2.96|
00005e  4628              MOV      r0,r5                 ;67
                  |L2.96|
000060  b201              SXTH     r1,r0                 ;67
000062  4640              MOV      r0,r8                 ;67
000064  f7fffffe          BL       lc640_write_int
;;;71     	}
;;;72     for(i=29;i<32;i++)
000068  4638              MOV      r0,r7
00006a  f7fffffe          BL       lc640_read_int
;;;73     	{
;;;74     	if(bps[i]._av&0xef)	SET_REG(avar_stat1,1,i-29,1);
00006e  f44f6180          MOV      r1,#0x400
000072  eb011040          ADD      r0,r1,r0,LSL #5
000076  b285              UXTH     r5,r0
000078  f04f0042          MOV      r0,#0x42
00007c  f88d0004          STRB     r0,[sp,#4]
000080  f88d6005          STRB     r6,[sp,#5]
000084  f04f0057          MOV      r0,#0x57
000088  f88d0006          STRB     r0,[sp,#6]
00008c  f04f0600          MOV      r6,#0
000090  f88d6007          STRB     r6,[sp,#7]
000094  a901              ADD      r1,sp,#4
;;;75     	else	   			SET_REG(avar_stat1,0,i-29,1);
000096  4628              MOV      r0,r5
000098  f7fffffe          BL       lc640_write_long_ptr
00009c  7fa0              LDRB     r0,[r4,#0x1e]
00009e  f88d0004          STRB     r0,[sp,#4]
0000a2  7fe0              LDRB     r0,[r4,#0x1f]
0000a4  f88d0005          STRB     r0,[sp,#5]
0000a8  f89d0000          LDRB     r0,[sp,#0]            ;72
0000ac  f88d0006          STRB     r0,[sp,#6]            ;72
;;;76     	}
;;;77     
;;;78     
;;;79     if(uout_av)			SET_REG(avar_stat,1,1,1);
0000b0  f89d0001          LDRB     r0,[sp,#1]
0000b4  f88d0007          STRB     r0,[sp,#7]
0000b8  a901              ADD      r1,sp,#4
0000ba  1d28              ADDS     r0,r5,#4
0000bc  f7fffffe          BL       lc640_write_long_ptr
;;;80     else	   			SET_REG(avar_stat,0,1,1);
0000c0  f1040134          ADD      r1,r4,#0x34
0000c4  f1050008          ADD      r0,r5,#8
;;;81     
;;;82     
;;;83     avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
0000c8  f7fffffe          BL       lc640_write_long_ptr
0000cc  f1040138          ADD      r1,r4,#0x38
0000d0  f105000c          ADD      r0,r5,#0xc
;;;84     
;;;85     avar_ind_stat|=avar_stat_new;
0000d4  f7fffffe          BL       lc640_write_long_ptr
0000d8  4c14              LDR      r4,|L2.300|
0000da  8ba0              LDRH     r0,[r4,#0x1c]
;;;86     
;;;87     avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
0000dc  f88d0004          STRB     r0,[sp,#4]
0000e0  7e20              LDRB     r0,[r4,#0x18]
0000e2  f88d0005          STRB     r0,[sp,#5]
;;;88     
;;;89     if(!AV_OFF_AVT)avar_stat_offed|=0x00000006;
0000e6  7b20              LDRB     r0,[r4,#0xc]
0000e8  f88d0006          STRB     r0,[sp,#6]
0000ec  f88d6007          STRB     r6,[sp,#7]
0000f0  a901              ADD      r1,sp,#4
0000f2  f1050010          ADD      r0,r5,#0x10
;;;90     
;;;91     avar_ind_stat&=avar_stat_offed; 
0000f6  f7fffffe          BL       lc640_write_long_ptr
0000fa  7a20              LDRB     r0,[r4,#8]
0000fc  f88d0004          STRB     r0,[sp,#4]
;;;92     
;;;93     avar_stat_old=avar_stat;
;;;94     
;;;95     
;;;96     avar_stat1_new=(avar_stat1^avar_stat1_old)&avar_stat1;
000100  7920              LDRB     r0,[r4,#4]
000102  f88d0005          STRB     r0,[sp,#5]
000106  7820              LDRB     r0,[r4,#0]
000108  f88d0006          STRB     r0,[sp,#6]
;;;97     
;;;98     avar_ind_stat1|=avar_stat1_new;
00010c  f88d6007          STRB     r6,[sp,#7]
000110  a901              ADD      r1,sp,#4
000112  f1050014          ADD      r0,r5,#0x14
;;;99     
;;;100    avar_stat1_offed=~((avar_stat1^avar_stat1_old)&avar_stat1_old);
000116  e000              B        |L2.282|
                  |L2.280|
000118  e001              B        |L2.286|
                  |L2.282|
00011a  f7fffffe          BL       lc640_write_long_ptr
                  |L2.286|
;;;101    
;;;102    if(!AV_OFF_AVT)avar_stat1_offed|=0x00000000;
;;;103    
;;;104    avar_ind_stat1&=avar_stat1_offed; 
00011e  bf00              NOP      
000120  e8bd81fc          POP      {r2-r8,pc}
;;;105    
;;;106    avar_stat1_old=avar_stat1;
;;;107    }
;;;108    
                          ENDP

                  |L2.292|
                          DCD      bat
                  |L2.296|
                          DCD      bat_u_old_cnt
                  |L2.300|
                          DCD      0x40024020

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  avar_bat_ips_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000004  4602              MOV      r2,r0
000006  48a0              LDR      r0,|L3.648|
000008  4ca0              LDR      r4,|L3.652|
00000a  4ba1              LDR      r3,|L3.656|
00000c  f8df8284          LDR      r8,|L3.660|
000010  f890103d          LDRB     r1,[r0,#0x3d]
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  f04f0742          MOV      r7,#0x42
000018  f44f6560          MOV      r5,#0xe00
;;;66     
;;;67     for(i=0;i<29;i++)
00001c  f04f0900          MOV      r9,#0
;;;68     	{
;;;69     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
000020  f44f6a80          MOV      r10,#0x400
000024  2a01              CMP      r2,#1
000026  d002              BEQ      |L3.46|
000028  2a00              CMP      r2,#0
00002a  d07e              BEQ      |L3.298|
00002c  e129              B        |L3.642|
                  |L3.46|
00002e  f0410101          ORR      r1,r1,#1
000032  f880103d          STRB     r1,[r0,#0x3d]
000036  f04f0001          MOV      r0,#1
00003a  7020              STRB     r0,[r4,#0]
00003c  7018              STRB     r0,[r3,#0]
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       lc640_read_int
000044  f1000001          ADD      r0,r0,#1
000048  b284              UXTH     r4,r0
00004a  2c3f              CMP      r4,#0x3f
00004c  d901              BLS      |L3.82|
;;;70     	else	   			SET_REG(avar_stat,0,3+i,1);
00004e  f04f0400          MOV      r4,#0
                  |L3.82|
000052  b221              SXTH     r1,r4
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       lc640_write_int
00005a  f6406602          MOV      r6,#0xe02
00005e  4630              MOV      r0,r6                 ;67
000060  f7fffffe          BL       lc640_read_int
000064  b281              UXTH     r1,r0                 ;67
000066  293f              CMP      r1,#0x3f              ;67
;;;71     	}
;;;72     for(i=29;i<32;i++)
000068  d000              BEQ      |L3.108|
00006a  4621              MOV      r1,r4
                  |L3.108|
;;;73     	{
;;;74     	if(bps[i]._av&0xef)	SET_REG(avar_stat1,1,i-29,1);
00006c  b209              SXTH     r1,r1
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       lc640_write_int
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       lc640_read_int
00007a  eb0a1040          ADD      r0,r10,r0,LSL #5
00007e  b284              UXTH     r4,r0
000080  f88d7000          STRB     r7,[sp,#0]
000084  f88d9001          STRB     r9,[sp,#1]
000088  f04f0043          MOV      r0,#0x43
00008c  f88d0002          STRB     r0,[sp,#2]
000090  f88d9003          STRB     r9,[sp,#3]
000094  4669              MOV      r1,sp
;;;75     	else	   			SET_REG(avar_stat1,0,i-29,1);
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       lc640_write_long_ptr
00009c  f8cd9000          STR      r9,[sp,#0]
0000a0  4669              MOV      r1,sp
0000a2  1d20              ADDS     r0,r4,#4
0000a4  f7fffffe          BL       lc640_write_long_ptr
0000a8  f8b8003c          LDRH     r0,[r8,#0x3c]         ;72
0000ac  f88d0000          STRB     r0,[sp,#0]            ;72
;;;76     	}
;;;77     
;;;78     
;;;79     if(uout_av)			SET_REG(avar_stat,1,1,1);
0000b0  f8980038          LDRB     r0,[r8,#0x38]
0000b4  f88d0001          STRB     r0,[sp,#1]
0000b8  f898002c          LDRB     r0,[r8,#0x2c]
0000bc  f88d0002          STRB     r0,[sp,#2]
;;;80     else	   			SET_REG(avar_stat,0,1,1);
0000c0  f88d9003          STRB     r9,[sp,#3]
0000c4  4669              MOV      r1,sp
0000c6  f1040008          ADD      r0,r4,#8
;;;81     
;;;82     
;;;83     avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
0000ca  f7fffffe          BL       lc640_write_long_ptr
0000ce  f8980028          LDRB     r0,[r8,#0x28]
0000d2  f88d0000          STRB     r0,[sp,#0]
;;;84     
;;;85     avar_ind_stat|=avar_stat_new;
0000d6  f8980024          LDRB     r0,[r8,#0x24]
0000da  f88d0001          STRB     r0,[sp,#1]
;;;86     
;;;87     avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
0000de  f8980020          LDRB     r0,[r8,#0x20]
0000e2  f88d0002          STRB     r0,[sp,#2]
;;;88     
;;;89     if(!AV_OFF_AVT)avar_stat_offed|=0x00000006;
0000e6  f88d9003          STRB     r9,[sp,#3]
0000ea  4669              MOV      r1,sp
0000ec  f104000c          ADD      r0,r4,#0xc
0000f0  f7fffffe          BL       lc640_write_long_ptr
0000f4  f04f0541          MOV      r5,#0x41
;;;90     
;;;91     avar_ind_stat&=avar_stat_offed; 
0000f8  f88d5000          STRB     r5,[sp,#0]
0000fc  f88d5001          STRB     r5,[sp,#1]
;;;92     
;;;93     avar_stat_old=avar_stat;
;;;94     
;;;95     
;;;96     avar_stat1_new=(avar_stat1^avar_stat1_old)&avar_stat1;
000100  f88d5002          STRB     r5,[sp,#2]
000104  f88d5003          STRB     r5,[sp,#3]
000108  4669              MOV      r1,sp
00010a  f1040010          ADD      r0,r4,#0x10
;;;97     
;;;98     avar_ind_stat1|=avar_stat1_new;
00010e  f7fffffe          BL       lc640_write_long_ptr
000112  f88d5000          STRB     r5,[sp,#0]
;;;99     
;;;100    avar_stat1_offed=~((avar_stat1^avar_stat1_old)&avar_stat1_old);
000116  f88d5001          STRB     r5,[sp,#1]
00011a  f88d5002          STRB     r5,[sp,#2]
;;;101    
;;;102    if(!AV_OFF_AVT)avar_stat1_offed|=0x00000000;
;;;103    
;;;104    avar_ind_stat1&=avar_stat1_offed; 
00011e  f88d5003          STRB     r5,[sp,#3]
000122  4669              MOV      r1,sp
;;;105    
;;;106    avar_stat1_old=avar_stat1;
000124  f1040014          ADD      r0,r4,#0x14
;;;107    }
000128  e000              B        |L3.300|
                  |L3.298|
00012a  e022              B        |L3.370|
                  |L3.300|
00012c  f7fffffe          BL       lc640_write_long_ptr
000130  f88d5000          STRB     r5,[sp,#0]
000134  f88d5001          STRB     r5,[sp,#1]
000138  f88d5002          STRB     r5,[sp,#2]
00013c  f88d5003          STRB     r5,[sp,#3]
000140  4669              MOV      r1,sp
000142  f1040018          ADD      r0,r4,#0x18
000146  f7fffffe          BL       lc640_write_long_ptr
00014a  f88d5000          STRB     r5,[sp,#0]
00014e  f88d5001          STRB     r5,[sp,#1]
000152  f88d5002          STRB     r5,[sp,#2]
000156  f88d5003          STRB     r5,[sp,#3]
00015a  4669              MOV      r1,sp
00015c  f104001c          ADD      r0,r4,#0x1c
000160  f7fffffe          BL       lc640_write_long_ptr
000164  2301              MOVS     r3,#1
000166  461a              MOV      r2,r3
000168  2105              MOVS     r1,#5
00016a  a04b              ADR      r0,|L3.664|
00016c  f7fffffe          BL       snmp_trap_send
000170  e087              B        |L3.642|
                  |L3.370|
000172  f0210101          BIC      r1,r1,#1
000176  f880103d          STRB     r1,[r0,#0x3d]
00017a  f8849000          STRB     r9,[r4,#0]
00017e  f8839000          STRB     r9,[r3,#0]
000182  4628              MOV      r0,r5
000184  f7fffffe          BL       lc640_read_int
000188  b286              UXTH     r6,r0
00018a  4634              MOV      r4,r6
                  |L3.396|
00018c  eb0a1044          ADD      r0,r10,r4,LSL #5
000190  b285              UXTH     r5,r0
000192  4669              MOV      r1,sp
000194  4628              MOV      r0,r5
000196  f7fffffe          BL       lc640_read_long_ptr
00019a  f89d0000          LDRB     r0,[sp,#0]
00019e  2842              CMP      r0,#0x42
0001a0  d106              BNE      |L3.432|
0001a2  f89d0001          LDRB     r0,[sp,#1]
0001a6  b918              CBNZ     r0,|L3.432|
0001a8  f89d0002          LDRB     r0,[sp,#2]
0001ac  2843              CMP      r0,#0x43
0001ae  d009              BEQ      |L3.452|
                  |L3.432|
0001b0  b11c              CBZ      r4,|L3.442|
0001b2  f1a40401          SUB      r4,r4,#1
0001b6  b2a4              UXTH     r4,r4
0001b8  e001              B        |L3.446|
                  |L3.442|
0001ba  f04f043f          MOV      r4,#0x3f
                  |L3.446|
0001be  42b4              CMP      r4,r6
0001c0  d1e4              BNE      |L3.396|
0001c2  e05e              B        |L3.642|
                  |L3.452|
0001c4  4669              MOV      r1,sp
0001c6  f1050010          ADD      r0,r5,#0x10
0001ca  f7fffffe          BL       lc640_read_long_ptr
0001ce  f89d0000          LDRB     r0,[sp,#0]
0001d2  2841              CMP      r0,#0x41
0001d4  d10b              BNE      |L3.494|
0001d6  f89d0001          LDRB     r0,[sp,#1]
0001da  2841              CMP      r0,#0x41
0001dc  d107              BNE      |L3.494|
0001de  f89d0002          LDRB     r0,[sp,#2]
0001e2  2841              CMP      r0,#0x41
0001e4  d103              BNE      |L3.494|
0001e6  f89d0003          LDRB     r0,[sp,#3]
0001ea  2841              CMP      r0,#0x41
0001ec  d009              BEQ      |L3.514|
                  |L3.494|
0001ee  b11c              CBZ      r4,|L3.504|
0001f0  f1a40401          SUB      r4,r4,#1
0001f4  b2a4              UXTH     r4,r4
0001f6  e001              B        |L3.508|
                  |L3.504|
0001f8  f04f043f          MOV      r4,#0x3f
                  |L3.508|
0001fc  42b4              CMP      r4,r6
0001fe  d1c5              BNE      |L3.396|
000200  e03f              B        |L3.642|
                  |L3.514|
000202  f8b8003c          LDRH     r0,[r8,#0x3c]
000206  f88d0000          STRB     r0,[sp,#0]
00020a  f8980038          LDRB     r0,[r8,#0x38]
00020e  f88d0001          STRB     r0,[sp,#1]
000212  f898002c          LDRB     r0,[r8,#0x2c]
000216  f88d0002          STRB     r0,[sp,#2]
00021a  f88d9003          STRB     r9,[sp,#3]
00021e  4669              MOV      r1,sp
000220  f1050010          ADD      r0,r5,#0x10
000224  f7fffffe          BL       lc640_write_long_ptr
000228  f8980028          LDRB     r0,[r8,#0x28]
00022c  f88d0000          STRB     r0,[sp,#0]
000230  f8980024          LDRB     r0,[r8,#0x24]
000234  f88d0001          STRB     r0,[sp,#1]
000238  f8980020          LDRB     r0,[r8,#0x20]
00023c  f88d0002          STRB     r0,[sp,#2]
000240  f88d9003          STRB     r9,[sp,#3]
000244  4669              MOV      r1,sp
000246  f1050014          ADD      r0,r5,#0x14
00024a  f7fffffe          BL       lc640_write_long_ptr
00024e  f88d7000          STRB     r7,[sp,#0]
000252  f88d7001          STRB     r7,[sp,#1]
000256  f88d7002          STRB     r7,[sp,#2]
00025a  f88d7003          STRB     r7,[sp,#3]
00025e  4669              MOV      r1,sp
000260  f1050018          ADD      r0,r5,#0x18
000264  f7fffffe          BL       lc640_write_long_ptr
000268  f88d7000          STRB     r7,[sp,#0]
00026c  f88d7001          STRB     r7,[sp,#1]
000270  f88d7002          STRB     r7,[sp,#2]
000274  f88d7003          STRB     r7,[sp,#3]
000278  4669              MOV      r1,sp
00027a  f105001c          ADD      r0,r5,#0x1c
00027e  f7fffffe          BL       lc640_write_long_ptr
                  |L3.642|
000282  bf00              NOP      
000284  e8bd8ff8          POP      {r3-r11,pc}
;;;108    
                          ENDP

                  |L3.648|
                          DCD      bat_ips
                  |L3.652|
                          DCD      ips_bat_av_stat
                  |L3.656|
                          DCD      ips_bat_av_vzvod
                  |L3.660|
                          DCD      0x40024000
                  |L3.664|
000298  42415420          DCB      "BAT ",185,"1 Alarm, lost",0
00029c  b9312041
0002a0  6c61726d
0002a4  2c206c6f
0002a8  737400  
0002ab  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  avar_stat
                          DCD      0x00000000
                  avar_stat1
                          DCD      0x00000000
                  avar_ind_stat
                          DCD      0x00000000
                  avar_ind_stat1
                          DCD      0x00000000
                  avar_stat_old
                          DCD      0x00000000
                  avar_stat1_old
                          DCD      0x00000000
                  avar_stat_new
                          DCD      0x00000000
                  avar_stat_offed
                          DCD      0x00000000
                  avar_stat1_new
                          DCD      0x00000000
                  avar_stat1_offed
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  av_inv
                          DCDU     0x00000000
000004  0000              DCB      0x00,0x00
