; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\avar_hndl.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\avar_hndl.d --feedback=.\EXE\UKU_VD.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_VD -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x --omf_browse=.\EXE\avar_hndl.crf avar_hndl.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  avar_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  b530              PUSH     {r4,r5,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000002  48ff              LDR      r0,|L1.1024|
000004  4aff              LDR      r2,|L1.1028|
000006  7801              LDRB     r1,[r0,#0]  ; net_av
000008  6810              LDR      r0,[r2,#0]
00000a  b119              CBZ      r1,|L1.20|
00000c  f0400001          ORR      r0,r0,#1
000010  6010              STR      r0,[r2,#0]  ; avar_stat
000012  e002              B        |L1.26|
                  |L1.20|
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  f0200001          BIC      r0,r0,#1
000018  6010              STR      r0,[r2,#0]  ; avar_stat
                  |L1.26|
;;;66     
;;;67     for(i=0;i<2;i++)
00001a  f04f0000          MOV      r0,#0
;;;68     	{
;;;69     	if(bat[i]._av&1)	SET_REG(avar_stat,1,1+i,1);
00001e  4cfa              LDR      r4,|L1.1032|
000020  f04f0301          MOV      r3,#1
                  |L1.36|
000024  eb000140          ADD      r1,r0,r0,LSL #1
000028  eb011100          ADD      r1,r1,r0,LSL #4
00002c  eb040181          ADD      r1,r4,r1,LSL #2
000030  f891103d          LDRB     r1,[r1,#0x3d]
000034  07c9              LSLS     r1,r1,#31
000036  d00a              BEQ      |L1.78|
000038  f1000501          ADD      r5,r0,#1
00003c  fa03f105          LSL      r1,r3,r5
000040  6815              LDR      r5,[r2,#0]  ; avar_stat
000042  ea250501          BIC      r5,r5,r1
000046  ea450501          ORR      r5,r5,r1
00004a  6015              STR      r5,[r2,#0]  ; avar_stat
00004c  e007              B        |L1.94|
                  |L1.78|
;;;70     	else	   		SET_REG(avar_stat,0,1+i,1);
00004e  f1000501          ADD      r5,r0,#1
000052  fa03f105          LSL      r1,r3,r5
000056  6815              LDR      r5,[r2,#0]  ; avar_stat
000058  ea250501          BIC      r5,r5,r1
00005c  6015              STR      r5,[r2,#0]  ; avar_stat
                  |L1.94|
00005e  f1000001          ADD      r0,r0,#1              ;67
000062  b2c0              UXTB     r0,r0                 ;67
000064  2802              CMP      r0,#2                 ;67
000066  d3dd              BCC      |L1.36|
;;;71     	}
;;;72     
;;;73     for(i=0;i<12;i++)
000068  f04f0000          MOV      r0,#0
;;;74     	{
;;;75     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00006c  4ce7              LDR      r4,|L1.1036|
                  |L1.110|
00006e  eb000180          ADD      r1,r0,r0,LSL #2
000072  eb0101c0          ADD      r1,r1,r0,LSL #3
000076  eb0401c1          ADD      r1,r4,r1,LSL #3
00007a  7849              LDRB     r1,[r1,#1]
00007c  f0110fef          TST      r1,#0xef
000080  d00a              BEQ      |L1.152|
000082  f1000503          ADD      r5,r0,#3
000086  fa03f105          LSL      r1,r3,r5
00008a  6815              LDR      r5,[r2,#0]  ; avar_stat
00008c  ea250501          BIC      r5,r5,r1
000090  ea450501          ORR      r5,r5,r1
000094  6015              STR      r5,[r2,#0]  ; avar_stat
000096  e007              B        |L1.168|
                  |L1.152|
;;;76     	else	   		SET_REG(avar_stat,0,3+i,1);
000098  f1000103          ADD      r1,r0,#3
00009c  fa03f501          LSL      r5,r3,r1
0000a0  6811              LDR      r1,[r2,#0]  ; avar_stat
0000a2  ea210105          BIC      r1,r1,r5
0000a6  6011              STR      r1,[r2,#0]  ; avar_stat
                  |L1.168|
0000a8  f1000001          ADD      r0,r0,#1              ;73
0000ac  b2c0              UXTB     r0,r0                 ;73
0000ae  280c              CMP      r0,#0xc               ;73
0000b0  d3dd              BCC      |L1.110|
;;;77     	}
;;;78     
;;;79     for(i=0;i<6;i++)
0000b2  f04f0000          MOV      r0,#0
;;;80     	{
;;;81     	if(av_inv[i])	SET_REG(avar_stat,1,15+i,1);
0000b6  4cd3              LDR      r4,|L1.1028|
0000b8  f1040414          ADD      r4,r4,#0x14
                  |L1.188|
0000bc  5c21              LDRB     r1,[r4,r0]
0000be  b151              CBZ      r1,|L1.214|
0000c0  f100050f          ADD      r5,r0,#0xf
0000c4  fa03f105          LSL      r1,r3,r5
0000c8  6815              LDR      r5,[r2,#0]  ; avar_stat
0000ca  ea250501          BIC      r5,r5,r1
0000ce  ea450501          ORR      r5,r5,r1
0000d2  6015              STR      r5,[r2,#0]  ; avar_stat
0000d4  e007              B        |L1.230|
                  |L1.214|
;;;82     	else	   		SET_REG(avar_stat,0,15+i,1);
0000d6  f100010f          ADD      r1,r0,#0xf
0000da  6815              LDR      r5,[r2,#0]  ; avar_stat
0000dc  fa03f101          LSL      r1,r3,r1
0000e0  ea250501          BIC      r5,r5,r1
0000e4  6015              STR      r5,[r2,#0]  ; avar_stat
                  |L1.230|
0000e6  f1000001          ADD      r0,r0,#1              ;79
0000ea  b2c0              UXTB     r0,r0                 ;79
0000ec  2806              CMP      r0,#6                 ;79
0000ee  d3e5              BCC      |L1.188|
;;;83     	}
;;;84     
;;;85     /*for(i=0;i<4;i++)
;;;86     	{
;;;87     	if(av_dt[i])	SET_REG(avar_stat,1,21+i,1);
;;;88     	else	   		SET_REG(avar_stat,0,21+i,1);
;;;89     	}  */
;;;90     for(i=0;i<4;i++)
0000f0  f04f0000          MOV      r0,#0
;;;91     	{
;;;92     	if(sk_av_stat[i]==sasON)	SET_REG(avar_stat,1,24+i,1);
0000f4  4dc6              LDR      r5,|L1.1040|
0000f6  461c              MOV      r4,r3                 ;69
                  |L1.248|
0000f8  5c29              LDRB     r1,[r5,r0]
0000fa  2901              CMP      r1,#1
0000fc  d014              BEQ      |L1.296|
;;;93     	else	   		SET_REG(avar_stat,0,24+i,1);
0000fe  f1000118          ADD      r1,r0,#0x18
000102  fa04f301          LSL      r3,r4,r1
000106  6811              LDR      r1,[r2,#0]  ; avar_stat
000108  ea210103          BIC      r1,r1,r3
00010c  6011              STR      r1,[r2,#0]  ; avar_stat
                  |L1.270|
00010e  f1000001          ADD      r0,r0,#1              ;90
000112  b2c0              UXTB     r0,r0                 ;90
000114  2804              CMP      r0,#4                 ;90
000116  d3ef              BCC      |L1.248|
;;;94     	}
;;;95     
;;;96     if(uout_av)			SET_REG(avar_stat,1,28,1);
000118  48be              LDR      r0,|L1.1044|
00011a  7800              LDRB     r0,[r0,#0]  ; uout_av
00011c  b178              CBZ      r0,|L1.318|
00011e  6810              LDR      r0,[r2,#0]  ; avar_stat
000120  f0405080          ORR      r0,r0,#0x10000000
000124  6010              STR      r0,[r2,#0]  ; avar_stat
000126  e00e              B        |L1.326|
                  |L1.296|
000128  f1000318          ADD      r3,r0,#0x18           ;92
00012c  fa04f103          LSL      r1,r4,r3              ;92
000130  6813              LDR      r3,[r2,#0]            ;92  ; avar_stat
000132  ea230301          BIC      r3,r3,r1              ;92
000136  ea430301          ORR      r3,r3,r1              ;92
00013a  6013              STR      r3,[r2,#0]            ;92  ; avar_stat
00013c  e7e7              B        |L1.270|
                  |L1.318|
;;;97     else	   			SET_REG(avar_stat,0,28,1);
00013e  6810              LDR      r0,[r2,#0]  ; avar_stat
000140  f0205080          BIC      r0,r0,#0x10000000
000144  6010              STR      r0,[r2,#0]  ; avar_stat
                  |L1.326|
;;;98     
;;;99     
;;;100    avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
000146  6894              LDR      r4,[r2,#8]  ; avar_stat_old
000148  6810              LDR      r0,[r2,#0]  ; avar_stat
00014a  ea200104          BIC      r1,r0,r4
00014e  60d1              STR      r1,[r2,#0xc]  ; avar_stat_new
;;;101    
;;;102    avar_ind_stat|=avar_stat_new;
000150  6853              LDR      r3,[r2,#4]  ; avar_ind_stat
000152  ea430301          ORR      r3,r3,r1
000156  6053              STR      r3,[r2,#4]  ; avar_ind_stat
;;;103    
;;;104    if((SK_ZVUK_EN[0])) avar_ind_stat&=(~(1UL<<24));
000158  49af              LDR      r1,|L1.1048|
00015a  880d              LDRH     r5,[r1,#0]  ; SK_ZVUK_EN
00015c  b115              CBZ      r5,|L1.356|
00015e  f0237380          BIC      r3,r3,#0x1000000
000162  6053              STR      r3,[r2,#4]  ; avar_ind_stat
                  |L1.356|
;;;105    if((SK_ZVUK_EN[1])) avar_ind_stat&=(~(1UL<<25));
000164  884b              LDRH     r3,[r1,#2]  ; SK_ZVUK_EN
000166  b11b              CBZ      r3,|L1.368|
000168  6853              LDR      r3,[r2,#4]  ; avar_ind_stat
00016a  f0237300          BIC      r3,r3,#0x2000000
00016e  6053              STR      r3,[r2,#4]  ; avar_ind_stat
                  |L1.368|
;;;106    if((SK_ZVUK_EN[2])) avar_ind_stat&=(~(1UL<<26));
000170  888b              LDRH     r3,[r1,#4]  ; SK_ZVUK_EN
000172  b11b              CBZ      r3,|L1.380|
000174  6853              LDR      r3,[r2,#4]  ; avar_ind_stat
000176  f0236380          BIC      r3,r3,#0x4000000
00017a  6053              STR      r3,[r2,#4]  ; avar_ind_stat
                  |L1.380|
;;;107    if((SK_ZVUK_EN[3])) avar_ind_stat&=(~(1UL<<27));	
00017c  88c9              LDRH     r1,[r1,#6]  ; SK_ZVUK_EN
00017e  b119              CBZ      r1,|L1.392|
000180  6851              LDR      r1,[r2,#4]  ; avar_ind_stat
000182  f0216100          BIC      r1,r1,#0x8000000
000186  6051              STR      r1,[r2,#4]  ; avar_ind_stat
                  |L1.392|
;;;108    
;;;109    
;;;110    avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
000188  ea240400          BIC      r4,r4,r0
00018c  ea6f0104          MVN      r1,r4
000190  6111              STR      r1,[r2,#0x10]  ; avar_stat_offed
;;;111    
;;;112    if(!AV_OFF_AVT)avar_stat_offed|=0xeffffffe;
000192  4ba2              LDR      r3,|L1.1052|
000194  881b              LDRH     r3,[r3,#0]  ; AV_OFF_AVT
000196  b91b              CBNZ     r3,|L1.416|
000198  4ba1              LDR      r3,|L1.1056|
00019a  ea410103          ORR      r1,r1,r3
00019e  6111              STR      r1,[r2,#0x10]  ; avar_stat_offed
                  |L1.416|
;;;113    
;;;114    avar_ind_stat&=avar_stat_offed; 
0001a0  6913              LDR      r3,[r2,#0x10]  ; avar_stat_offed
0001a2  6851              LDR      r1,[r2,#4]  ; avar_ind_stat
0001a4  ea010103          AND      r1,r1,r3
0001a8  6051              STR      r1,[r2,#4]  ; avar_ind_stat
;;;115    
;;;116    avar_stat_old=avar_stat;
0001aa  6090              STR      r0,[r2,#8]  ; avar_stat_old
;;;117    }
0001ac  bd30              POP      {r4,r5,pc}
;;;118    
                          ENDP

                  reload_hndl PROC
;;;119    //-----------------------------------------------
;;;120    void reload_hndl(void)
0001ae  b5f8              PUSH     {r3-r7,lr}
;;;121    {
;;;122    char data[4];
;;;123    unsigned int event_ptr,lc640_adr/*,event_ptr_find*/,event_cnt;
;;;124    
;;;125    event_ptr=lc640_read_int(PTR_EVENT_LOG);
0001b0  f44f6560          MOV      r5,#0xe00
0001b4  4628              MOV      r0,r5
0001b6  f7fffffe          BL       lc640_read_int
;;;126    event_ptr++;	
0001ba  f1000001          ADD      r0,r0,#1
0001be  4604              MOV      r4,r0
;;;127    if(event_ptr>63)event_ptr=0;	
0001c0  2c3f              CMP      r4,#0x3f
0001c2  d901              BLS      |L1.456|
0001c4  f04f0400          MOV      r4,#0
                  |L1.456|
;;;128    lc640_write_int(PTR_EVENT_LOG,event_ptr);	
0001c8  b221              SXTH     r1,r4
0001ca  4628              MOV      r0,r5
0001cc  f7fffffe          BL       lc640_write_int
;;;129    	
;;;130    event_cnt=lc640_read_int(CNT_EVENT_LOG);
0001d0  f6406602          MOV      r6,#0xe02
0001d4  4630              MOV      r0,r6
0001d6  f7fffffe          BL       lc640_read_int
;;;131    if(event_cnt!=63)event_cnt=event_ptr;
0001da  283f              CMP      r0,#0x3f
0001dc  d000              BEQ      |L1.480|
0001de  4620              MOV      r0,r4
                  |L1.480|
;;;132    lc640_write_int(CNT_EVENT_LOG,event_cnt); 
0001e0  b201              SXTH     r1,r0
0001e2  4630              MOV      r0,r6
0001e4  f7fffffe          BL       lc640_write_int
;;;133    	
;;;134    lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
0001e8  4628              MOV      r0,r5
0001ea  f7fffffe          BL       lc640_read_int
0001ee  f44f6180          MOV      r1,#0x400
0001f2  eb011440          ADD      r4,r1,r0,LSL #5
;;;135    	
;;;136    data[0]='U';
0001f6  f04f0055          MOV      r0,#0x55
0001fa  f88d0000          STRB     r0,[sp,#0]
;;;137    data[1]=0;
0001fe  f04f0600          MOV      r6,#0
000202  f88d6001          STRB     r6,[sp,#1]
;;;138    data[2]='R';
000206  f04f0052          MOV      r0,#0x52
00020a  f88d0002          STRB     r0,[sp,#2]
;;;139    data[3]=0;
00020e  f88d6003          STRB     r6,[sp,#3]
;;;140    lc640_write_long_ptr(lc640_adr,data);
000212  4669              MOV      r1,sp
000214  4620              MOV      r0,r4
000216  f7fffffe          BL       lc640_write_long_ptr
;;;141    
;;;142    data[0]=0;
;;;143    data[1]=0;
;;;144    data[2]=0;
;;;145    data[3]=0;
00021a  9600              STR      r6,[sp,#0]
;;;146    lc640_write_long_ptr(lc640_adr+4,data);
00021c  4669              MOV      r1,sp
00021e  1d20              ADDS     r0,r4,#4
000220  f7fffffe          BL       lc640_write_long_ptr
;;;147    
;;;148    data[0]=LPC_RTC->YEAR;
000224  4d7f              LDR      r5,|L1.1060|
000226  8ba8              LDRH     r0,[r5,#0x1c]
000228  f88d0000          STRB     r0,[sp,#0]
;;;149    data[1]=LPC_RTC->MONTH;
00022c  7e28              LDRB     r0,[r5,#0x18]
00022e  f88d0001          STRB     r0,[sp,#1]
;;;150    data[2]=LPC_RTC->DOM;
000232  7b28              LDRB     r0,[r5,#0xc]
000234  f88d0002          STRB     r0,[sp,#2]
;;;151    data[3]=0;
000238  f88d6003          STRB     r6,[sp,#3]
;;;152    lc640_write_long_ptr(lc640_adr+8,data);
00023c  4669              MOV      r1,sp
00023e  f1040008          ADD      r0,r4,#8
000242  f7fffffe          BL       lc640_write_long_ptr
;;;153    
;;;154    data[0]=LPC_RTC->HOUR;
000246  7a28              LDRB     r0,[r5,#8]
000248  f88d0000          STRB     r0,[sp,#0]
;;;155    data[1]=LPC_RTC->MIN;
00024c  7928              LDRB     r0,[r5,#4]
00024e  f88d0001          STRB     r0,[sp,#1]
;;;156    data[2]=LPC_RTC->SEC;
000252  7828              LDRB     r0,[r5,#0]
000254  f88d0002          STRB     r0,[sp,#2]
;;;157    data[3]=LPC_SC->RSID;
000258  4873              LDR      r0,|L1.1064|
00025a  f8d00180          LDR      r0,[r0,#0x180]
00025e  f88d0003          STRB     r0,[sp,#3]
;;;158    
;;;159    lc640_write_long_ptr(lc640_adr+12,data);
000262  4669              MOV      r1,sp
000264  f104000c          ADD      r0,r4,#0xc
000268  f7fffffe          BL       lc640_write_long_ptr
;;;160    	
;;;161    data[0]='A';
00026c  f04f0541          MOV      r5,#0x41
000270  f88d5000          STRB     r5,[sp,#0]
;;;162    data[1]='A';
000274  f88d5001          STRB     r5,[sp,#1]
;;;163    data[2]='A';
000278  f88d5002          STRB     r5,[sp,#2]
;;;164    data[3]='A';
00027c  f88d5003          STRB     r5,[sp,#3]
;;;165    lc640_write_long_ptr(lc640_adr+16,data);
000280  4669              MOV      r1,sp
000282  f1040010          ADD      r0,r4,#0x10
000286  f7fffffe          BL       lc640_write_long_ptr
;;;166    	
;;;167    data[0]='A';
00028a  f88d5000          STRB     r5,[sp,#0]
;;;168    data[1]='A';
00028e  f88d5001          STRB     r5,[sp,#1]
;;;169    data[2]='A';
000292  f88d5002          STRB     r5,[sp,#2]
;;;170    data[3]='A';
000296  f88d5003          STRB     r5,[sp,#3]
;;;171    lc640_write_long_ptr(lc640_adr+20,data);
00029a  4669              MOV      r1,sp
00029c  f1040014          ADD      r0,r4,#0x14
0002a0  f7fffffe          BL       lc640_write_long_ptr
;;;172    	
;;;173    data[0]='A';
0002a4  f88d5000          STRB     r5,[sp,#0]
;;;174    data[1]='A';
0002a8  f88d5001          STRB     r5,[sp,#1]
;;;175    data[2]='A';
0002ac  f88d5002          STRB     r5,[sp,#2]
;;;176    data[3]='A';
0002b0  f88d5003          STRB     r5,[sp,#3]
;;;177    lc640_write_long_ptr(lc640_adr+24,data);
0002b4  4669              MOV      r1,sp
0002b6  f1040018          ADD      r0,r4,#0x18
0002ba  f7fffffe          BL       lc640_write_long_ptr
;;;178    	
;;;179    data[0]='A';
0002be  f88d5000          STRB     r5,[sp,#0]
;;;180    data[1]='A';
0002c2  f88d5001          STRB     r5,[sp,#1]
;;;181    data[2]='A';
0002c6  f88d5002          STRB     r5,[sp,#2]
;;;182    data[3]='A';
0002ca  f88d5003          STRB     r5,[sp,#3]
;;;183    lc640_write_long_ptr(lc640_adr+28,data);				
0002ce  4669              MOV      r1,sp
0002d0  f104001c          ADD      r0,r4,#0x1c
0002d4  f7fffffe          BL       lc640_write_long_ptr
;;;184    	
;;;185    	
;;;186    }
0002d8  bdf8              POP      {r3-r7,pc}
;;;187    
                          ENDP

                  avar_bps_hndl PROC
;;;336    //-----------------------------------------------
;;;337    void avar_bps_hndl(char dev, char v, char in)
0002da  e92d4ff8          PUSH     {r3-r11,lr}
;;;338    {
0002de  4606              MOV      r6,r0
0002e0  460c              MOV      r4,r1
;;;339    char data[4];
;;;340    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;341    char avar_simbol;
;;;342    
;;;343    avar_simbol='T';
0002e2  f04f0754          MOV      r7,#0x54
;;;344    if(v==0)avar_simbol='T';
0002e6  b174              CBZ      r4,|L1.774|
;;;345    else if(v==1)avar_simbol='U';
0002e8  2c01              CMP      r4,#1
0002ea  d004              BEQ      |L1.758|
;;;346    else if(v==2)avar_simbol='u';
0002ec  2c02              CMP      r4,#2
0002ee  d005              BEQ      |L1.764|
;;;347    else if(v==3)avar_simbol='L';
0002f0  2c03              CMP      r4,#3
0002f2  d006              BEQ      |L1.770|
0002f4  e007              B        |L1.774|
                  |L1.758|
0002f6  f04f0755          MOV      r7,#0x55              ;345
0002fa  e004              B        |L1.774|
                  |L1.764|
0002fc  f04f0775          MOV      r7,#0x75              ;346
000300  e001              B        |L1.774|
                  |L1.770|
000302  f04f074c          MOV      r7,#0x4c
                  |L1.774|
;;;348    
;;;349    if(in==1)
;;;350    	{
;;;351    	//av_src[bps]=1;
;;;352    
;;;353    //	SET_REG(avar_ind_stat,1,3+dev,1);
;;;354    //	SET_REG(avar_stat,1,3+dev,1);
;;;355    	
;;;356    	if(v==0)bps[dev]._av|=(1<<0);
;;;357    	else if(v==1) bps[dev]._av|=(1<<1);
;;;358    	else if(v==2) bps[dev]._av|=(1<<2);
;;;359    	else if(v==3) bps[dev]._av|=(1<<3);
;;;360    
;;;361    	bps[dev]._last_avar=v;
;;;362    
;;;363    	//beep_init(0x33333333,'A');
;;;364    
;;;365    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;366    	event_ptr++;	
;;;367    	if(event_ptr>63)event_ptr=0;	
;;;368    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;369    	
;;;370         event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;371    	if(event_cnt!=63)event_cnt=event_ptr;
;;;372    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;373    	
;;;374    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;375    	
;;;376    	data[0]='S';
;;;377    	data[1]=dev; 
;;;378    	data[2]=avar_simbol;
;;;379    	data[3]=0;
;;;380    	lc640_write_long_ptr(lc640_adr,data);
;;;381    
;;;382    	data[0]=0;
;;;383    	data[1]=0;
;;;384    	data[2]=0;
;;;385    	data[3]=0;
;;;386    	lc640_write_long_ptr(lc640_adr+4,data);
;;;387    
;;;388    	data[0]=LPC_RTC->YEAR;
000306  f8df811c          LDR      r8,|L1.1060|
00030a  4840              LDR      r0,|L1.1036|
00030c  eb060186          ADD      r1,r6,r6,LSL #2       ;356
000310  eb0101c6          ADD      r1,r1,r6,LSL #3       ;356
000314  f04f0900          MOV      r9,#0                 ;338
000318  f1a80820          SUB      r8,r8,#0x20
00031c  f44f6a60          MOV      r10,#0xe00            ;365
000320  f44f6580          MOV      r5,#0x400             ;374
000324  eb0000c1          ADD      r0,r0,r1,LSL #3       ;356
000328  2a01              CMP      r2,#1                 ;349
00032a  d002              BEQ      |L1.818|
;;;389    	data[1]=LPC_RTC->MONTH;
;;;390    	data[2]=LPC_RTC->DOM;
;;;391    	data[3]=0;
;;;392    	lc640_write_long_ptr(lc640_adr+8,data);
;;;393    
;;;394    	data[0]=LPC_RTC->HOUR;
;;;395    	data[1]=LPC_RTC->MIN;
;;;396    	data[2]=LPC_RTC->SEC;
;;;397    	data[3]=0;
;;;398    	lc640_write_long_ptr(lc640_adr+12,data);
;;;399    	
;;;400    	data[0]='A';
;;;401    	data[1]='A';
;;;402    	data[2]='A';
;;;403    	data[3]='A';
;;;404    	lc640_write_long_ptr(lc640_adr+16,data);
;;;405    	
;;;406    	data[0]='A';
;;;407    	data[1]='A';
;;;408    	data[2]='A';
;;;409    	data[3]='A';
;;;410    	lc640_write_long_ptr(lc640_adr+20,data);
;;;411    	
;;;412    	data[0]='A';
;;;413    	data[1]='A';
;;;414    	data[2]='A';
;;;415    	data[3]='A';
;;;416    	lc640_write_long_ptr(lc640_adr+24,data);
;;;417    	
;;;418    	data[0]='A';
;;;419    	data[1]='A';
;;;420    	data[2]='A';
;;;421    	data[3]='A';
;;;422    	lc640_write_long_ptr(lc640_adr+28,data);		
;;;423    
;;;424    
;;;425    	if(dev==0)
;;;426    		{
;;;427    		if(v==0)
;;;428    		snmp_trap_send("BPS #1 Alarm, overheat",4,1,0);
;;;429    		else if(v==1)
;;;430    		snmp_trap_send("BPS #1 Alarm, voltage is up",4,1,1);
;;;431    		else if(v==2)
;;;432    		snmp_trap_send("BPS #1 Alarm, voltage is down",4,1,2);
;;;433    		else if(v==3)
;;;434    		snmp_trap_send("BPS #1 Alarm, connect is lost",4,1,3);
;;;435    		}
;;;436    	else if(dev==1)
;;;437    		{
;;;438    		if(v==0)
;;;439    		snmp_trap_send("BPS #2 Alarm, overheat",4,2,0);
;;;440    		else if(v==1)
;;;441    		snmp_trap_send("BPS #2 Alarm, voltage is up",4,2,1);
;;;442    		else if(v==2)
;;;443    		snmp_trap_send("BPS #2 Alarm, voltage is down",4,2,2);
;;;444    		else if(v==3)
;;;445    		snmp_trap_send("BPS #2 Alarm, connect is lost",4,2,3);
;;;446    		} 
;;;447    	else if(dev==2)
;;;448    		{
;;;449    		if(v==0)
;;;450    		snmp_trap_send("BPS #3 Alarm, overheat",4,3,0);
;;;451    		else if(v==1)
;;;452    		snmp_trap_send("BPS #3 Alarm, voltage is up",4,3,1);
;;;453    		else if(v==2)
;;;454    		snmp_trap_send("BPS #3 Alarm, voltage is down",4,3,2);
;;;455    		else if(v==3)
;;;456    		snmp_trap_send("BPS #3 Alarm, connect is lost",4,3,3);
;;;457    		} 	
;;;458    			
;;;459    	}
;;;460    
;;;461    else if(in==0)
00032c  2a00              CMP      r2,#0
00032e  d07d              BEQ      |L1.1068|
000330  e1da              B        |L1.1768|
                  |L1.818|
000332  b134              CBZ      r4,|L1.834|
000334  2c01              CMP      r4,#1                 ;357
000336  d009              BEQ      |L1.844|
000338  2c02              CMP      r4,#2                 ;358
00033a  d00c              BEQ      |L1.854|
00033c  2c03              CMP      r4,#3                 ;359
00033e  d00f              BEQ      |L1.864|
000340  e012              B        |L1.872|
                  |L1.834|
000342  7841              LDRB     r1,[r0,#1]            ;356
000344  f0410101          ORR      r1,r1,#1              ;356
000348  7041              STRB     r1,[r0,#1]            ;356
00034a  e00d              B        |L1.872|
                  |L1.844|
00034c  7841              LDRB     r1,[r0,#1]            ;357
00034e  f0410102          ORR      r1,r1,#2              ;357
000352  7041              STRB     r1,[r0,#1]            ;357
000354  e008              B        |L1.872|
                  |L1.854|
000356  7841              LDRB     r1,[r0,#1]            ;358
000358  f0410104          ORR      r1,r1,#4              ;358
00035c  7041              STRB     r1,[r0,#1]            ;358
00035e  e003              B        |L1.872|
                  |L1.864|
000360  7841              LDRB     r1,[r0,#1]            ;359
000362  f0410108          ORR      r1,r1,#8              ;359
000366  7041              STRB     r1,[r0,#1]            ;359
                  |L1.872|
000368  f8804057          STRB     r4,[r0,#0x57]         ;361
00036c  4650              MOV      r0,r10                ;365
00036e  f7fffffe          BL       lc640_read_int
000372  f1000001          ADD      r0,r0,#1              ;366
000376  fa1ffb80          UXTH     r11,r0                ;366
00037a  f1bb0f3f          CMP      r11,#0x3f             ;367
00037e  d901              BLS      |L1.900|
000380  f04f0b00          MOV      r11,#0                ;367
                  |L1.900|
000384  fa0ff18b          SXTH     r1,r11                ;368
000388  4650              MOV      r0,r10                ;368
00038a  f7fffffe          BL       lc640_write_int
00038e  f6406002          MOV      r0,#0xe02             ;370
000392  f7fffffe          BL       lc640_read_int
000396  b280              UXTH     r0,r0                 ;370
000398  283f              CMP      r0,#0x3f              ;371
00039a  d000              BEQ      |L1.926|
00039c  4658              MOV      r0,r11                ;371
                  |L1.926|
00039e  b201              SXTH     r1,r0                 ;372
0003a0  f6406002          MOV      r0,#0xe02             ;372
0003a4  f7fffffe          BL       lc640_write_int
0003a8  4650              MOV      r0,r10                ;374
0003aa  f7fffffe          BL       lc640_read_int
0003ae  eb051040          ADD      r0,r5,r0,LSL #5       ;374
0003b2  b285              UXTH     r5,r0                 ;374
0003b4  f04f0053          MOV      r0,#0x53              ;376
0003b8  f88d0000          STRB     r0,[sp,#0]            ;376
0003bc  f88d6001          STRB     r6,[sp,#1]            ;377
0003c0  f88d7002          STRB     r7,[sp,#2]            ;378
0003c4  f88d9003          STRB     r9,[sp,#3]            ;379
0003c8  4669              MOV      r1,sp                 ;380
0003ca  4628              MOV      r0,r5                 ;380
0003cc  f7fffffe          BL       lc640_write_long_ptr
0003d0  f8cd9000          STR      r9,[sp,#0]            ;385
0003d4  4669              MOV      r1,sp                 ;386
0003d6  1d28              ADDS     r0,r5,#4              ;386
0003d8  f7fffffe          BL       lc640_write_long_ptr
0003dc  f8b8003c          LDRH     r0,[r8,#0x3c]         ;388
0003e0  f88d0000          STRB     r0,[sp,#0]            ;388
0003e4  f8980038          LDRB     r0,[r8,#0x38]         ;389
0003e8  f88d0001          STRB     r0,[sp,#1]            ;389
0003ec  f898002c          LDRB     r0,[r8,#0x2c]         ;390
0003f0  f88d0002          STRB     r0,[sp,#2]            ;390
0003f4  f88d9003          STRB     r9,[sp,#3]            ;391
0003f8  4669              MOV      r1,sp                 ;392
0003fa  f1050008          ADD      r0,r5,#8              ;392
0003fe  e016              B        |L1.1070|
                  |L1.1024|
                          DCD      net_av
                  |L1.1028|
                          DCD      ||.data||
                  |L1.1032|
                          DCD      bat
                  |L1.1036|
                          DCD      bps
                  |L1.1040|
                          DCD      sk_av_stat
                  |L1.1044|
                          DCD      uout_av
                  |L1.1048|
                          DCD      SK_ZVUK_EN
                  |L1.1052|
                          DCD      AV_OFF_AVT
                  |L1.1056|
                          DCD      0xeffffffe
                  |L1.1060|
                          DCD      0x40024020
                  |L1.1064|
                          DCD      0x400fc000
                  |L1.1068|
00042c  e0bc              B        |L1.1448|
                  |L1.1070|
00042e  f7fffffe          BL       lc640_write_long_ptr
000432  f8980028          LDRB     r0,[r8,#0x28]         ;394
000436  f88d0000          STRB     r0,[sp,#0]            ;394
00043a  f8980024          LDRB     r0,[r8,#0x24]         ;395
00043e  f88d0001          STRB     r0,[sp,#1]            ;395
000442  f8980020          LDRB     r0,[r8,#0x20]         ;396
000446  f88d0002          STRB     r0,[sp,#2]            ;396
00044a  f88d9003          STRB     r9,[sp,#3]            ;397
00044e  4669              MOV      r1,sp                 ;398
000450  f105000c          ADD      r0,r5,#0xc            ;398
000454  f7fffffe          BL       lc640_write_long_ptr
000458  f04f0741          MOV      r7,#0x41              ;400
00045c  f88d7000          STRB     r7,[sp,#0]            ;400
000460  f88d7001          STRB     r7,[sp,#1]            ;401
000464  f88d7002          STRB     r7,[sp,#2]            ;402
000468  f88d7003          STRB     r7,[sp,#3]            ;403
00046c  4669              MOV      r1,sp                 ;404
00046e  f1050010          ADD      r0,r5,#0x10           ;404
000472  f7fffffe          BL       lc640_write_long_ptr
000476  f88d7000          STRB     r7,[sp,#0]            ;406
00047a  f88d7001          STRB     r7,[sp,#1]            ;407
00047e  f88d7002          STRB     r7,[sp,#2]            ;408
000482  f88d7003          STRB     r7,[sp,#3]            ;409
000486  4669              MOV      r1,sp                 ;410
000488  f1050014          ADD      r0,r5,#0x14           ;410
00048c  f7fffffe          BL       lc640_write_long_ptr
000490  f88d7000          STRB     r7,[sp,#0]            ;412
000494  f88d7001          STRB     r7,[sp,#1]            ;413
000498  f88d7002          STRB     r7,[sp,#2]            ;414
00049c  f88d7003          STRB     r7,[sp,#3]            ;415
0004a0  4669              MOV      r1,sp                 ;416
0004a2  f1050018          ADD      r0,r5,#0x18           ;416
0004a6  f7fffffe          BL       lc640_write_long_ptr
0004aa  f88d7000          STRB     r7,[sp,#0]            ;418
0004ae  f88d7001          STRB     r7,[sp,#1]            ;419
0004b2  f88d7002          STRB     r7,[sp,#2]            ;420
0004b6  f88d7003          STRB     r7,[sp,#3]            ;421
0004ba  4669              MOV      r1,sp                 ;422
0004bc  f105001c          ADD      r0,r5,#0x1c           ;422
0004c0  f7fffffe          BL       lc640_write_long_ptr
0004c4  b126              CBZ      r6,|L1.1232|
0004c6  2e01              CMP      r6,#1                 ;436
0004c8  d026              BEQ      |L1.1304|
0004ca  2e02              CMP      r6,#2                 ;447
0004cc  d048              BEQ      |L1.1376|
0004ce  e10b              B        |L1.1768|
                  |L1.1232|
0004d0  b134              CBZ      r4,|L1.1248|
0004d2  2c01              CMP      r4,#1                 ;429
0004d4  d00b              BEQ      |L1.1262|
0004d6  2c02              CMP      r4,#2                 ;431
0004d8  d010              BEQ      |L1.1276|
0004da  2c03              CMP      r4,#3                 ;433
0004dc  d015              BEQ      |L1.1290|
0004de  e103              B        |L1.1768|
                  |L1.1248|
0004e0  2300              MOVS     r3,#0                 ;428
0004e2  2201              MOVS     r2,#1                 ;428
0004e4  2104              MOVS     r1,#4                 ;428
0004e6  a0df              ADR      r0,|L1.2148|
0004e8  f7fffffe          BL       snmp_trap_send
0004ec  e0fc              B        |L1.1768|
                  |L1.1262|
0004ee  2301              MOVS     r3,#1                 ;430
0004f0  461a              MOV      r2,r3                 ;430
0004f2  2104              MOVS     r1,#4                 ;430
0004f4  a0e1              ADR      r0,|L1.2172|
0004f6  f7fffffe          BL       snmp_trap_send
0004fa  e0f5              B        |L1.1768|
                  |L1.1276|
0004fc  2302              MOVS     r3,#2                 ;432
0004fe  2201              MOVS     r2,#1                 ;432
000500  2104              MOVS     r1,#4                 ;432
000502  a0e5              ADR      r0,|L1.2200|
000504  f7fffffe          BL       snmp_trap_send
000508  e0ee              B        |L1.1768|
                  |L1.1290|
00050a  2303              MOVS     r3,#3                 ;434
00050c  2201              MOVS     r2,#1                 ;434
00050e  2104              MOVS     r1,#4                 ;434
000510  a0e9              ADR      r0,|L1.2232|
000512  f7fffffe          BL       snmp_trap_send
000516  e0e7              B        |L1.1768|
                  |L1.1304|
000518  b134              CBZ      r4,|L1.1320|
00051a  2c01              CMP      r4,#1                 ;440
00051c  d00b              BEQ      |L1.1334|
00051e  2c02              CMP      r4,#2                 ;442
000520  d010              BEQ      |L1.1348|
000522  2c03              CMP      r4,#3                 ;444
000524  d015              BEQ      |L1.1362|
000526  e0df              B        |L1.1768|
                  |L1.1320|
000528  2300              MOVS     r3,#0                 ;439
00052a  2202              MOVS     r2,#2                 ;439
00052c  2104              MOVS     r1,#4                 ;439
00052e  a0ea              ADR      r0,|L1.2264|
000530  f7fffffe          BL       snmp_trap_send
000534  e0d8              B        |L1.1768|
                  |L1.1334|
000536  2301              MOVS     r3,#1                 ;441
000538  2202              MOVS     r2,#2                 ;441
00053a  2104              MOVS     r1,#4                 ;441
00053c  a0ec              ADR      r0,|L1.2288|
00053e  f7fffffe          BL       snmp_trap_send
000542  e0d1              B        |L1.1768|
                  |L1.1348|
000544  2302              MOVS     r3,#2                 ;443
000546  461a              MOV      r2,r3                 ;443
000548  2104              MOVS     r1,#4                 ;443
00054a  a0f0              ADR      r0,|L1.2316|
00054c  f7fffffe          BL       snmp_trap_send
000550  e0ca              B        |L1.1768|
                  |L1.1362|
000552  2303              MOVS     r3,#3                 ;445
000554  2202              MOVS     r2,#2                 ;445
000556  2104              MOVS     r1,#4                 ;445
000558  a0f4              ADR      r0,|L1.2348|
00055a  f7fffffe          BL       snmp_trap_send
00055e  e0c3              B        |L1.1768|
                  |L1.1376|
000560  b134              CBZ      r4,|L1.1392|
000562  2c01              CMP      r4,#1                 ;451
000564  d00b              BEQ      |L1.1406|
000566  2c02              CMP      r4,#2                 ;453
000568  d010              BEQ      |L1.1420|
00056a  2c03              CMP      r4,#3                 ;455
00056c  d015              BEQ      |L1.1434|
00056e  e0bb              B        |L1.1768|
                  |L1.1392|
000570  2300              MOVS     r3,#0                 ;450
000572  2203              MOVS     r2,#3                 ;450
000574  2104              MOVS     r1,#4                 ;450
000576  a0f5              ADR      r0,|L1.2380|
000578  f7fffffe          BL       snmp_trap_send
00057c  e0b4              B        |L1.1768|
                  |L1.1406|
00057e  2301              MOVS     r3,#1                 ;452
000580  2203              MOVS     r2,#3                 ;452
000582  2104              MOVS     r1,#4                 ;452
000584  a0f7              ADR      r0,|L1.2404|
000586  f7fffffe          BL       snmp_trap_send
00058a  e0ad              B        |L1.1768|
                  |L1.1420|
00058c  2302              MOVS     r3,#2                 ;454
00058e  2203              MOVS     r2,#3                 ;454
000590  2104              MOVS     r1,#4                 ;454
000592  a0fb              ADR      r0,|L1.2432|
000594  f7fffffe          BL       snmp_trap_send
000598  e0a6              B        |L1.1768|
                  |L1.1434|
00059a  2303              MOVS     r3,#3                 ;456
00059c  461a              MOV      r2,r3                 ;456
00059e  2104              MOVS     r1,#4                 ;456
0005a0  a0ff              ADR      r0,|L1.2464|
0005a2  f7fffffe          BL       snmp_trap_send
0005a6  e09f              B        |L1.1768|
                  |L1.1448|
;;;462    	{      
;;;463    //	av_bps[bps]=0;
;;;464    
;;;465    	//SET_REG(avar_stat,0,3+bps,1);
;;;466    	//if(AV_OFF_AVT) SET_REG(avar_ind_stat,0,3+bps,1);
;;;467    
;;;468         if(v==0) bps[dev]._av&=(~(1<<0));
0005a8  b134              CBZ      r4,|L1.1464|
;;;469         else if(v==1) bps[dev]._av&=(~(1<<1));
0005aa  2c01              CMP      r4,#1
0005ac  d009              BEQ      |L1.1474|
;;;470    	else if(v==2) bps[dev]._av&=(~(1<<2));
0005ae  2c02              CMP      r4,#2
0005b0  d00c              BEQ      |L1.1484|
;;;471    	else if(v==3) bps[dev]._av&=(~(1<<3));
0005b2  2c03              CMP      r4,#3
0005b4  d00f              BEQ      |L1.1494|
0005b6  e012              B        |L1.1502|
                  |L1.1464|
0005b8  7841              LDRB     r1,[r0,#1]            ;468
0005ba  f0210101          BIC      r1,r1,#1              ;468
0005be  7041              STRB     r1,[r0,#1]            ;468
0005c0  e00d              B        |L1.1502|
                  |L1.1474|
0005c2  7841              LDRB     r1,[r0,#1]            ;469
0005c4  f0210102          BIC      r1,r1,#2              ;469
0005c8  7041              STRB     r1,[r0,#1]            ;469
0005ca  e008              B        |L1.1502|
                  |L1.1484|
0005cc  7841              LDRB     r1,[r0,#1]            ;470
0005ce  f0210104          BIC      r1,r1,#4              ;470
0005d2  7041              STRB     r1,[r0,#1]            ;470
0005d4  e003              B        |L1.1502|
                  |L1.1494|
0005d6  7841              LDRB     r1,[r0,#1]
0005d8  f0210108          BIC      r1,r1,#8
0005dc  7041              STRB     r1,[r0,#1]
                  |L1.1502|
;;;472         
;;;473    //	if((bps[dev]._av&0x0f==0))
;;;474    //	     {
;;;475    		//SET_REG(avar_stat,0,3+bps,1);
;;;476    		//if(AV_OFF_AVT) SET_REG(avar_ind_stat,0,3+bps,1);
;;;477    //	     }
;;;478     
;;;479    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
0005de  4650              MOV      r0,r10
0005e0  f7fffffe          BL       lc640_read_int
0005e4  fa1ffb80          UXTH     r11,r0
;;;480    	event_ptr_find=event_ptr;
0005e8  465c              MOV      r4,r11
                  |L1.1514|
;;;481    	
;;;482    avar_src_hndl_lbl1: 
;;;483    
;;;484    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
0005ea  eb051044          ADD      r0,r5,r4,LSL #5
0005ee  fa1ffa80          UXTH     r10,r0
;;;485    
;;;486         lc640_read_long_ptr(lc640_adr,data);
0005f2  4669              MOV      r1,sp
0005f4  4650              MOV      r0,r10
0005f6  f7fffffe          BL       lc640_read_long_ptr
;;;487         
;;;488         if(!((data[0]=='S')&&(data[1]==dev)&&(data[2]==avar_simbol)))
0005fa  f89d0000          LDRB     r0,[sp,#0]
0005fe  2853              CMP      r0,#0x53
000600  d107              BNE      |L1.1554|
000602  f89d0001          LDRB     r0,[sp,#1]
000606  42b0              CMP      r0,r6
000608  d103              BNE      |L1.1554|
00060a  f89d0002          LDRB     r0,[sp,#2]
00060e  42b8              CMP      r0,r7
000610  d009              BEQ      |L1.1574|
                  |L1.1554|
;;;489         	{        
;;;490         	if(event_ptr_find)event_ptr_find--;
000612  b11c              CBZ      r4,|L1.1564|
000614  f1a40401          SUB      r4,r4,#1
000618  b2a4              UXTH     r4,r4
00061a  e001              B        |L1.1568|
                  |L1.1564|
;;;491         	else event_ptr_find=63;
00061c  f04f043f          MOV      r4,#0x3f
                  |L1.1568|
;;;492         	if(event_ptr_find==event_ptr)goto avar_src_hndl_end;
000620  455c              CMP      r4,r11
000622  d1e2              BNE      |L1.1514|
000624  e060              B        |L1.1768|
                  |L1.1574|
;;;493         	else goto avar_src_hndl_lbl1;
;;;494         	}
;;;495         else 
;;;496         	{
;;;497         	lc640_read_long_ptr(lc640_adr+16,data);
000626  4669              MOV      r1,sp
000628  f10a0010          ADD      r0,r10,#0x10
00062c  f7fffffe          BL       lc640_read_long_ptr
;;;498         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
000630  f89d0000          LDRB     r0,[sp,#0]
000634  2841              CMP      r0,#0x41
000636  d10b              BNE      |L1.1616|
000638  f89d0001          LDRB     r0,[sp,#1]
00063c  2841              CMP      r0,#0x41
00063e  d107              BNE      |L1.1616|
000640  f89d0002          LDRB     r0,[sp,#2]
000644  2841              CMP      r0,#0x41
000646  d103              BNE      |L1.1616|
000648  f89d0003          LDRB     r0,[sp,#3]
00064c  2841              CMP      r0,#0x41
00064e  d009              BEQ      |L1.1636|
                  |L1.1616|
;;;499         		{        
;;;500         		if(event_ptr_find)event_ptr_find--;
000650  b11c              CBZ      r4,|L1.1626|
000652  f1a40401          SUB      r4,r4,#1
000656  b2a4              UXTH     r4,r4
000658  e001              B        |L1.1630|
                  |L1.1626|
;;;501             		else event_ptr_find=63;
00065a  f04f043f          MOV      r4,#0x3f
                  |L1.1630|
;;;502             		if(event_ptr_find==event_ptr)goto avar_src_hndl_end;
00065e  455c              CMP      r4,r11
000660  d1c3              BNE      |L1.1514|
000662  e041              B        |L1.1768|
                  |L1.1636|
;;;503         		else goto avar_src_hndl_lbl1;
;;;504         		}
;;;505    
;;;506         	}	
;;;507    
;;;508    
;;;509    	
;;;510    	data[0]=LPC_RTC->YEAR;
000664  f8b8003c          LDRH     r0,[r8,#0x3c]
000668  f88d0000          STRB     r0,[sp,#0]
;;;511    	data[1]=LPC_RTC->MONTH;
00066c  f8980038          LDRB     r0,[r8,#0x38]
000670  f88d0001          STRB     r0,[sp,#1]
;;;512    	data[2]=LPC_RTC->DOM;
000674  f898002c          LDRB     r0,[r8,#0x2c]
000678  f88d0002          STRB     r0,[sp,#2]
;;;513    	data[3]=0;
00067c  f88d9003          STRB     r9,[sp,#3]
;;;514    	lc640_write_long_ptr(lc640_adr+16,data);
000680  4669              MOV      r1,sp
000682  f10a0010          ADD      r0,r10,#0x10
000686  f7fffffe          BL       lc640_write_long_ptr
;;;515    
;;;516    	data[0]=LPC_RTC->HOUR;
00068a  f8980028          LDRB     r0,[r8,#0x28]
00068e  f88d0000          STRB     r0,[sp,#0]
;;;517    	data[1]=LPC_RTC->MIN;
000692  f8980024          LDRB     r0,[r8,#0x24]
000696  f88d0001          STRB     r0,[sp,#1]
;;;518    	data[2]=LPC_RTC->SEC;
00069a  f8980020          LDRB     r0,[r8,#0x20]
00069e  f88d0002          STRB     r0,[sp,#2]
;;;519    	data[3]=0;
0006a2  f88d9003          STRB     r9,[sp,#3]
;;;520    	lc640_write_long_ptr(lc640_adr+20,data);
0006a6  4669              MOV      r1,sp
0006a8  f10a0014          ADD      r0,r10,#0x14
0006ac  f7fffffe          BL       lc640_write_long_ptr
;;;521    	
;;;522    	data[0]='B';
0006b0  f04f0442          MOV      r4,#0x42
0006b4  f88d4000          STRB     r4,[sp,#0]
;;;523    	data[1]='B';
0006b8  f88d4001          STRB     r4,[sp,#1]
;;;524    	data[2]='B';
0006bc  f88d4002          STRB     r4,[sp,#2]
;;;525    	data[3]='B';
0006c0  f88d4003          STRB     r4,[sp,#3]
;;;526    	lc640_write_long_ptr(lc640_adr+24,data);
0006c4  4669              MOV      r1,sp
0006c6  f10a0018          ADD      r0,r10,#0x18
0006ca  f7fffffe          BL       lc640_write_long_ptr
;;;527    	
;;;528    	data[0]='B';
0006ce  f88d4000          STRB     r4,[sp,#0]
;;;529    	data[1]='B';
0006d2  f88d4001          STRB     r4,[sp,#1]
;;;530    	data[2]='B';
0006d6  f88d4002          STRB     r4,[sp,#2]
;;;531    	data[3]='B';
0006da  f88d4003          STRB     r4,[sp,#3]
;;;532    	lc640_write_long_ptr(lc640_adr+28,data);
0006de  4669              MOV      r1,sp
0006e0  f10a001c          ADD      r0,r10,#0x1c
0006e4  f7fffffe          BL       lc640_write_long_ptr
                  |L1.1768|
;;;533    	
;;;534    	}
;;;535    	
;;;536    avar_src_hndl_end:
;;;537    __nop();		
0006e8  bf00              NOP      
;;;538    }
0006ea  e8bd8ff8          POP      {r3-r11,pc}
;;;539    
                          ENDP

                  avar_overload_hndl PROC
;;;746    //-----------------------------------------------
;;;747    void avar_overload_hndl(char in)
0006ee  e92d43f8          PUSH     {r3-r9,lr}
;;;748    {
;;;749    
;;;750    char data[4];
;;;751    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;752    
;;;753    if(in==1)
;;;754    	{
;;;755    	if(overloadAvar==1)return;
0006f2  4ab4              LDR      r2,|L1.2500|
;;;756        
;;;757    	overloadAvar=1;
;;;758    
;;;759    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;760    	event_ptr++;	
;;;761    	if(event_ptr>63)event_ptr=0;	
;;;762    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;763    	
;;;764        event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;765    	if(event_cnt!=63)event_cnt=event_ptr;
;;;766    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;767    	
;;;768    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;769    	
;;;770    	data[0]='O';
;;;771    	data[1]='V';
;;;772    	data[2]='L';
;;;773    	data[3]=0;
;;;774    	lc640_write_long_ptr(lc640_adr,data);
;;;775    
;;;776    	data[0]=0;
;;;777    	data[1]=0;
;;;778    	data[2]=0;
;;;779    	data[3]=0;
;;;780    	lc640_write_long_ptr(lc640_adr+4,data);
;;;781    
;;;782    	data[0]=LPC_RTC->YEAR;
0006f4  4fb2              LDR      r7,|L1.2496|
0006f6  f44f6560          MOV      r5,#0xe00             ;759
0006fa  7811              LDRB     r1,[r2,#0]            ;755
0006fc  f04f0800          MOV      r8,#0                 ;761
000700  f44f6980          MOV      r9,#0x400             ;768
000704  2801              CMP      r0,#1                 ;753
000706  d016              BEQ      |L1.1846|
;;;783    	data[1]=LPC_RTC->MONTH;
;;;784    	data[2]=LPC_RTC->DOM;
;;;785    	data[3]=0;
;;;786    	lc640_write_long_ptr(lc640_adr+8,data);
;;;787    
;;;788    	data[0]=LPC_RTC->HOUR;
;;;789    	data[1]=LPC_RTC->MIN;
;;;790    	data[2]=LPC_RTC->SEC;
;;;791    	data[3]=0;
;;;792    	lc640_write_long_ptr(lc640_adr+12,data);
;;;793    	
;;;794    	data[0]='A';
;;;795    	data[1]='A';
;;;796    	data[2]='A';
;;;797    	data[3]='A';
;;;798    	lc640_write_long_ptr(lc640_adr+16,data);
;;;799    	
;;;800    	data[0]='A';
;;;801    	data[1]='A';
;;;802    	data[2]='A';
;;;803    	data[3]='A';
;;;804    	lc640_write_long_ptr(lc640_adr+20,data);
;;;805    	
;;;806    	data[0]='A';
;;;807    	data[1]='A';
;;;808    	data[2]='A';
;;;809    	data[3]='A';
;;;810    	lc640_write_long_ptr(lc640_adr+24,data);
;;;811    	
;;;812    	data[0]='A';
;;;813    	data[1]='A';
;;;814    	data[2]='A';
;;;815    	data[3]='A';
;;;816    	lc640_write_long_ptr(lc640_adr+28,data);				
;;;817    
;;;818    	snmp_trap_send("System overload",5,1,2);
;;;819    
;;;820    	
;;;821    	}
;;;822    
;;;823    else if(in==0)
000708  2800              CMP      r0,#0
00070a  d17d              BNE      |L1.2056|
;;;824    	{
;;;825    	if(overloadAvar==0)return;
00070c  2900              CMP      r1,#0
00070e  d07b              BEQ      |L1.2056|
;;;826    
;;;827    	overloadAvar=0;
000710  f8828000          STRB     r8,[r2,#0]
;;;828    
;;;829        event_ptr=lc640_read_int(PTR_EVENT_LOG);
000714  4628              MOV      r0,r5
000716  f7fffffe          BL       lc640_read_int
00071a  b286              UXTH     r6,r0
;;;830    	event_ptr_find=event_ptr;
00071c  4634              MOV      r4,r6
                  |L1.1822|
;;;831    	
;;;832    avar_overload_hndl_lbl1: 
;;;833    
;;;834    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
00071e  eb091044          ADD      r0,r9,r4,LSL #5
000722  b285              UXTH     r5,r0
;;;835    
;;;836    	lc640_read_long_ptr(lc640_adr,data);
000724  4669              MOV      r1,sp
000726  4628              MOV      r0,r5
000728  f7fffffe          BL       lc640_read_long_ptr
;;;837         
;;;838        if(!((data[0]=='O')&&(data[1]=='V')&&(data[2]=='L')))
00072c  f89d0000          LDRB     r0,[sp,#0]
000730  284f              CMP      r0,#0x4f
000732  d16a              BNE      |L1.2058|
000734  e154              B        |L1.2528|
                  |L1.1846|
000736  2901              CMP      r1,#1                 ;755
000738  d066              BEQ      |L1.2056|
00073a  f04f0001          MOV      r0,#1                 ;757
00073e  7010              STRB     r0,[r2,#0]            ;757
000740  4628              MOV      r0,r5                 ;759
000742  f7fffffe          BL       lc640_read_int
000746  f1000001          ADD      r0,r0,#1              ;760
00074a  b284              UXTH     r4,r0                 ;760
00074c  2c3f              CMP      r4,#0x3f              ;761
00074e  d901              BLS      |L1.1876|
000750  f04f0400          MOV      r4,#0                 ;761
                  |L1.1876|
000754  b221              SXTH     r1,r4                 ;762
000756  4628              MOV      r0,r5                 ;762
000758  f7fffffe          BL       lc640_write_int
00075c  f6406602          MOV      r6,#0xe02             ;764
000760  4630              MOV      r0,r6                 ;764
000762  f7fffffe          BL       lc640_read_int
000766  b281              UXTH     r1,r0                 ;764
000768  293f              CMP      r1,#0x3f              ;765
00076a  d000              BEQ      |L1.1902|
00076c  4621              MOV      r1,r4                 ;765
                  |L1.1902|
00076e  b209              SXTH     r1,r1                 ;766
000770  4630              MOV      r0,r6                 ;766
000772  f7fffffe          BL       lc640_write_int
000776  4628              MOV      r0,r5                 ;768
000778  f7fffffe          BL       lc640_read_int
00077c  eb091040          ADD      r0,r9,r0,LSL #5       ;768
000780  b284              UXTH     r4,r0                 ;768
000782  f04f004f          MOV      r0,#0x4f              ;770
000786  f88d0000          STRB     r0,[sp,#0]            ;770
00078a  f04f0056          MOV      r0,#0x56              ;771
00078e  f88d0001          STRB     r0,[sp,#1]            ;771
000792  f04f004c          MOV      r0,#0x4c              ;772
000796  f88d0002          STRB     r0,[sp,#2]            ;772
00079a  f88d8003          STRB     r8,[sp,#3]            ;773
00079e  4669              MOV      r1,sp                 ;774
0007a0  4620              MOV      r0,r4                 ;774
0007a2  f7fffffe          BL       lc640_write_long_ptr
0007a6  f8cd8000          STR      r8,[sp,#0]            ;779
0007aa  4669              MOV      r1,sp                 ;780
0007ac  1d20              ADDS     r0,r4,#4              ;780
0007ae  f7fffffe          BL       lc640_write_long_ptr
0007b2  f1070720          ADD      r7,r7,#0x20           ;782
0007b6  8bb8              LDRH     r0,[r7,#0x1c]         ;782
0007b8  f88d0000          STRB     r0,[sp,#0]            ;782
0007bc  7e38              LDRB     r0,[r7,#0x18]         ;783
0007be  f88d0001          STRB     r0,[sp,#1]            ;783
0007c2  7b38              LDRB     r0,[r7,#0xc]          ;784
0007c4  f88d0002          STRB     r0,[sp,#2]            ;784
0007c8  f88d8003          STRB     r8,[sp,#3]            ;785
0007cc  4669              MOV      r1,sp                 ;786
0007ce  f1040008          ADD      r0,r4,#8              ;786
0007d2  f7fffffe          BL       lc640_write_long_ptr
0007d6  7a38              LDRB     r0,[r7,#8]            ;788
0007d8  f88d0000          STRB     r0,[sp,#0]            ;788
0007dc  7938              LDRB     r0,[r7,#4]            ;789
0007de  f88d0001          STRB     r0,[sp,#1]            ;789
0007e2  7838              LDRB     r0,[r7,#0]            ;790
0007e4  f88d0002          STRB     r0,[sp,#2]            ;790
0007e8  f88d8003          STRB     r8,[sp,#3]            ;791
0007ec  4669              MOV      r1,sp                 ;792
0007ee  f104000c          ADD      r0,r4,#0xc            ;792
0007f2  f7fffffe          BL       lc640_write_long_ptr
0007f6  f04f0541          MOV      r5,#0x41              ;794
0007fa  f88d5000          STRB     r5,[sp,#0]            ;794
0007fe  f88d5001          STRB     r5,[sp,#1]            ;795
000802  f88d5002          STRB     r5,[sp,#2]            ;796
000806  e001              B        |L1.2060|
                  |L1.2056|
000808  e0e8              B        |L1.2524|
                  |L1.2058|
00080a  e0f1              B        |L1.2544|
                  |L1.2060|
00080c  f88d5003          STRB     r5,[sp,#3]            ;797
000810  4669              MOV      r1,sp                 ;798
000812  f1040010          ADD      r0,r4,#0x10           ;798
000816  f7fffffe          BL       lc640_write_long_ptr
00081a  f88d5000          STRB     r5,[sp,#0]            ;800
00081e  f88d5001          STRB     r5,[sp,#1]            ;801
000822  f88d5002          STRB     r5,[sp,#2]            ;802
000826  f88d5003          STRB     r5,[sp,#3]            ;803
00082a  4669              MOV      r1,sp                 ;804
00082c  f1040014          ADD      r0,r4,#0x14           ;804
000830  f7fffffe          BL       lc640_write_long_ptr
000834  f88d5000          STRB     r5,[sp,#0]            ;806
000838  f88d5001          STRB     r5,[sp,#1]            ;807
00083c  f88d5002          STRB     r5,[sp,#2]            ;808
000840  f88d5003          STRB     r5,[sp,#3]            ;809
000844  4669              MOV      r1,sp                 ;810
000846  f1040018          ADD      r0,r4,#0x18           ;810
00084a  f7fffffe          BL       lc640_write_long_ptr
00084e  f88d5000          STRB     r5,[sp,#0]            ;812
000852  f88d5001          STRB     r5,[sp,#1]            ;813
000856  f88d5002          STRB     r5,[sp,#2]            ;814
00085a  f88d5003          STRB     r5,[sp,#3]            ;815
00085e  4669              MOV      r1,sp                 ;816
000860  e0b2              B        |L1.2504|
000862  0000              DCW      0x0000
                  |L1.2148|
000864  42505320          DCB      "BPS #1 Alarm, overheat",0
000868  23312041
00086c  6c61726d
000870  2c206f76
000874  65726865
000878  617400  
00087b  00                DCB      0
                  |L1.2172|
00087c  42505320          DCB      "BPS #1 Alarm, voltage is up",0
000880  23312041
000884  6c61726d
000888  2c20766f
00088c  6c746167
000890  65206973
000894  20757000
                  |L1.2200|
000898  42505320          DCB      "BPS #1 Alarm, voltage is down",0
00089c  23312041
0008a0  6c61726d
0008a4  2c20766f
0008a8  6c746167
0008ac  65206973
0008b0  20646f77
0008b4  6e00    
0008b6  00                DCB      0
0008b7  00                DCB      0
                  |L1.2232|
0008b8  42505320          DCB      "BPS #1 Alarm, connect is lost",0
0008bc  23312041
0008c0  6c61726d
0008c4  2c20636f
0008c8  6e6e6563
0008cc  74206973
0008d0  206c6f73
0008d4  7400    
0008d6  00                DCB      0
0008d7  00                DCB      0
                  |L1.2264|
0008d8  42505320          DCB      "BPS #2 Alarm, overheat",0
0008dc  23322041
0008e0  6c61726d
0008e4  2c206f76
0008e8  65726865
0008ec  617400  
0008ef  00                DCB      0
                  |L1.2288|
0008f0  42505320          DCB      "BPS #2 Alarm, voltage is up",0
0008f4  23322041
0008f8  6c61726d
0008fc  2c20766f
000900  6c746167
000904  65206973
000908  20757000
                  |L1.2316|
00090c  42505320          DCB      "BPS #2 Alarm, voltage is down",0
000910  23322041
000914  6c61726d
000918  2c20766f
00091c  6c746167
000920  65206973
000924  20646f77
000928  6e00    
00092a  00                DCB      0
00092b  00                DCB      0
                  |L1.2348|
00092c  42505320          DCB      "BPS #2 Alarm, connect is lost",0
000930  23322041
000934  6c61726d
000938  2c20636f
00093c  6e6e6563
000940  74206973
000944  206c6f73
000948  7400    
00094a  00                DCB      0
00094b  00                DCB      0
                  |L1.2380|
00094c  42505320          DCB      "BPS #3 Alarm, overheat",0
000950  23332041
000954  6c61726d
000958  2c206f76
00095c  65726865
000960  617400  
000963  00                DCB      0
                  |L1.2404|
000964  42505320          DCB      "BPS #3 Alarm, voltage is up",0
000968  23332041
00096c  6c61726d
000970  2c20766f
000974  6c746167
000978  65206973
00097c  20757000
                  |L1.2432|
000980  42505320          DCB      "BPS #3 Alarm, voltage is down",0
000984  23332041
000988  6c61726d
00098c  2c20766f
000990  6c746167
000994  65206973
000998  20646f77
00099c  6e00    
00099e  00                DCB      0
00099f  00                DCB      0
                  |L1.2464|
0009a0  42505320          DCB      "BPS #3 Alarm, connect is lost",0
0009a4  23332041
0009a8  6c61726d
0009ac  2c20636f
0009b0  6e6e6563
0009b4  74206973
0009b8  206c6f73
0009bc  7400    
0009be  00                DCB      0
0009bf  00                DCB      0
                  |L1.2496|
                          DCD      0x40024000
                  |L1.2500|
                          DCD      overloadAvar
                  |L1.2504|
0009c8  f104001c          ADD      r0,r4,#0x1c           ;816
0009cc  f7fffffe          BL       lc640_write_long_ptr
0009d0  2302              MOVS     r3,#2                 ;818
0009d2  2201              MOVS     r2,#1                 ;818
0009d4  2105              MOVS     r1,#5                 ;818
0009d6  a0fa              ADR      r0,|L1.3520|
0009d8  f7fffffe          BL       snmp_trap_send
                  |L1.2524|
;;;839         	{        
;;;840         	if(event_ptr_find)event_ptr_find--;
;;;841         	else event_ptr_find=63;
;;;842         	if(event_ptr_find==event_ptr)return;
;;;843         	else goto avar_overload_hndl_lbl1;
;;;844         	}
;;;845         else 
;;;846         	{
;;;847         	lc640_read_long_ptr(lc640_adr+16,data);
;;;848         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;849         		{        
;;;850         		if(event_ptr_find)event_ptr_find--;
;;;851             	else event_ptr_find=63;
;;;852             	if(event_ptr_find==event_ptr)return;
;;;853         		else goto avar_overload_hndl_lbl1;
;;;854         		}
;;;855    
;;;856         	}
;;;857         		
;;;858    	data[0]=LPC_RTC->YEAR;
;;;859    	data[1]=LPC_RTC->MONTH;
;;;860    	data[2]=LPC_RTC->DOM;
;;;861    	data[3]=0;
;;;862    	lc640_write_long_ptr(lc640_adr+16,data);
;;;863    
;;;864    	data[0]=LPC_RTC->HOUR;
;;;865    	data[1]=LPC_RTC->MIN;
;;;866    	data[2]=LPC_RTC->SEC;
;;;867    	data[3]=0;
;;;868    	lc640_write_long_ptr(lc640_adr+20,data);
;;;869    	
;;;870    	data[0]='B';
;;;871    	data[1]='B';
;;;872    	data[2]='B';
;;;873    	data[3]='B';
;;;874    	lc640_write_long_ptr(lc640_adr+24,data);
;;;875    	
;;;876    	data[0]='B';
;;;877    	data[1]='B';
;;;878    	data[2]='B';
;;;879    	data[3]='B';
;;;880    	lc640_write_long_ptr(lc640_adr+28,data);
;;;881    	
;;;882    
;;;883    	
;;;884    	}
;;;885    	
;;;886    }
0009dc  e8bd83f8          POP      {r3-r9,pc}
                  |L1.2528|
0009e0  f89d0001          LDRB     r0,[sp,#1]            ;838
0009e4  2856              CMP      r0,#0x56              ;838
0009e6  d103              BNE      |L1.2544|
0009e8  f89d0002          LDRB     r0,[sp,#2]            ;838
0009ec  284c              CMP      r0,#0x4c              ;838
0009ee  d00a              BEQ      |L1.2566|
                  |L1.2544|
0009f0  b11c              CBZ      r4,|L1.2554|
0009f2  f1a40401          SUB      r4,r4,#1              ;840
0009f6  b2a4              UXTH     r4,r4                 ;840
0009f8  e001              B        |L1.2558|
                  |L1.2554|
0009fa  f04f043f          MOV      r4,#0x3f              ;841
                  |L1.2558|
0009fe  42b4              CMP      r4,r6                 ;842
                  |L1.2560|
000a00  f47fae8d          BNE      |L1.1822|
000a04  e7ea              B        |L1.2524|
                  |L1.2566|
000a06  4669              MOV      r1,sp                 ;847
000a08  f1050010          ADD      r0,r5,#0x10           ;847
000a0c  f7fffffe          BL       lc640_read_long_ptr
000a10  f89d0000          LDRB     r0,[sp,#0]            ;848
000a14  2841              CMP      r0,#0x41              ;848
000a16  d10b              BNE      |L1.2608|
000a18  f89d0001          LDRB     r0,[sp,#1]            ;848
000a1c  2841              CMP      r0,#0x41              ;848
000a1e  d107              BNE      |L1.2608|
000a20  f89d0002          LDRB     r0,[sp,#2]            ;848
000a24  2841              CMP      r0,#0x41              ;848
000a26  d103              BNE      |L1.2608|
000a28  f89d0003          LDRB     r0,[sp,#3]            ;848
000a2c  2841              CMP      r0,#0x41              ;848
000a2e  d009              BEQ      |L1.2628|
                  |L1.2608|
000a30  b11c              CBZ      r4,|L1.2618|
000a32  f1a40401          SUB      r4,r4,#1              ;850
000a36  b2a4              UXTH     r4,r4                 ;850
000a38  e001              B        |L1.2622|
                  |L1.2618|
000a3a  f04f043f          MOV      r4,#0x3f              ;851
                  |L1.2622|
000a3e  42b4              CMP      r4,r6                 ;852
000a40  d1de              BNE      |L1.2560|
000a42  e7cb              B        |L1.2524|
                  |L1.2628|
000a44  f1070720          ADD      r7,r7,#0x20           ;858
000a48  8bb8              LDRH     r0,[r7,#0x1c]         ;858
000a4a  f88d0000          STRB     r0,[sp,#0]            ;858
000a4e  7e38              LDRB     r0,[r7,#0x18]         ;859
000a50  f88d0001          STRB     r0,[sp,#1]            ;859
000a54  7b38              LDRB     r0,[r7,#0xc]          ;860
000a56  f88d0002          STRB     r0,[sp,#2]            ;860
000a5a  f88d8003          STRB     r8,[sp,#3]            ;861
000a5e  4669              MOV      r1,sp                 ;862
000a60  f1050010          ADD      r0,r5,#0x10           ;862
000a64  f7fffffe          BL       lc640_write_long_ptr
000a68  7a38              LDRB     r0,[r7,#8]            ;864
000a6a  f88d0000          STRB     r0,[sp,#0]            ;864
000a6e  7938              LDRB     r0,[r7,#4]            ;865
000a70  f88d0001          STRB     r0,[sp,#1]            ;865
000a74  7838              LDRB     r0,[r7,#0]            ;866
000a76  f88d0002          STRB     r0,[sp,#2]            ;866
000a7a  f88d8003          STRB     r8,[sp,#3]            ;867
000a7e  4669              MOV      r1,sp                 ;868
000a80  f1050014          ADD      r0,r5,#0x14           ;868
000a84  f7fffffe          BL       lc640_write_long_ptr
000a88  f04f0442          MOV      r4,#0x42              ;870
000a8c  f88d4000          STRB     r4,[sp,#0]            ;870
000a90  f88d4001          STRB     r4,[sp,#1]            ;871
000a94  f88d4002          STRB     r4,[sp,#2]            ;872
000a98  f88d4003          STRB     r4,[sp,#3]            ;873
000a9c  4669              MOV      r1,sp                 ;874
000a9e  f1050018          ADD      r0,r5,#0x18           ;874
000aa2  f7fffffe          BL       lc640_write_long_ptr
000aa6  f88d4000          STRB     r4,[sp,#0]            ;876
000aaa  f88d4001          STRB     r4,[sp,#1]            ;877
000aae  f88d4002          STRB     r4,[sp,#2]            ;878
000ab2  f88d4003          STRB     r4,[sp,#3]            ;879
000ab6  4669              MOV      r1,sp                 ;880
000ab8  f105001c          ADD      r0,r5,#0x1c           ;880
000abc  f7fffffe          BL       lc640_write_long_ptr
000ac0  e78c              B        |L1.2524|
;;;887    
                          ENDP

                  avar_u_out_hndl PROC
;;;888    //-----------------------------------------------
;;;889    void avar_u_out_hndl(char in,short volt)
000ac2  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;890    {
000ac6  b081              SUB      sp,sp,#4
000ac8  4605              MOV      r5,r0
;;;891    
;;;892    char data[4];
;;;893    unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;894    if(uOutAvar==in)return;
000aca  49c1              LDR      r1,|L1.3536|
000acc  7808              LDRB     r0,[r1,#0]  ; uOutAvar
000ace  42a8              CMP      r0,r5
000ad0  d07e              BEQ      |L1.3024|
;;;895    if((in==1)||(in==2))
;;;896    	{
;;;897    	if(uOutAvar==in)return;
;;;898        
;;;899    	uOutAvar=in;
;;;900    
;;;901    	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;902    	event_ptr++;	
;;;903    	if(event_ptr>63)event_ptr=0;	
;;;904    	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;905    	
;;;906        event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;907    	if(event_cnt!=63)event_cnt=event_ptr;
;;;908    	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;909    	
;;;910    	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;911    	
;;;912    	data[0]='V';
;;;913    	data[1]='O';
;;;914    	data[2]='U';
;;;915    	data[3]='T';
;;;916    	lc640_write_long_ptr(lc640_adr,data);
;;;917    
;;;918    	data[0]=*((char*)&volt);
000ad2  f89d6008          LDRB     r6,[sp,#8]
;;;919    	data[1]=*(((char*)&volt)+1);
000ad6  f89d7009          LDRB     r7,[sp,#9]
;;;920    	data[2]=in;
;;;921    	data[3]=0;
;;;922    	lc640_write_long_ptr(lc640_adr+4,data);
;;;923    
;;;924    	data[0]=LPC_RTC->YEAR;
000ada  f8df82f8          LDR      r8,|L1.3540|
000ade  f44f6460          MOV      r4,#0xe00             ;901
000ae2  f04f0900          MOV      r9,#0                 ;903
000ae6  f44f6a80          MOV      r10,#0x400            ;910
000aea  2d01              CMP      r5,#1                 ;895
000aec  d019              BEQ      |L1.2850|
000aee  2d02              CMP      r5,#2                 ;895
000af0  d017              BEQ      |L1.2850|
;;;925    	data[1]=LPC_RTC->MONTH;
;;;926    	data[2]=LPC_RTC->DOM;
;;;927    	data[3]=0;
;;;928    	lc640_write_long_ptr(lc640_adr+8,data);
;;;929    
;;;930    	data[0]=LPC_RTC->HOUR;
;;;931    	data[1]=LPC_RTC->MIN;
;;;932    	data[2]=LPC_RTC->SEC;
;;;933    	data[3]=0;
;;;934    	lc640_write_long_ptr(lc640_adr+12,data);
;;;935    	
;;;936    	data[0]='A';
;;;937    	data[1]='A';
;;;938    	data[2]='A';
;;;939    	data[3]='A';
;;;940    	lc640_write_long_ptr(lc640_adr+16,data);
;;;941    	
;;;942    	data[0]='A';
;;;943    	data[1]='A';
;;;944    	data[2]='A';
;;;945    	data[3]='A';
;;;946    	lc640_write_long_ptr(lc640_adr+20,data);
;;;947    	
;;;948    	data[0]='A';
;;;949    	data[1]='A';
;;;950    	data[2]='A';
;;;951    	data[3]='A';
;;;952    	lc640_write_long_ptr(lc640_adr+24,data);
;;;953    	
;;;954    	data[0]='A';
;;;955    	data[1]='A';
;;;956    	data[2]='A';
;;;957    	data[3]='A';
;;;958    	lc640_write_long_ptr(lc640_adr+28,data);				
;;;959    
;;;960    	//snmp_trap_send("System overload",5,1,2);
;;;961    
;;;962    	
;;;963    	}
;;;964    
;;;965    else if(in==0)
000af2  2d00              CMP      r5,#0
000af4  d16c              BNE      |L1.3024|
;;;966    	{
;;;967    	if(uOutAvar==0)return;
000af6  2800              CMP      r0,#0
000af8  d06a              BEQ      |L1.3024|
;;;968    
;;;969    	uOutAvar=0;
000afa  f8819000          STRB     r9,[r1,#0]
;;;970    
;;;971        event_ptr=lc640_read_int(PTR_EVENT_LOG);
000afe  4620              MOV      r0,r4
000b00  f7fffffe          BL       lc640_read_int
000b04  fa1ffb80          UXTH     r11,r0
;;;972    	event_ptr_find=event_ptr;
000b08  465c              MOV      r4,r11
                  |L1.2826|
;;;973    	
;;;974    avar_u_out_hndl_lbl1: 
;;;975    
;;;976    	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000b0a  eb0a1044          ADD      r0,r10,r4,LSL #5
000b0e  b285              UXTH     r5,r0
;;;977    
;;;978    	lc640_read_long_ptr(lc640_adr,data);
000b10  4669              MOV      r1,sp
000b12  4628              MOV      r0,r5
000b14  f7fffffe          BL       lc640_read_long_ptr
;;;979         
;;;980        if(!((data[0]=='V')&&(data[1]=='O')&&(data[2]=='U')&&(data[3]=='T')))
000b18  f89d0000          LDRB     r0,[sp,#0]
000b1c  2856              CMP      r0,#0x56
000b1e  d17d              BNE      |L1.3100|
000b20  e0a6              B        |L1.3184|
                  |L1.2850|
000b22  700d              STRB     r5,[r1,#0]            ;899
000b24  4620              MOV      r0,r4                 ;901
000b26  f7fffffe          BL       lc640_read_int
000b2a  f1000001          ADD      r0,r0,#1              ;902
000b2e  fa1ffb80          UXTH     r11,r0                ;902
000b32  f1bb0f3f          CMP      r11,#0x3f             ;903
000b36  d901              BLS      |L1.2876|
000b38  f04f0b00          MOV      r11,#0                ;903
                  |L1.2876|
000b3c  fa0ff18b          SXTH     r1,r11                ;904
000b40  4620              MOV      r0,r4                 ;904
000b42  f7fffffe          BL       lc640_write_int
000b46  f6406002          MOV      r0,#0xe02             ;906
000b4a  f7fffffe          BL       lc640_read_int
000b4e  b280              UXTH     r0,r0                 ;906
000b50  283f              CMP      r0,#0x3f              ;907
000b52  d000              BEQ      |L1.2902|
000b54  4658              MOV      r0,r11                ;907
                  |L1.2902|
000b56  b201              SXTH     r1,r0                 ;908
000b58  f6406002          MOV      r0,#0xe02             ;908
000b5c  f7fffffe          BL       lc640_write_int
000b60  4620              MOV      r0,r4                 ;910
000b62  f7fffffe          BL       lc640_read_int
000b66  eb0a1040          ADD      r0,r10,r0,LSL #5      ;910
000b6a  b284              UXTH     r4,r0                 ;910
000b6c  f04f0056          MOV      r0,#0x56              ;912
000b70  f88d0000          STRB     r0,[sp,#0]            ;912
000b74  f04f004f          MOV      r0,#0x4f              ;913
000b78  f88d0001          STRB     r0,[sp,#1]            ;913
000b7c  f04f0055          MOV      r0,#0x55              ;914
000b80  f88d0002          STRB     r0,[sp,#2]            ;914
000b84  f04f0054          MOV      r0,#0x54              ;915
000b88  f88d0003          STRB     r0,[sp,#3]            ;915
000b8c  4669              MOV      r1,sp                 ;916
000b8e  4620              MOV      r0,r4                 ;916
000b90  f7fffffe          BL       lc640_write_long_ptr
000b94  f88d6000          STRB     r6,[sp,#0]            ;918
000b98  f88d7001          STRB     r7,[sp,#1]            ;919
000b9c  f88d5002          STRB     r5,[sp,#2]            ;920
000ba0  f88d9003          STRB     r9,[sp,#3]            ;921
000ba4  4669              MOV      r1,sp                 ;922
000ba6  1d20              ADDS     r0,r4,#4              ;922
000ba8  f7fffffe          BL       lc640_write_long_ptr
000bac  f8b8003c          LDRH     r0,[r8,#0x3c]         ;924
000bb0  f88d0000          STRB     r0,[sp,#0]            ;924
000bb4  f8980038          LDRB     r0,[r8,#0x38]         ;925
000bb8  f88d0001          STRB     r0,[sp,#1]            ;925
000bbc  f898002c          LDRB     r0,[r8,#0x2c]         ;926
000bc0  f88d0002          STRB     r0,[sp,#2]            ;926
000bc4  f88d9003          STRB     r9,[sp,#3]            ;927
000bc8  4669              MOV      r1,sp                 ;928
000bca  f1040008          ADD      r0,r4,#8              ;928
000bce  e000              B        |L1.3026|
                  |L1.3024|
000bd0  e04c              B        |L1.3180|
                  |L1.3026|
000bd2  f7fffffe          BL       lc640_write_long_ptr
000bd6  f8980028          LDRB     r0,[r8,#0x28]         ;930
000bda  f88d0000          STRB     r0,[sp,#0]            ;930
000bde  f8980024          LDRB     r0,[r8,#0x24]         ;931
000be2  f88d0001          STRB     r0,[sp,#1]            ;931
000be6  f8980020          LDRB     r0,[r8,#0x20]         ;932
000bea  f88d0002          STRB     r0,[sp,#2]            ;932
000bee  f88d9003          STRB     r9,[sp,#3]            ;933
000bf2  4669              MOV      r1,sp                 ;934
000bf4  f104000c          ADD      r0,r4,#0xc            ;934
000bf8  f7fffffe          BL       lc640_write_long_ptr
000bfc  f04f0541          MOV      r5,#0x41              ;936
000c00  f88d5000          STRB     r5,[sp,#0]            ;936
000c04  f88d5001          STRB     r5,[sp,#1]            ;937
000c08  f88d5002          STRB     r5,[sp,#2]            ;938
000c0c  f88d5003          STRB     r5,[sp,#3]            ;939
000c10  4669              MOV      r1,sp                 ;940
000c12  f1040010          ADD      r0,r4,#0x10           ;940
000c16  f7fffffe          BL       lc640_write_long_ptr
000c1a  e000              B        |L1.3102|
                  |L1.3100|
000c1c  e034              B        |L1.3208|
                  |L1.3102|
000c1e  f88d5000          STRB     r5,[sp,#0]            ;942
000c22  f88d5001          STRB     r5,[sp,#1]            ;943
000c26  f88d5002          STRB     r5,[sp,#2]            ;944
000c2a  f88d5003          STRB     r5,[sp,#3]            ;945
000c2e  4669              MOV      r1,sp                 ;946
000c30  f1040014          ADD      r0,r4,#0x14           ;946
000c34  f7fffffe          BL       lc640_write_long_ptr
000c38  f88d5000          STRB     r5,[sp,#0]            ;948
000c3c  f88d5001          STRB     r5,[sp,#1]            ;949
000c40  f88d5002          STRB     r5,[sp,#2]            ;950
000c44  f88d5003          STRB     r5,[sp,#3]            ;951
000c48  4669              MOV      r1,sp                 ;952
000c4a  f1040018          ADD      r0,r4,#0x18           ;952
000c4e  f7fffffe          BL       lc640_write_long_ptr
000c52  f88d5000          STRB     r5,[sp,#0]            ;954
000c56  f88d5001          STRB     r5,[sp,#1]            ;955
000c5a  f88d5002          STRB     r5,[sp,#2]            ;956
000c5e  f88d5003          STRB     r5,[sp,#3]            ;957
000c62  4669              MOV      r1,sp                 ;958
000c64  f104001c          ADD      r0,r4,#0x1c           ;958
000c68  f7fffffe          BL       lc640_write_long_ptr
                  |L1.3180|
;;;981         	{        
;;;982         	if(event_ptr_find)event_ptr_find--;
;;;983         	else event_ptr_find=63;
;;;984         	if(event_ptr_find==event_ptr)return;
;;;985         	else goto avar_u_out_hndl_lbl1;
;;;986         	}
;;;987         else 
;;;988         	{
;;;989         	lc640_read_long_ptr(lc640_adr+16,data);
;;;990         	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;991         		{        
;;;992         		if(event_ptr_find)event_ptr_find--;
;;;993             	else event_ptr_find=63;
;;;994             	if(event_ptr_find==event_ptr)return;
;;;995         		else goto avar_u_out_hndl_lbl1;
;;;996         		}
;;;997    
;;;998         	}
;;;999         		
;;;1000   	data[0]=LPC_RTC->YEAR;
;;;1001   	data[1]=LPC_RTC->MONTH;
;;;1002   	data[2]=LPC_RTC->DOM;
;;;1003   	data[3]=0;
;;;1004   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1005   
;;;1006   	data[0]=LPC_RTC->HOUR;
;;;1007   	data[1]=LPC_RTC->MIN;
;;;1008   	data[2]=LPC_RTC->SEC;
;;;1009   	data[3]=0;
;;;1010   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1011   	
;;;1012   	data[0]=*((char*)&volt);
;;;1013   	data[1]=*(((char*)&volt)+1);
;;;1014   	data[2]='B';
;;;1015   	data[3]='B';
;;;1016   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1017   	
;;;1018   	data[0]='B';
;;;1019   	data[1]='B';
;;;1020   	data[2]='B';
;;;1021   	data[3]='B';
;;;1022   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1023   	}
;;;1024   	
;;;1025   }
000c6c  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.3184|
000c70  f89d0001          LDRB     r0,[sp,#1]            ;980
000c74  284f              CMP      r0,#0x4f              ;980
000c76  d107              BNE      |L1.3208|
000c78  f89d0002          LDRB     r0,[sp,#2]            ;980
000c7c  2855              CMP      r0,#0x55              ;980
000c7e  d103              BNE      |L1.3208|
000c80  f89d0003          LDRB     r0,[sp,#3]            ;980
000c84  2854              CMP      r0,#0x54              ;980
000c86  d00a              BEQ      |L1.3230|
                  |L1.3208|
000c88  b11c              CBZ      r4,|L1.3218|
000c8a  f1a40401          SUB      r4,r4,#1              ;982
000c8e  b2a4              UXTH     r4,r4                 ;982
000c90  e001              B        |L1.3222|
                  |L1.3218|
000c92  f04f043f          MOV      r4,#0x3f              ;983
                  |L1.3222|
000c96  455c              CMP      r4,r11                ;984
                  |L1.3224|
000c98  f47faf37          BNE      |L1.2826|
000c9c  e7e6              B        |L1.3180|
                  |L1.3230|
000c9e  4669              MOV      r1,sp                 ;989
000ca0  f1050010          ADD      r0,r5,#0x10           ;989
000ca4  f7fffffe          BL       lc640_read_long_ptr
000ca8  f89d0000          LDRB     r0,[sp,#0]            ;990
000cac  2841              CMP      r0,#0x41              ;990
000cae  d10b              BNE      |L1.3272|
000cb0  f89d0001          LDRB     r0,[sp,#1]            ;990
000cb4  2841              CMP      r0,#0x41              ;990
000cb6  d107              BNE      |L1.3272|
000cb8  f89d0002          LDRB     r0,[sp,#2]            ;990
000cbc  2841              CMP      r0,#0x41              ;990
000cbe  d103              BNE      |L1.3272|
000cc0  f89d0003          LDRB     r0,[sp,#3]            ;990
000cc4  2841              CMP      r0,#0x41              ;990
000cc6  d009              BEQ      |L1.3292|
                  |L1.3272|
000cc8  b11c              CBZ      r4,|L1.3282|
000cca  f1a40401          SUB      r4,r4,#1              ;992
000cce  b2a4              UXTH     r4,r4                 ;992
000cd0  e001              B        |L1.3286|
                  |L1.3282|
000cd2  f04f043f          MOV      r4,#0x3f              ;993
                  |L1.3286|
000cd6  455c              CMP      r4,r11                ;994
000cd8  d1de              BNE      |L1.3224|
000cda  e7c7              B        |L1.3180|
                  |L1.3292|
000cdc  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1000
000ce0  f88d0000          STRB     r0,[sp,#0]            ;1000
000ce4  f8980038          LDRB     r0,[r8,#0x38]         ;1001
000ce8  f88d0001          STRB     r0,[sp,#1]            ;1001
000cec  f898002c          LDRB     r0,[r8,#0x2c]         ;1002
000cf0  f88d0002          STRB     r0,[sp,#2]            ;1002
000cf4  f88d9003          STRB     r9,[sp,#3]            ;1003
000cf8  4669              MOV      r1,sp                 ;1004
000cfa  f1050010          ADD      r0,r5,#0x10           ;1004
000cfe  f7fffffe          BL       lc640_write_long_ptr
000d02  f8980028          LDRB     r0,[r8,#0x28]         ;1006
000d06  f88d0000          STRB     r0,[sp,#0]            ;1006
000d0a  f8980024          LDRB     r0,[r8,#0x24]         ;1007
000d0e  f88d0001          STRB     r0,[sp,#1]            ;1007
000d12  f8980020          LDRB     r0,[r8,#0x20]         ;1008
000d16  f88d0002          STRB     r0,[sp,#2]            ;1008
000d1a  f88d9003          STRB     r9,[sp,#3]            ;1009
000d1e  4669              MOV      r1,sp                 ;1010
000d20  f1050014          ADD      r0,r5,#0x14           ;1010
000d24  f7fffffe          BL       lc640_write_long_ptr
000d28  f88d6000          STRB     r6,[sp,#0]            ;1012
000d2c  f88d7001          STRB     r7,[sp,#1]            ;1013
000d30  f04f0442          MOV      r4,#0x42              ;1014
000d34  f88d4002          STRB     r4,[sp,#2]            ;1014
000d38  f88d4003          STRB     r4,[sp,#3]            ;1015
000d3c  4669              MOV      r1,sp                 ;1016
000d3e  f1050018          ADD      r0,r5,#0x18           ;1016
000d42  f7fffffe          BL       lc640_write_long_ptr
000d46  f88d4000          STRB     r4,[sp,#0]            ;1018
000d4a  f88d4001          STRB     r4,[sp,#1]            ;1019
000d4e  f88d4002          STRB     r4,[sp,#2]            ;1020
000d52  f88d4003          STRB     r4,[sp,#3]            ;1021
000d56  4669              MOV      r1,sp                 ;1022
000d58  f105001c          ADD      r0,r5,#0x1c           ;1022
000d5c  f7fffffe          BL       lc640_write_long_ptr
000d60  e784              B        |L1.3180|
;;;1026   
                          ENDP

                  avar_u_in_hndl PROC
;;;1027   //-----------------------------------------------
;;;1028   void avar_u_in_hndl(char in,short volt)
000d62  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;1029   {
000d66  b081              SUB      sp,sp,#4
000d68  4605              MOV      r5,r0
;;;1030   
;;;1031   char data[4];
;;;1032   unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;1033   if(uInAvar==in)return;
000d6a  481b              LDR      r0,|L1.3544|
000d6c  7801              LDRB     r1,[r0,#0]  ; uInAvar
000d6e  42a9              CMP      r1,r5
000d70  d07e              BEQ      |L1.3696|
;;;1034   if((in==1)||(in==2))
;;;1035   	{
;;;1036   	
;;;1037       
;;;1038   	uInAvar=in;
;;;1039   
;;;1040   	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;1041   	event_ptr++;	
;;;1042   	if(event_ptr>63)event_ptr=0;	
;;;1043   	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;1044   	
;;;1045       event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;1046   	if(event_cnt!=63)event_cnt=event_ptr;
;;;1047   	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;1048   	
;;;1049   	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;1050   	
;;;1051   	data[0]='V';
;;;1052   	data[1]='I';
;;;1053   	data[2]='N';
;;;1054   	data[3]=0;
;;;1055   	lc640_write_long_ptr(lc640_adr,data);
;;;1056   
;;;1057   	data[0]=*((char*)&volt);
000d72  f89d6008          LDRB     r6,[sp,#8]
;;;1058   	data[1]=*(((char*)&volt)+1);
000d76  f89d7009          LDRB     r7,[sp,#9]
;;;1059   	data[2]=in;
;;;1060   	data[3]=0;
;;;1061   	lc640_write_long_ptr(lc640_adr+4,data);
;;;1062   
;;;1063   	data[0]=LPC_RTC->YEAR;
000d7a  f8df8058          LDR      r8,|L1.3540|
000d7e  f44f6460          MOV      r4,#0xe00             ;1040
000d82  f04f0900          MOV      r9,#0                 ;1042
000d86  f44f6a80          MOV      r10,#0x400            ;1049
000d8a  2d01              CMP      r5,#1                 ;1034
000d8c  d026              BEQ      |L1.3548|
000d8e  2d02              CMP      r5,#2                 ;1034
000d90  d024              BEQ      |L1.3548|
;;;1064   	data[1]=LPC_RTC->MONTH;
;;;1065   	data[2]=LPC_RTC->DOM;
;;;1066   	data[3]=0;
;;;1067   	lc640_write_long_ptr(lc640_adr+8,data);
;;;1068   
;;;1069   	data[0]=LPC_RTC->HOUR;
;;;1070   	data[1]=LPC_RTC->MIN;
;;;1071   	data[2]=LPC_RTC->SEC;
;;;1072   	data[3]=0;
;;;1073   	lc640_write_long_ptr(lc640_adr+12,data);
;;;1074   	
;;;1075   	data[0]='A';
;;;1076   	data[1]='A';
;;;1077   	data[2]='A';
;;;1078   	data[3]='A';
;;;1079   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1080   	
;;;1081   	data[0]='A';
;;;1082   	data[1]='A';
;;;1083   	data[2]='A';
;;;1084   	data[3]='A';
;;;1085   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1086   	
;;;1087   	data[0]='A';
;;;1088   	data[1]='A';
;;;1089   	data[2]='A';
;;;1090   	data[3]='A';
;;;1091   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1092   	
;;;1093   	data[0]='A';
;;;1094   	data[1]='A';
;;;1095   	data[2]='A';
;;;1096   	data[3]='A';
;;;1097   	lc640_write_long_ptr(lc640_adr+28,data);				
;;;1098   
;;;1099   	//snmp_trap_send("System overload",5,1,2);
;;;1100   
;;;1101   	
;;;1102   	}
;;;1103   
;;;1104   else if(in==0)
000d92  2d00              CMP      r5,#0
000d94  d16c              BNE      |L1.3696|
;;;1105   	{
;;;1106   	
;;;1107   
;;;1108   	uInAvar=0;
000d96  f8809000          STRB     r9,[r0,#0]
;;;1109   
;;;1110       event_ptr=lc640_read_int(PTR_EVENT_LOG);
000d9a  4620              MOV      r0,r4
000d9c  f7fffffe          BL       lc640_read_int
000da0  b284              UXTH     r4,r0
000da2  46a3              MOV      r11,r4
;;;1111   	event_ptr_find=event_ptr;
000da4  465c              MOV      r4,r11
                  |L1.3494|
;;;1112   	
;;;1113   avar_u_in_hndl_lbl1: 
;;;1114   
;;;1115   	lc640_adr=EVENT_LOG+(event_ptr_find*32);
000da6  eb0a1044          ADD      r0,r10,r4,LSL #5
000daa  b285              UXTH     r5,r0
;;;1116   
;;;1117   	lc640_read_long_ptr(lc640_adr,data);
000dac  4669              MOV      r1,sp
000dae  4628              MOV      r0,r5
000db0  f7fffffe          BL       lc640_read_long_ptr
;;;1118        
;;;1119       if(!((data[0]=='V')&&(data[1]=='I')&&(data[2]=='N')&&(data[3]==0)))
000db4  f89d0000          LDRB     r0,[sp,#0]
000db8  2856              CMP      r0,#0x56
000dba  d17d              BNE      |L1.3768|
000dbc  e0b2              B        |L1.3876|
000dbe  0000              DCW      0x0000
                  |L1.3520|
000dc0  53797374          DCB      "System overload",0
000dc4  656d206f
000dc8  7665726c
000dcc  6f616400
                  |L1.3536|
                          DCD      uOutAvar
                  |L1.3540|
                          DCD      0x40024000
                  |L1.3544|
                          DCD      uInAvar
                  |L1.3548|
000ddc  7005              STRB     r5,[r0,#0]            ;1038
000dde  4620              MOV      r0,r4                 ;1040
000de0  f7fffffe          BL       lc640_read_int
000de4  f1000001          ADD      r0,r0,#1              ;1041
000de8  fa1ffb80          UXTH     r11,r0                ;1041
000dec  f1bb0f3f          CMP      r11,#0x3f             ;1042
000df0  d901              BLS      |L1.3574|
000df2  f04f0b00          MOV      r11,#0                ;1042
                  |L1.3574|
000df6  fa0ff18b          SXTH     r1,r11                ;1043
000dfa  4620              MOV      r0,r4                 ;1043
000dfc  f7fffffe          BL       lc640_write_int
000e00  f6406002          MOV      r0,#0xe02             ;1045
000e04  f7fffffe          BL       lc640_read_int
000e08  b280              UXTH     r0,r0                 ;1045
000e0a  283f              CMP      r0,#0x3f              ;1046
000e0c  d000              BEQ      |L1.3600|
000e0e  4658              MOV      r0,r11                ;1046
                  |L1.3600|
000e10  b201              SXTH     r1,r0                 ;1047
000e12  f6406002          MOV      r0,#0xe02             ;1047
000e16  f7fffffe          BL       lc640_write_int
000e1a  4620              MOV      r0,r4                 ;1049
000e1c  f7fffffe          BL       lc640_read_int
000e20  eb0a1040          ADD      r0,r10,r0,LSL #5      ;1049
000e24  b284              UXTH     r4,r0                 ;1049
000e26  f04f0056          MOV      r0,#0x56              ;1051
000e2a  f88d0000          STRB     r0,[sp,#0]            ;1051
000e2e  f04f0049          MOV      r0,#0x49              ;1052
000e32  f88d0001          STRB     r0,[sp,#1]            ;1052
000e36  f04f004e          MOV      r0,#0x4e              ;1053
000e3a  f88d0002          STRB     r0,[sp,#2]            ;1053
000e3e  f88d9003          STRB     r9,[sp,#3]            ;1054
000e42  4669              MOV      r1,sp                 ;1055
000e44  4620              MOV      r0,r4                 ;1055
000e46  f7fffffe          BL       lc640_write_long_ptr
000e4a  f88d6000          STRB     r6,[sp,#0]            ;1057
000e4e  f88d7001          STRB     r7,[sp,#1]            ;1058
000e52  f88d5002          STRB     r5,[sp,#2]            ;1059
000e56  f88d9003          STRB     r9,[sp,#3]            ;1060
000e5a  4669              MOV      r1,sp                 ;1061
000e5c  1d20              ADDS     r0,r4,#4              ;1061
000e5e  f7fffffe          BL       lc640_write_long_ptr
000e62  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1063
000e66  f88d0000          STRB     r0,[sp,#0]            ;1063
000e6a  f8980038          LDRB     r0,[r8,#0x38]         ;1064
000e6e  e000              B        |L1.3698|
                  |L1.3696|
000e70  e057              B        |L1.3874|
                  |L1.3698|
000e72  f88d0001          STRB     r0,[sp,#1]            ;1064
000e76  f898002c          LDRB     r0,[r8,#0x2c]         ;1065
000e7a  f88d0002          STRB     r0,[sp,#2]            ;1065
000e7e  f88d9003          STRB     r9,[sp,#3]            ;1066
000e82  4669              MOV      r1,sp                 ;1067
000e84  f1040008          ADD      r0,r4,#8              ;1067
000e88  f7fffffe          BL       lc640_write_long_ptr
000e8c  f8980028          LDRB     r0,[r8,#0x28]         ;1069
000e90  f88d0000          STRB     r0,[sp,#0]            ;1069
000e94  f8980024          LDRB     r0,[r8,#0x24]         ;1070
000e98  f88d0001          STRB     r0,[sp,#1]            ;1070
000e9c  f8980020          LDRB     r0,[r8,#0x20]         ;1071
000ea0  f88d0002          STRB     r0,[sp,#2]            ;1071
000ea4  f88d9003          STRB     r9,[sp,#3]            ;1072
000ea8  4669              MOV      r1,sp                 ;1073
000eaa  f104000c          ADD      r0,r4,#0xc            ;1073
000eae  f7fffffe          BL       lc640_write_long_ptr
000eb2  f04f0541          MOV      r5,#0x41              ;1075
000eb6  e000              B        |L1.3770|
                  |L1.3768|
000eb8  e03f              B        |L1.3898|
                  |L1.3770|
000eba  f88d5000          STRB     r5,[sp,#0]            ;1075
000ebe  f88d5001          STRB     r5,[sp,#1]            ;1076
000ec2  f88d5002          STRB     r5,[sp,#2]            ;1077
000ec6  f88d5003          STRB     r5,[sp,#3]            ;1078
000eca  4669              MOV      r1,sp                 ;1079
000ecc  f1040010          ADD      r0,r4,#0x10           ;1079
000ed0  f7fffffe          BL       lc640_write_long_ptr
000ed4  f88d5000          STRB     r5,[sp,#0]            ;1081
000ed8  f88d5001          STRB     r5,[sp,#1]            ;1082
000edc  f88d5002          STRB     r5,[sp,#2]            ;1083
000ee0  f88d5003          STRB     r5,[sp,#3]            ;1084
000ee4  4669              MOV      r1,sp                 ;1085
000ee6  f1040014          ADD      r0,r4,#0x14           ;1085
000eea  f7fffffe          BL       lc640_write_long_ptr
000eee  f88d5000          STRB     r5,[sp,#0]            ;1087
000ef2  f88d5001          STRB     r5,[sp,#1]            ;1088
000ef6  f88d5002          STRB     r5,[sp,#2]            ;1089
000efa  f88d5003          STRB     r5,[sp,#3]            ;1090
000efe  4669              MOV      r1,sp                 ;1091
000f00  f1040018          ADD      r0,r4,#0x18           ;1091
000f04  f7fffffe          BL       lc640_write_long_ptr
000f08  f88d5000          STRB     r5,[sp,#0]            ;1093
000f0c  f88d5001          STRB     r5,[sp,#1]            ;1094
000f10  f88d5002          STRB     r5,[sp,#2]            ;1095
000f14  f88d5003          STRB     r5,[sp,#3]            ;1096
000f18  4669              MOV      r1,sp                 ;1097
000f1a  f104001c          ADD      r0,r4,#0x1c           ;1097
000f1e  f7fffffe          BL       lc640_write_long_ptr
                  |L1.3874|
;;;1120        	{        
;;;1121        	if(event_ptr_find)event_ptr_find--;
;;;1122        	else event_ptr_find=63;
;;;1123        	if(event_ptr_find==event_ptr)return;
;;;1124        	else goto avar_u_in_hndl_lbl1;
;;;1125        	}
;;;1126        else 
;;;1127        	{
;;;1128        	lc640_read_long_ptr(lc640_adr+16,data);
;;;1129        	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;1130        		{        
;;;1131        		if(event_ptr_find)event_ptr_find--;
;;;1132            	else event_ptr_find=63;
;;;1133            	if(event_ptr_find==event_ptr)return;
;;;1134        		else goto avar_u_in_hndl_lbl1;
;;;1135        		}
;;;1136   
;;;1137        	}
;;;1138        		
;;;1139   	data[0]=LPC_RTC->YEAR;
;;;1140   	data[1]=LPC_RTC->MONTH;
;;;1141   	data[2]=LPC_RTC->DOM;
;;;1142   	data[3]=0;
;;;1143   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1144   
;;;1145   	data[0]=LPC_RTC->HOUR;
;;;1146   	data[1]=LPC_RTC->MIN;
;;;1147   	data[2]=LPC_RTC->SEC;
;;;1148   	data[3]=0;
;;;1149   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1150   	
;;;1151   	data[0]=*((char*)&volt);
;;;1152   	data[1]=*(((char*)&volt)+1);
;;;1153   	data[2]='B';
;;;1154   	data[3]='B';
;;;1155   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1156   	
;;;1157   	data[0]='B';
;;;1158   	data[1]='B';
;;;1159   	data[2]='B';
;;;1160   	data[3]='B';
;;;1161   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1162   	}
;;;1163   	
;;;1164   }
000f22  e6a3              B        |L1.3180|
                  |L1.3876|
000f24  f89d0001          LDRB     r0,[sp,#1]            ;1119
000f28  2849              CMP      r0,#0x49              ;1119
000f2a  d106              BNE      |L1.3898|
000f2c  f89d0002          LDRB     r0,[sp,#2]            ;1119
000f30  284e              CMP      r0,#0x4e              ;1119
000f32  d102              BNE      |L1.3898|
000f34  f89d0003          LDRB     r0,[sp,#3]            ;1119
000f38  b150              CBZ      r0,|L1.3920|
                  |L1.3898|
000f3a  b11c              CBZ      r4,|L1.3908|
000f3c  f1a40401          SUB      r4,r4,#1              ;1121
000f40  b2a4              UXTH     r4,r4                 ;1121
000f42  e001              B        |L1.3912|
                  |L1.3908|
000f44  f04f043f          MOV      r4,#0x3f              ;1122
                  |L1.3912|
000f48  455c              CMP      r4,r11                ;1123
                  |L1.3914|
000f4a  f47faf2c          BNE      |L1.3494|
000f4e  e68d              B        |L1.3180|
                  |L1.3920|
000f50  4669              MOV      r1,sp                 ;1128
000f52  f1050010          ADD      r0,r5,#0x10           ;1128
000f56  f7fffffe          BL       lc640_read_long_ptr
000f5a  f89d0000          LDRB     r0,[sp,#0]            ;1129
000f5e  2841              CMP      r0,#0x41              ;1129
000f60  d10b              BNE      |L1.3962|
000f62  f89d0001          LDRB     r0,[sp,#1]            ;1129
000f66  2841              CMP      r0,#0x41              ;1129
000f68  d107              BNE      |L1.3962|
000f6a  f89d0002          LDRB     r0,[sp,#2]            ;1129
000f6e  2841              CMP      r0,#0x41              ;1129
000f70  d103              BNE      |L1.3962|
000f72  f89d0003          LDRB     r0,[sp,#3]            ;1129
000f76  2841              CMP      r0,#0x41              ;1129
000f78  d009              BEQ      |L1.3982|
                  |L1.3962|
000f7a  b11c              CBZ      r4,|L1.3972|
000f7c  f1a40401          SUB      r4,r4,#1              ;1131
000f80  b2a4              UXTH     r4,r4                 ;1131
000f82  e001              B        |L1.3976|
                  |L1.3972|
000f84  f04f043f          MOV      r4,#0x3f              ;1132
                  |L1.3976|
000f88  455c              CMP      r4,r11                ;1133
000f8a  d1de              BNE      |L1.3914|
000f8c  e66e              B        |L1.3180|
                  |L1.3982|
000f8e  f8b8003c          LDRH     r0,[r8,#0x3c]         ;1139
000f92  f88d0000          STRB     r0,[sp,#0]            ;1139
000f96  f8980038          LDRB     r0,[r8,#0x38]         ;1140
000f9a  f88d0001          STRB     r0,[sp,#1]            ;1140
000f9e  f898002c          LDRB     r0,[r8,#0x2c]         ;1141
000fa2  f88d0002          STRB     r0,[sp,#2]            ;1141
000fa6  f88d9003          STRB     r9,[sp,#3]            ;1142
000faa  4669              MOV      r1,sp                 ;1143
000fac  f1050010          ADD      r0,r5,#0x10           ;1143
000fb0  f7fffffe          BL       lc640_write_long_ptr
000fb4  f8980028          LDRB     r0,[r8,#0x28]         ;1145
000fb8  f88d0000          STRB     r0,[sp,#0]            ;1145
000fbc  f8980024          LDRB     r0,[r8,#0x24]         ;1146
000fc0  f88d0001          STRB     r0,[sp,#1]            ;1146
000fc4  f8980020          LDRB     r0,[r8,#0x20]         ;1147
000fc8  f88d0002          STRB     r0,[sp,#2]            ;1147
000fcc  f88d9003          STRB     r9,[sp,#3]            ;1148
000fd0  4669              MOV      r1,sp                 ;1149
000fd2  f1050014          ADD      r0,r5,#0x14           ;1149
000fd6  f7fffffe          BL       lc640_write_long_ptr
000fda  f88d6000          STRB     r6,[sp,#0]            ;1151
000fde  f88d7001          STRB     r7,[sp,#1]            ;1152
000fe2  f04f0442          MOV      r4,#0x42              ;1153
000fe6  f88d4002          STRB     r4,[sp,#2]            ;1153
000fea  f88d4003          STRB     r4,[sp,#3]            ;1154
000fee  4669              MOV      r1,sp                 ;1155
000ff0  f1050018          ADD      r0,r5,#0x18           ;1155
000ff4  f7fffffe          BL       lc640_write_long_ptr
000ff8  f88d4000          STRB     r4,[sp,#0]            ;1157
000ffc  f88d4001          STRB     r4,[sp,#1]            ;1158
001000  f88d4002          STRB     r4,[sp,#2]            ;1159
001004  f88d4003          STRB     r4,[sp,#3]            ;1160
001008  4669              MOV      r1,sp                 ;1161
00100a  f105001c          ADD      r0,r5,#0x1c           ;1161
00100e  f7fffffe          BL       lc640_write_long_ptr
001012  e62b              B        |L1.3180|
;;;1165   
                          ENDP

                  avar_sys_t_hndl PROC
;;;1167   //-----------------------------------------------
;;;1168   void avar_sys_t_hndl(char in,short temper)
001014  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;1169   {
001018  b081              SUB      sp,sp,#4
;;;1170   
;;;1171   char data[4];
;;;1172   unsigned short event_ptr,lc640_adr,event_ptr_find,event_cnt;
;;;1173   if(sysTAvar==in)return;
00101a  49a0              LDR      r1,|L1.4764|
00101c  780a              LDRB     r2,[r1,#0]  ; sysTAvar
00101e  4282              CMP      r2,r0
001020  d07e              BEQ      |L1.4384|
;;;1174   if(in==1)
;;;1175   	{
;;;1176   	sysTAvar=in;
;;;1177   
;;;1178   	event_ptr=lc640_read_int(PTR_EVENT_LOG);
;;;1179   	event_ptr++;	
;;;1180   	if(event_ptr>63)event_ptr=0;	
;;;1181   	lc640_write_int(PTR_EVENT_LOG,event_ptr);	
;;;1182   	
;;;1183       event_cnt=lc640_read_int(CNT_EVENT_LOG);
;;;1184   	if(event_cnt!=63)event_cnt=event_ptr;
;;;1185   	lc640_write_int(CNT_EVENT_LOG,event_cnt); 
;;;1186   	
;;;1187   	lc640_adr=EVENT_LOG+(lc640_read_int(PTR_EVENT_LOG)*32);
;;;1188   	
;;;1189   	data[0]='T';
;;;1190   	data[1]='S';
;;;1191   	data[2]='Y';
;;;1192   	data[3]='S';
;;;1193   	lc640_write_long_ptr(lc640_adr,data);
;;;1194   
;;;1195   	data[0]=*((char*)&temper);
001022  f89d7008          LDRB     r7,[sp,#8]
;;;1196   	data[1]=*(((char*)&temper)+1);
001026  f89d8009          LDRB     r8,[sp,#9]
;;;1197   	data[2]=0;
;;;1198   	data[3]=0;
;;;1199   	lc640_write_long_ptr(lc640_adr+4,data);
;;;1200   
;;;1201   	data[0]=LPC_RTC->YEAR;
00102a  f8df9274          LDR      r9,|L1.4768|
00102e  f44f6560          MOV      r5,#0xe00             ;1178
001032  f04f0a00          MOV      r10,#0                ;1180
001036  f44f6b80          MOV      r11,#0x400            ;1187
00103a  2801              CMP      r0,#1                 ;1174
00103c  d014              BEQ      |L1.4200|
;;;1202   	data[1]=LPC_RTC->MONTH;
;;;1203   	data[2]=LPC_RTC->DOM;
;;;1204   	data[3]=0;
;;;1205   	lc640_write_long_ptr(lc640_adr+8,data);
;;;1206   
;;;1207   	data[0]=LPC_RTC->HOUR;
;;;1208   	data[1]=LPC_RTC->MIN;
;;;1209   	data[2]=LPC_RTC->SEC;
;;;1210   	data[3]=0;
;;;1211   	lc640_write_long_ptr(lc640_adr+12,data);
;;;1212   	
;;;1213   	data[0]='A';
;;;1214   	data[1]='A';
;;;1215   	data[2]='A';
;;;1216   	data[3]='A';
;;;1217   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1218   	
;;;1219   	data[0]='A';
;;;1220   	data[1]='A';
;;;1221   	data[2]='A';
;;;1222   	data[3]='A';
;;;1223   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1224   	
;;;1225   	data[0]='A';
;;;1226   	data[1]='A';
;;;1227   	data[2]='A';
;;;1228   	data[3]='A';
;;;1229   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1230   	
;;;1231   	data[0]='A';
;;;1232   	data[1]='A';
;;;1233   	data[2]='A';
;;;1234   	data[3]='A';
;;;1235   	lc640_write_long_ptr(lc640_adr+28,data);				
;;;1236   
;;;1237   	//snmp_trap_send("System overload",5,1,2);
;;;1238   
;;;1239   	
;;;1240   	}
;;;1241   
;;;1242   else if(in==0)
00103e  2800              CMP      r0,#0
001040  d16e              BNE      |L1.4384|
;;;1243   	{
;;;1244   	
;;;1245   
;;;1246   	sysTAvar=0;
001042  f881a000          STRB     r10,[r1,#0]
;;;1247   
;;;1248       event_ptr=lc640_read_int(PTR_EVENT_LOG);
001046  4628              MOV      r0,r5
001048  f7fffffe          BL       lc640_read_int
00104c  b286              UXTH     r6,r0
;;;1249   	event_ptr_find=event_ptr;
00104e  4634              MOV      r4,r6
                  |L1.4176|
;;;1250   	
;;;1251   avar_sys_t_hndl_lbl1: 
;;;1252   
;;;1253   	lc640_adr=EVENT_LOG+(event_ptr_find*32);
001050  eb0b1044          ADD      r0,r11,r4,LSL #5
001054  b285              UXTH     r5,r0
;;;1254   
;;;1255   	lc640_read_long_ptr(lc640_adr,data);
001056  4669              MOV      r1,sp
001058  4628              MOV      r0,r5
00105a  f7fffffe          BL       lc640_read_long_ptr
;;;1256        
;;;1257       if(!((data[0]=='T')&&(data[1]=='S')&&(data[2]=='Y')&&(data[3]=='S')))
00105e  f89d0000          LDRB     r0,[sp,#0]
001062  2854              CMP      r0,#0x54
001064  d17e              BNE      |L1.4452|
001066  e0a0              B        |L1.4522|
                  |L1.4200|
001068  7008              STRB     r0,[r1,#0]            ;1176
00106a  4628              MOV      r0,r5                 ;1178
00106c  f7fffffe          BL       lc640_read_int
001070  f1000001          ADD      r0,r0,#1              ;1179
001074  b284              UXTH     r4,r0                 ;1179
001076  2c3f              CMP      r4,#0x3f              ;1180
001078  d901              BLS      |L1.4222|
00107a  f04f0400          MOV      r4,#0                 ;1180
                  |L1.4222|
00107e  b221              SXTH     r1,r4                 ;1181
001080  4628              MOV      r0,r5                 ;1181
001082  f7fffffe          BL       lc640_write_int
001086  f6406602          MOV      r6,#0xe02             ;1183
00108a  4630              MOV      r0,r6                 ;1183
00108c  f7fffffe          BL       lc640_read_int
001090  b280              UXTH     r0,r0                 ;1183
001092  283f              CMP      r0,#0x3f              ;1184
001094  d000              BEQ      |L1.4248|
001096  4620              MOV      r0,r4                 ;1184
                  |L1.4248|
001098  b201              SXTH     r1,r0                 ;1185
00109a  4630              MOV      r0,r6                 ;1185
00109c  f7fffffe          BL       lc640_write_int
0010a0  4628              MOV      r0,r5                 ;1187
0010a2  f7fffffe          BL       lc640_read_int
0010a6  eb0b1040          ADD      r0,r11,r0,LSL #5      ;1187
0010aa  b284              UXTH     r4,r0                 ;1187
0010ac  f04f0054          MOV      r0,#0x54              ;1189
0010b0  f88d0000          STRB     r0,[sp,#0]            ;1189
0010b4  f04f0053          MOV      r0,#0x53              ;1190
0010b8  f88d0001          STRB     r0,[sp,#1]            ;1190
0010bc  f04f0159          MOV      r1,#0x59              ;1191
0010c0  f88d1002          STRB     r1,[sp,#2]            ;1191
0010c4  f88d0003          STRB     r0,[sp,#3]            ;1192
0010c8  4669              MOV      r1,sp                 ;1193
0010ca  4620              MOV      r0,r4                 ;1193
0010cc  f7fffffe          BL       lc640_write_long_ptr
0010d0  f88d7000          STRB     r7,[sp,#0]            ;1195
0010d4  f88d8001          STRB     r8,[sp,#1]            ;1196
0010d8  f88da002          STRB     r10,[sp,#2]           ;1197
0010dc  f88da003          STRB     r10,[sp,#3]           ;1198
0010e0  4669              MOV      r1,sp                 ;1199
0010e2  1d20              ADDS     r0,r4,#4              ;1199
0010e4  f7fffffe          BL       lc640_write_long_ptr
0010e8  f8b9003c          LDRH     r0,[r9,#0x3c]         ;1201
0010ec  f88d0000          STRB     r0,[sp,#0]            ;1201
0010f0  f8990038          LDRB     r0,[r9,#0x38]         ;1202
0010f4  f88d0001          STRB     r0,[sp,#1]            ;1202
0010f8  f899002c          LDRB     r0,[r9,#0x2c]         ;1203
0010fc  f88d0002          STRB     r0,[sp,#2]            ;1203
001100  f88da003          STRB     r10,[sp,#3]           ;1204
001104  4669              MOV      r1,sp                 ;1205
001106  f1040008          ADD      r0,r4,#8              ;1205
00110a  f7fffffe          BL       lc640_write_long_ptr
00110e  f8990028          LDRB     r0,[r9,#0x28]         ;1207
001112  f88d0000          STRB     r0,[sp,#0]            ;1207
001116  f8990024          LDRB     r0,[r9,#0x24]         ;1208
00111a  f88d0001          STRB     r0,[sp,#1]            ;1208
00111e  e000              B        |L1.4386|
                  |L1.4384|
001120  e042              B        |L1.4520|
                  |L1.4386|
001122  f8990020          LDRB     r0,[r9,#0x20]         ;1209
001126  f88d0002          STRB     r0,[sp,#2]            ;1209
00112a  f88da003          STRB     r10,[sp,#3]           ;1210
00112e  4669              MOV      r1,sp                 ;1211
001130  f104000c          ADD      r0,r4,#0xc            ;1211
001134  f7fffffe          BL       lc640_write_long_ptr
001138  f04f0541          MOV      r5,#0x41              ;1213
00113c  f88d5000          STRB     r5,[sp,#0]            ;1213
001140  f88d5001          STRB     r5,[sp,#1]            ;1214
001144  f88d5002          STRB     r5,[sp,#2]            ;1215
001148  f88d5003          STRB     r5,[sp,#3]            ;1216
00114c  4669              MOV      r1,sp                 ;1217
00114e  f1040010          ADD      r0,r4,#0x10           ;1217
001152  f7fffffe          BL       lc640_write_long_ptr
001156  f88d5000          STRB     r5,[sp,#0]            ;1219
00115a  f88d5001          STRB     r5,[sp,#1]            ;1220
00115e  f88d5002          STRB     r5,[sp,#2]            ;1221
001162  e000              B        |L1.4454|
                  |L1.4452|
001164  e02d              B        |L1.4546|
                  |L1.4454|
001166  f88d5003          STRB     r5,[sp,#3]            ;1222
00116a  4669              MOV      r1,sp                 ;1223
00116c  f1040014          ADD      r0,r4,#0x14           ;1223
001170  f7fffffe          BL       lc640_write_long_ptr
001174  f88d5000          STRB     r5,[sp,#0]            ;1225
001178  f88d5001          STRB     r5,[sp,#1]            ;1226
00117c  f88d5002          STRB     r5,[sp,#2]            ;1227
001180  f88d5003          STRB     r5,[sp,#3]            ;1228
001184  4669              MOV      r1,sp                 ;1229
001186  f1040018          ADD      r0,r4,#0x18           ;1229
00118a  f7fffffe          BL       lc640_write_long_ptr
00118e  f88d5000          STRB     r5,[sp,#0]            ;1231
001192  f88d5001          STRB     r5,[sp,#1]            ;1232
001196  f88d5002          STRB     r5,[sp,#2]            ;1233
00119a  f88d5003          STRB     r5,[sp,#3]            ;1234
00119e  4669              MOV      r1,sp                 ;1235
0011a0  f104001c          ADD      r0,r4,#0x1c           ;1235
0011a4  f7fffffe          BL       lc640_write_long_ptr
                  |L1.4520|
;;;1258        	{        
;;;1259        	if(event_ptr_find)event_ptr_find--;
;;;1260        	else event_ptr_find=63;
;;;1261        	if(event_ptr_find==event_ptr)return;
;;;1262        	else goto avar_sys_t_hndl_lbl1;
;;;1263        	}
;;;1264        else 
;;;1265        	{
;;;1266        	lc640_read_long_ptr(lc640_adr+16,data);
;;;1267        	if(!((data[0]=='A')&&(data[1]=='A')&&(data[2]=='A')&&(data[3]=='A')))
;;;1268        		{        
;;;1269        		if(event_ptr_find)event_ptr_find--;
;;;1270            	else event_ptr_find=63;
;;;1271            	if(event_ptr_find==event_ptr)return;
;;;1272        		else goto avar_sys_t_hndl_lbl1;
;;;1273        		}
;;;1274   
;;;1275        	}
;;;1276        		
;;;1277   	data[0]=LPC_RTC->YEAR;
;;;1278   	data[1]=LPC_RTC->MONTH;
;;;1279   	data[2]=LPC_RTC->DOM;
;;;1280   	data[3]=0;
;;;1281   	lc640_write_long_ptr(lc640_adr+16,data);
;;;1282   
;;;1283   	data[0]=LPC_RTC->HOUR;
;;;1284   	data[1]=LPC_RTC->MIN;
;;;1285   	data[2]=LPC_RTC->SEC;
;;;1286   	data[3]=0;
;;;1287   	lc640_write_long_ptr(lc640_adr+20,data);
;;;1288   	
;;;1289   	data[0]=*((char*)&temper);
;;;1290   	data[1]=*(((char*)&temper)+1);
;;;1291   	data[2]='B';
;;;1292   	data[3]='B';
;;;1293   	lc640_write_long_ptr(lc640_adr+24,data);
;;;1294   	
;;;1295   	data[0]='B';
;;;1296   	data[1]='B';
;;;1297   	data[2]='B';
;;;1298   	data[3]='B';
;;;1299   	lc640_write_long_ptr(lc640_adr+28,data);
;;;1300   	}
;;;1301   	
;;;1302   }
0011a8  e560              B        |L1.3180|
                  |L1.4522|
0011aa  f89d0001          LDRB     r0,[sp,#1]            ;1257
0011ae  2853              CMP      r0,#0x53              ;1257
0011b0  d107              BNE      |L1.4546|
0011b2  f89d0002          LDRB     r0,[sp,#2]            ;1257
0011b6  2859              CMP      r0,#0x59              ;1257
0011b8  d103              BNE      |L1.4546|
0011ba  f89d0003          LDRB     r0,[sp,#3]            ;1257
0011be  2853              CMP      r0,#0x53              ;1257
0011c0  d00a              BEQ      |L1.4568|
                  |L1.4546|
0011c2  b11c              CBZ      r4,|L1.4556|
0011c4  f1a40401          SUB      r4,r4,#1              ;1259
0011c8  b2a4              UXTH     r4,r4                 ;1259
0011ca  e001              B        |L1.4560|
                  |L1.4556|
0011cc  f04f043f          MOV      r4,#0x3f              ;1260
                  |L1.4560|
0011d0  42b4              CMP      r4,r6                 ;1261
                  |L1.4562|
0011d2  f47faf3d          BNE      |L1.4176|
0011d6  e549              B        |L1.3180|
                  |L1.4568|
0011d8  4669              MOV      r1,sp                 ;1266
0011da  f1050010          ADD      r0,r5,#0x10           ;1266
0011de  f7fffffe          BL       lc640_read_long_ptr
0011e2  f89d0000          LDRB     r0,[sp,#0]            ;1267
0011e6  2841              CMP      r0,#0x41              ;1267
0011e8  d10b              BNE      |L1.4610|
0011ea  f89d0001          LDRB     r0,[sp,#1]            ;1267
0011ee  2841              CMP      r0,#0x41              ;1267
0011f0  d107              BNE      |L1.4610|
0011f2  f89d0002          LDRB     r0,[sp,#2]            ;1267
0011f6  2841              CMP      r0,#0x41              ;1267
0011f8  d103              BNE      |L1.4610|
0011fa  f89d0003          LDRB     r0,[sp,#3]            ;1267
0011fe  2841              CMP      r0,#0x41              ;1267
001200  d009              BEQ      |L1.4630|
                  |L1.4610|
001202  b11c              CBZ      r4,|L1.4620|
001204  f1a40401          SUB      r4,r4,#1              ;1269
001208  b2a4              UXTH     r4,r4                 ;1269
00120a  e001              B        |L1.4624|
                  |L1.4620|
00120c  f04f043f          MOV      r4,#0x3f              ;1270
                  |L1.4624|
001210  42b4              CMP      r4,r6                 ;1271
001212  d1de              BNE      |L1.4562|
001214  e52a              B        |L1.3180|
                  |L1.4630|
001216  f8b9003c          LDRH     r0,[r9,#0x3c]         ;1277
00121a  f88d0000          STRB     r0,[sp,#0]            ;1277
00121e  f8990038          LDRB     r0,[r9,#0x38]         ;1278
001222  f88d0001          STRB     r0,[sp,#1]            ;1278
001226  f899002c          LDRB     r0,[r9,#0x2c]         ;1279
00122a  f88d0002          STRB     r0,[sp,#2]            ;1279
00122e  f88da003          STRB     r10,[sp,#3]           ;1280
001232  4669              MOV      r1,sp                 ;1281
001234  f1050010          ADD      r0,r5,#0x10           ;1281
001238  f7fffffe          BL       lc640_write_long_ptr
00123c  f8990028          LDRB     r0,[r9,#0x28]         ;1283
001240  f88d0000          STRB     r0,[sp,#0]            ;1283
001244  f8990024          LDRB     r0,[r9,#0x24]         ;1284
001248  f88d0001          STRB     r0,[sp,#1]            ;1284
00124c  f8990020          LDRB     r0,[r9,#0x20]         ;1285
001250  f88d0002          STRB     r0,[sp,#2]            ;1285
001254  f88da003          STRB     r10,[sp,#3]           ;1286
001258  4669              MOV      r1,sp                 ;1287
00125a  f1050014          ADD      r0,r5,#0x14           ;1287
00125e  f7fffffe          BL       lc640_write_long_ptr
001262  f88d7000          STRB     r7,[sp,#0]            ;1289
001266  f88d8001          STRB     r8,[sp,#1]            ;1290
00126a  f04f0442          MOV      r4,#0x42              ;1291
00126e  f88d4002          STRB     r4,[sp,#2]            ;1291
001272  f88d4003          STRB     r4,[sp,#3]            ;1292
001276  4669              MOV      r1,sp                 ;1293
001278  f1050018          ADD      r0,r5,#0x18           ;1293
00127c  f7fffffe          BL       lc640_write_long_ptr
001280  f88d4000          STRB     r4,[sp,#0]            ;1295
001284  f88d4001          STRB     r4,[sp,#1]            ;1296
001288  f88d4002          STRB     r4,[sp,#2]            ;1297
00128c  f88d4003          STRB     r4,[sp,#3]            ;1298
001290  4669              MOV      r1,sp                 ;1299
001292  f105001c          ADD      r0,r5,#0x1c           ;1299
001296  f7fffffe          BL       lc640_write_long_ptr
00129a  e4e7              B        |L1.3180|
;;;1303   
                          ENDP

                  |L1.4764|
                          DCD      sysTAvar
                  |L1.4768|
                          DCD      0x40024000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  wrk_mem_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000004  4606              MOV      r6,r0
000006  eb060046          ADD      r0,r6,r6,LSL #1
00000a  eb001106          ADD      r1,r0,r6,LSL #4
00000e  4845              LDR      r0,|L2.292|
000010  eb000481          ADD      r4,r0,r1,LSL #2
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  8be0              LDRH     r0,[r4,#0x1e]
000016  2805              CMP      r0,#5
000018  d37e              BCC      |L2.280|
;;;66     
;;;67     for(i=0;i<2;i++)
00001a  4843              LDR      r0,|L2.296|
00001c  8800              LDRH     r0,[r0,#0]  ; bat_u_old_cnt
;;;68     	{
;;;69     	if(bat[i]._av&1)	SET_REG(avar_stat,1,1+i,1);
00001e  f1000006          ADD      r0,r0,#6
000022  f0000007          AND      r0,r0,#7
000026  eb040040          ADD      r0,r4,r0,LSL #1
00002a  8c00              LDRH     r0,[r0,#0x20]
00002c  9000              STR      r0,[sp,#0]
00002e  f44f6760          MOV      r7,#0xe00
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       lc640_read_int
000038  f1000001          ADD      r0,r0,#1
00003c  b285              UXTH     r5,r0
00003e  2d3f              CMP      r5,#0x3f
000040  d901              BLS      |L2.70|
000042  f04f0500          MOV      r5,#0
                  |L2.70|
000046  b229              SXTH     r1,r5
000048  4638              MOV      r0,r7
00004a  f7fffffe          BL       lc640_write_int
;;;70     	else	   		SET_REG(avar_stat,0,1+i,1);
00004e  f6406802          MOV      r8,#0xe02
000052  4640              MOV      r0,r8
000054  f7fffffe          BL       lc640_read_int
000058  b280              UXTH     r0,r0
00005a  283f              CMP      r0,#0x3f
00005c  d000              BEQ      |L2.96|
00005e  4628              MOV      r0,r5                 ;67
                  |L2.96|
000060  b201              SXTH     r1,r0                 ;67
000062  4640              MOV      r0,r8                 ;67
000064  f7fffffe          BL       lc640_write_int
;;;71     	}
;;;72     
;;;73     for(i=0;i<12;i++)
000068  4638              MOV      r0,r7
00006a  f7fffffe          BL       lc640_read_int
;;;74     	{
;;;75     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00006e  f44f6180          MOV      r1,#0x400
000072  eb011040          ADD      r0,r1,r0,LSL #5
000076  b285              UXTH     r5,r0
000078  f04f0042          MOV      r0,#0x42
00007c  f88d0004          STRB     r0,[sp,#4]
000080  f88d6005          STRB     r6,[sp,#5]
000084  f04f0057          MOV      r0,#0x57
000088  f88d0006          STRB     r0,[sp,#6]
00008c  f04f0600          MOV      r6,#0
000090  f88d6007          STRB     r6,[sp,#7]
000094  a901              ADD      r1,sp,#4
000096  4628              MOV      r0,r5
;;;76     	else	   		SET_REG(avar_stat,0,3+i,1);
000098  f7fffffe          BL       lc640_write_long_ptr
00009c  7fa0              LDRB     r0,[r4,#0x1e]
00009e  f88d0004          STRB     r0,[sp,#4]
0000a2  7fe0              LDRB     r0,[r4,#0x1f]
0000a4  f88d0005          STRB     r0,[sp,#5]
0000a8  f89d0000          LDRB     r0,[sp,#0]            ;73
0000ac  f88d0006          STRB     r0,[sp,#6]            ;73
0000b0  f89d0001          LDRB     r0,[sp,#1]            ;73
;;;77     	}
;;;78     
;;;79     for(i=0;i<6;i++)
0000b4  f88d0007          STRB     r0,[sp,#7]
;;;80     	{
;;;81     	if(av_inv[i])	SET_REG(avar_stat,1,15+i,1);
0000b8  a901              ADD      r1,sp,#4
0000ba  1d28              ADDS     r0,r5,#4
0000bc  f7fffffe          BL       lc640_write_long_ptr
0000c0  f1040134          ADD      r1,r4,#0x34
0000c4  f1050008          ADD      r0,r5,#8
0000c8  f7fffffe          BL       lc640_write_long_ptr
0000cc  f1040138          ADD      r1,r4,#0x38
0000d0  f105000c          ADD      r0,r5,#0xc
0000d4  f7fffffe          BL       lc640_write_long_ptr
;;;82     	else	   		SET_REG(avar_stat,0,15+i,1);
0000d8  4c14              LDR      r4,|L2.300|
0000da  8ba0              LDRH     r0,[r4,#0x1c]
0000dc  f88d0004          STRB     r0,[sp,#4]
0000e0  7e20              LDRB     r0,[r4,#0x18]
0000e2  f88d0005          STRB     r0,[sp,#5]
0000e6  7b20              LDRB     r0,[r4,#0xc]          ;79
0000e8  f88d0006          STRB     r0,[sp,#6]            ;79
0000ec  f88d6007          STRB     r6,[sp,#7]            ;79
;;;83     	}
;;;84     
;;;85     /*for(i=0;i<4;i++)
;;;86     	{
;;;87     	if(av_dt[i])	SET_REG(avar_stat,1,21+i,1);
;;;88     	else	   		SET_REG(avar_stat,0,21+i,1);
;;;89     	}  */
;;;90     for(i=0;i<4;i++)
0000f0  a901              ADD      r1,sp,#4
0000f2  f1050010          ADD      r0,r5,#0x10
0000f6  f7fffffe          BL       lc640_write_long_ptr
;;;91     	{
;;;92     	if(sk_av_stat[i]==sasON)	SET_REG(avar_stat,1,24+i,1);
0000fa  7a20              LDRB     r0,[r4,#8]
0000fc  f88d0004          STRB     r0,[sp,#4]
;;;93     	else	   		SET_REG(avar_stat,0,24+i,1);
000100  7920              LDRB     r0,[r4,#4]
000102  f88d0005          STRB     r0,[sp,#5]
000106  7820              LDRB     r0,[r4,#0]
000108  f88d0006          STRB     r0,[sp,#6]
00010c  f88d6007          STRB     r6,[sp,#7]
000110  a901              ADD      r1,sp,#4              ;90
000112  f1050014          ADD      r0,r5,#0x14           ;90
000116  e000              B        |L2.282|
                  |L2.280|
;;;94     	}
;;;95     
;;;96     if(uout_av)			SET_REG(avar_stat,1,28,1);
000118  e001              B        |L2.286|
                  |L2.282|
00011a  f7fffffe          BL       lc640_write_long_ptr
                  |L2.286|
00011e  bf00              NOP      
000120  e8bd81fc          POP      {r2-r8,pc}
;;;97     else	   			SET_REG(avar_stat,0,28,1);
;;;98     
;;;99     
;;;100    avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
;;;101    
;;;102    avar_ind_stat|=avar_stat_new;
;;;103    
;;;104    if((SK_ZVUK_EN[0])) avar_ind_stat&=(~(1UL<<24));
;;;105    if((SK_ZVUK_EN[1])) avar_ind_stat&=(~(1UL<<25));
;;;106    if((SK_ZVUK_EN[2])) avar_ind_stat&=(~(1UL<<26));
;;;107    if((SK_ZVUK_EN[3])) avar_ind_stat&=(~(1UL<<27));	
;;;108    
;;;109    
;;;110    avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
;;;111    
;;;112    if(!AV_OFF_AVT)avar_stat_offed|=0xeffffffe;
;;;113    
;;;114    avar_ind_stat&=avar_stat_offed; 
;;;115    
;;;116    avar_stat_old=avar_stat;
;;;117    }
;;;118    
                          ENDP

                  |L2.292|
                          DCD      bat
                  |L2.296|
                          DCD      bat_u_old_cnt
                  |L2.300|
                          DCD      0x40024020

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  avar_bat_ips_hndl PROC
;;;57     //-----------------------------------------------
;;;58     void avar_hndl(void)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;59     {
;;;60     //static unsigned avar_stat_old;
;;;61     char i;
;;;62     //unsigned avar_stat_new,avar_stat_offed;
;;;63     
;;;64     if(net_av)		SET_REG(avar_stat,1,0,1);
000004  4602              MOV      r2,r0
000006  48a0              LDR      r0,|L3.648|
000008  4ca0              LDR      r4,|L3.652|
00000a  4ba1              LDR      r3,|L3.656|
00000c  f8df8284          LDR      r8,|L3.660|
000010  f890103d          LDRB     r1,[r0,#0x3d]
;;;65     else	   			SET_REG(avar_stat,0,0,1);
000014  f04f0742          MOV      r7,#0x42
000018  f44f6560          MOV      r5,#0xe00
;;;66     
;;;67     for(i=0;i<2;i++)
00001c  f04f0900          MOV      r9,#0
;;;68     	{
;;;69     	if(bat[i]._av&1)	SET_REG(avar_stat,1,1+i,1);
000020  f44f6a80          MOV      r10,#0x400
000024  2a01              CMP      r2,#1
000026  d002              BEQ      |L3.46|
000028  2a00              CMP      r2,#0
00002a  d07e              BEQ      |L3.298|
00002c  e129              B        |L3.642|
                  |L3.46|
00002e  f0410101          ORR      r1,r1,#1
000032  f880103d          STRB     r1,[r0,#0x3d]
000036  f04f0001          MOV      r0,#1
00003a  7020              STRB     r0,[r4,#0]
00003c  7018              STRB     r0,[r3,#0]
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       lc640_read_int
000044  f1000001          ADD      r0,r0,#1
000048  b284              UXTH     r4,r0
00004a  2c3f              CMP      r4,#0x3f
00004c  d901              BLS      |L3.82|
;;;70     	else	   		SET_REG(avar_stat,0,1+i,1);
00004e  f04f0400          MOV      r4,#0
                  |L3.82|
000052  b221              SXTH     r1,r4
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       lc640_write_int
00005a  f6406602          MOV      r6,#0xe02
00005e  4630              MOV      r0,r6                 ;67
000060  f7fffffe          BL       lc640_read_int
000064  b281              UXTH     r1,r0                 ;67
000066  293f              CMP      r1,#0x3f              ;67
;;;71     	}
;;;72     
;;;73     for(i=0;i<12;i++)
000068  d000              BEQ      |L3.108|
00006a  4621              MOV      r1,r4
                  |L3.108|
;;;74     	{
;;;75     	if(bps[i]._av&0xef)	SET_REG(avar_stat,1,3+i,1);
00006c  b209              SXTH     r1,r1
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       lc640_write_int
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       lc640_read_int
00007a  eb0a1040          ADD      r0,r10,r0,LSL #5
00007e  b284              UXTH     r4,r0
000080  f88d7000          STRB     r7,[sp,#0]
000084  f88d9001          STRB     r9,[sp,#1]
000088  f04f0043          MOV      r0,#0x43
00008c  f88d0002          STRB     r0,[sp,#2]
000090  f88d9003          STRB     r9,[sp,#3]
000094  4669              MOV      r1,sp
000096  4620              MOV      r0,r4
;;;76     	else	   		SET_REG(avar_stat,0,3+i,1);
000098  f7fffffe          BL       lc640_write_long_ptr
00009c  f8cd9000          STR      r9,[sp,#0]
0000a0  4669              MOV      r1,sp
0000a2  1d20              ADDS     r0,r4,#4
0000a4  f7fffffe          BL       lc640_write_long_ptr
0000a8  f8b8003c          LDRH     r0,[r8,#0x3c]         ;73
0000ac  f88d0000          STRB     r0,[sp,#0]            ;73
0000b0  f8980038          LDRB     r0,[r8,#0x38]         ;73
;;;77     	}
;;;78     
;;;79     for(i=0;i<6;i++)
0000b4  f88d0001          STRB     r0,[sp,#1]
;;;80     	{
;;;81     	if(av_inv[i])	SET_REG(avar_stat,1,15+i,1);
0000b8  f898002c          LDRB     r0,[r8,#0x2c]
0000bc  f88d0002          STRB     r0,[sp,#2]
0000c0  f88d9003          STRB     r9,[sp,#3]
0000c4  4669              MOV      r1,sp
0000c6  f1040008          ADD      r0,r4,#8
0000ca  f7fffffe          BL       lc640_write_long_ptr
0000ce  f8980028          LDRB     r0,[r8,#0x28]
0000d2  f88d0000          STRB     r0,[sp,#0]
;;;82     	else	   		SET_REG(avar_stat,0,15+i,1);
0000d6  f8980024          LDRB     r0,[r8,#0x24]
0000da  f88d0001          STRB     r0,[sp,#1]
0000de  f8980020          LDRB     r0,[r8,#0x20]
0000e2  f88d0002          STRB     r0,[sp,#2]
0000e6  f88d9003          STRB     r9,[sp,#3]            ;79
0000ea  4669              MOV      r1,sp                 ;79
0000ec  f104000c          ADD      r0,r4,#0xc            ;79
;;;83     	}
;;;84     
;;;85     /*for(i=0;i<4;i++)
;;;86     	{
;;;87     	if(av_dt[i])	SET_REG(avar_stat,1,21+i,1);
;;;88     	else	   		SET_REG(avar_stat,0,21+i,1);
;;;89     	}  */
;;;90     for(i=0;i<4;i++)
0000f0  f7fffffe          BL       lc640_write_long_ptr
;;;91     	{
;;;92     	if(sk_av_stat[i]==sasON)	SET_REG(avar_stat,1,24+i,1);
0000f4  f04f0541          MOV      r5,#0x41
0000f8  f88d5000          STRB     r5,[sp,#0]
0000fc  f88d5001          STRB     r5,[sp,#1]
;;;93     	else	   		SET_REG(avar_stat,0,24+i,1);
000100  f88d5002          STRB     r5,[sp,#2]
000104  f88d5003          STRB     r5,[sp,#3]
000108  4669              MOV      r1,sp
00010a  f1040010          ADD      r0,r4,#0x10
00010e  f7fffffe          BL       lc640_write_long_ptr
000112  f88d5000          STRB     r5,[sp,#0]            ;90
000116  f88d5001          STRB     r5,[sp,#1]            ;90
;;;94     	}
;;;95     
;;;96     if(uout_av)			SET_REG(avar_stat,1,28,1);
00011a  f88d5002          STRB     r5,[sp,#2]
00011e  f88d5003          STRB     r5,[sp,#3]
000122  4669              MOV      r1,sp
000124  f1040014          ADD      r0,r4,#0x14
000128  e000              B        |L3.300|
                  |L3.298|
00012a  e022              B        |L3.370|
                  |L3.300|
00012c  f7fffffe          BL       lc640_write_long_ptr
000130  f88d5000          STRB     r5,[sp,#0]            ;92
000134  f88d5001          STRB     r5,[sp,#1]            ;92
000138  f88d5002          STRB     r5,[sp,#2]            ;92
00013c  f88d5003          STRB     r5,[sp,#3]            ;92
;;;97     else	   			SET_REG(avar_stat,0,28,1);
000140  4669              MOV      r1,sp
000142  f1040018          ADD      r0,r4,#0x18
;;;98     
;;;99     
;;;100    avar_stat_new=(avar_stat^avar_stat_old)&avar_stat;
000146  f7fffffe          BL       lc640_write_long_ptr
00014a  f88d5000          STRB     r5,[sp,#0]
00014e  f88d5001          STRB     r5,[sp,#1]
;;;101    
;;;102    avar_ind_stat|=avar_stat_new;
000152  f88d5002          STRB     r5,[sp,#2]
000156  f88d5003          STRB     r5,[sp,#3]
;;;103    
;;;104    if((SK_ZVUK_EN[0])) avar_ind_stat&=(~(1UL<<24));
00015a  4669              MOV      r1,sp
00015c  f104001c          ADD      r0,r4,#0x1c
000160  f7fffffe          BL       lc640_write_long_ptr
;;;105    if((SK_ZVUK_EN[1])) avar_ind_stat&=(~(1UL<<25));
000164  2301              MOVS     r3,#1
000166  461a              MOV      r2,r3
000168  2105              MOVS     r1,#5
00016a  a04b              ADR      r0,|L3.664|
00016c  f7fffffe          BL       snmp_trap_send
;;;106    if((SK_ZVUK_EN[2])) avar_ind_stat&=(~(1UL<<26));
000170  e087              B        |L3.642|
                  |L3.370|
000172  f0210101          BIC      r1,r1,#1
000176  f880103d          STRB     r1,[r0,#0x3d]
00017a  f8849000          STRB     r9,[r4,#0]
;;;107    if((SK_ZVUK_EN[3])) avar_ind_stat&=(~(1UL<<27));	
00017e  f8839000          STRB     r9,[r3,#0]
000182  4628              MOV      r0,r5
000184  f7fffffe          BL       lc640_read_int
;;;108    
;;;109    
;;;110    avar_stat_offed=~((avar_stat^avar_stat_old)&avar_stat_old);
000188  b286              UXTH     r6,r0
00018a  4634              MOV      r4,r6
                  |L3.396|
00018c  eb0a1044          ADD      r0,r10,r4,LSL #5
000190  b285              UXTH     r5,r0
;;;111    
;;;112    if(!AV_OFF_AVT)avar_stat_offed|=0xeffffffe;
000192  4669              MOV      r1,sp
000194  4628              MOV      r0,r5
000196  f7fffffe          BL       lc640_read_long_ptr
00019a  f89d0000          LDRB     r0,[sp,#0]
00019e  2842              CMP      r0,#0x42
;;;113    
;;;114    avar_ind_stat&=avar_stat_offed; 
0001a0  d106              BNE      |L3.432|
0001a2  f89d0001          LDRB     r0,[sp,#1]
0001a6  b918              CBNZ     r0,|L3.432|
0001a8  f89d0002          LDRB     r0,[sp,#2]
;;;115    
;;;116    avar_stat_old=avar_stat;
;;;117    }
0001ac  2843              CMP      r0,#0x43
0001ae  d009              BEQ      |L3.452|
                  |L3.432|
0001b0  b11c              CBZ      r4,|L3.442|
0001b2  f1a40401          SUB      r4,r4,#1
0001b6  b2a4              UXTH     r4,r4
0001b8  e001              B        |L3.446|
                  |L3.442|
0001ba  f04f043f          MOV      r4,#0x3f
                  |L3.446|
0001be  42b4              CMP      r4,r6
0001c0  d1e4              BNE      |L3.396|
0001c2  e05e              B        |L3.642|
                  |L3.452|
0001c4  4669              MOV      r1,sp
0001c6  f1050010          ADD      r0,r5,#0x10
0001ca  f7fffffe          BL       lc640_read_long_ptr
0001ce  f89d0000          LDRB     r0,[sp,#0]
0001d2  2841              CMP      r0,#0x41
0001d4  d10b              BNE      |L3.494|
0001d6  f89d0001          LDRB     r0,[sp,#1]
0001da  2841              CMP      r0,#0x41
0001dc  d107              BNE      |L3.494|
0001de  f89d0002          LDRB     r0,[sp,#2]
0001e2  2841              CMP      r0,#0x41
0001e4  d103              BNE      |L3.494|
0001e6  f89d0003          LDRB     r0,[sp,#3]
0001ea  2841              CMP      r0,#0x41
0001ec  d009              BEQ      |L3.514|
                  |L3.494|
0001ee  b11c              CBZ      r4,|L3.504|
0001f0  f1a40401          SUB      r4,r4,#1
0001f4  b2a4              UXTH     r4,r4
0001f6  e001              B        |L3.508|
                  |L3.504|
0001f8  f04f043f          MOV      r4,#0x3f
                  |L3.508|
0001fc  42b4              CMP      r4,r6
0001fe  d1c5              BNE      |L3.396|
000200  e03f              B        |L3.642|
                  |L3.514|
000202  f8b8003c          LDRH     r0,[r8,#0x3c]
000206  f88d0000          STRB     r0,[sp,#0]
00020a  f8980038          LDRB     r0,[r8,#0x38]
00020e  f88d0001          STRB     r0,[sp,#1]
000212  f898002c          LDRB     r0,[r8,#0x2c]
000216  f88d0002          STRB     r0,[sp,#2]
00021a  f88d9003          STRB     r9,[sp,#3]
00021e  4669              MOV      r1,sp
000220  f1050010          ADD      r0,r5,#0x10
000224  f7fffffe          BL       lc640_write_long_ptr
000228  f8980028          LDRB     r0,[r8,#0x28]
00022c  f88d0000          STRB     r0,[sp,#0]
000230  f8980024          LDRB     r0,[r8,#0x24]
000234  f88d0001          STRB     r0,[sp,#1]
000238  f8980020          LDRB     r0,[r8,#0x20]
00023c  f88d0002          STRB     r0,[sp,#2]
000240  f88d9003          STRB     r9,[sp,#3]
000244  4669              MOV      r1,sp
000246  f1050014          ADD      r0,r5,#0x14
00024a  f7fffffe          BL       lc640_write_long_ptr
00024e  f88d7000          STRB     r7,[sp,#0]
000252  f88d7001          STRB     r7,[sp,#1]
000256  f88d7002          STRB     r7,[sp,#2]
00025a  f88d7003          STRB     r7,[sp,#3]
00025e  4669              MOV      r1,sp
000260  f1050018          ADD      r0,r5,#0x18
000264  f7fffffe          BL       lc640_write_long_ptr
000268  f88d7000          STRB     r7,[sp,#0]
00026c  f88d7001          STRB     r7,[sp,#1]
000270  f88d7002          STRB     r7,[sp,#2]
000274  f88d7003          STRB     r7,[sp,#3]
000278  4669              MOV      r1,sp
00027a  f105001c          ADD      r0,r5,#0x1c
00027e  f7fffffe          BL       lc640_write_long_ptr
                  |L3.642|
000282  bf00              NOP      
000284  e8bd8ff8          POP      {r3-r11,pc}
;;;118    
                          ENDP

                  |L3.648|
                          DCD      bat_ips
                  |L3.652|
                          DCD      ips_bat_av_stat
                  |L3.656|
                          DCD      ips_bat_av_vzvod
                  |L3.660|
                          DCD      0x40024000
                  |L3.664|
000298  42415420          DCB      "BAT ",185,"1 Alarm, lost",0
00029c  b9312041
0002a0  6c61726d
0002a4  2c206c6f
0002a8  737400  
0002ab  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  avar_stat
                          DCD      0x00000000
                  avar_ind_stat
                          DCD      0x00000000
                  avar_stat_old
                          DCD      0x00000000
                  avar_stat_new
                          DCD      0x00000000
                  avar_stat_offed
                          DCD      0x00000000
                  av_inv
                          DCD      0x00000000
000018  0000              DCB      0x00,0x00
